<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="mode">
   <description>Tests the use of modes in xsl:template and xsl:apply-templates</description>
   <environment name="mode-01">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <a test="a attribute">a-text</a>
</doc>
]]></content>
      </source>
   </environment>
   <environment name="mode-02">
      <source role=".">
         <content><![CDATA[ 
<doc>
<a test="a attribute">brown-fox</a>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-03">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <x test="x attribute">content
    <y>why</y>
  </x>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-04">
      <source role=".">
         <content><![CDATA[<doc>
<!-- This test executed properly. -->
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-05">
      <source role=".">
         <content><![CDATA[<doc>
<?PITarget Processing-Instruction 1 type="text/xml"?>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-06">
      <source role=".">
         <content><![CDATA[<doc>
  <child1>This is the child number 1.</child1>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-07">
      <source role=".">
         <content><![CDATA[<doc attribute1="attribute1"/>]]></content>
      </source>
   </environment>
   <environment name="mode-08">
      <source role=".">
         <content><![CDATA[<sss><sss><i>Not OK</i></sss></sss>]]></content>
      </source>
   </environment>
   <environment name="mode-09">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <a test="a attribute">a-text</a>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-10">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <a test="a attribute">lazy-dog</a>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-11">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <str>brown-fox</str>
  <yet>lazy-dog</yet>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-12">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <a/>
  <b/>
</doc>]]></content>
      </source>
   </environment>
   <environment name="mode-13">
      <source role=".">
         <content><![CDATA[ 
<wrap>
<doc>
  <a/>
  <b/>
</doc>
</wrap>]]></content>
      </source>
   </environment>
   
   <environment name="mode-14">
      <source role="." file="mode-14.xml"/>
   </environment>
   
   <environment name="mode-14s">
      <source role="." file="mode-14.xml" streaming="true"/>
   </environment>
   
   <environment name="mode-15">
      <source role=".">
         <content><![CDATA[<doc>
   <para><?pi PI ?>text <foo><baz/></foo></para>
</doc>]]></content>
      </source>
   </environment>

   <test-case name="mode-0001">
      <description>Test xsl:mode on-no-match with comment nodes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0001.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c><!--abracadabra--></c><d/><s/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0002">
      <description>Test xsl:mode on-no-match with comment nodes; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0002.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c><!--abracadabra--></c><d/><s/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0003">
      <description>Test xsl:mode on-no-match with processing instruction nodes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0003.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c><?nnn abracadabra?></c><d/><s/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0004">
      <description>Test xsl:mode on-no-match with processing instruction nodes; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0004.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c><?nnn abracadabra?></c><d/><s/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0005">
      <description>Test xsl:mode on-no-match with text nodes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0005.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c>abracadabra</c><d/><s>abracadabra</s></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0006">
      <description>Test xsl:mode on-no-match with text nodes; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0006.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c>abracadabra</c><d/><s>abracadabra</s></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0007">
      <description>Test xsl:mode on-no-match with attribute nodes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0007.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c a="abracadabra"/><d/><s>abracadabra</s></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0008">
      <description>Test xsl:mode on-no-match with attribute nodes; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0008.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c a="abracadabra"/><d/><s>abracadabra</s></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0009">
      <description>Test xsl:mode on-no-match with namespace nodes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0009.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c xmlns:a="http://abracadabra.com/"/><d/><s/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0010">
      <description>Test xsl:mode on-no-match with namespace nodes; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0010.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><c xmlns:a="http://abracadabra.com/"/><d/><s/></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="mode-0011">
      <description>Use boolean function call in predicate. Saxon bug 1992</description>
      <created by="John Lumley" on="2014-01-31"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0011.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert>/*:stylesheet/*:template/*:attribute[@name="IS-AVT{local-name(.)}"]</assert>
      </result>
   </test-case>
   
   <test-case name="mode-0101">
      <description>Simple test of xsl:apply-templates with mode.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>mode-a:a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0102">
      <description>Simple test of xsl:apply-templates with mode not found.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0102.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0103">
      <description>Simple test of xsl:apply-templates with no mode.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0103.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>no-mode:a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0104">
      <description>Simple test of xsl:apply-templates with mode, using the default rule.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0104.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>mode-a:a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0105">
      <description>Simple test of xsl:apply-templates with mode, using a qualified name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0105.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:foo="http://foo.com">mode-foo:a:a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0106">
      <description>Simple test of xsl:apply-templates with mode, using a non-qualified name, but with a qualified name in scope.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0106.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:foo="http://foo.com">mode-a:a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0107">
      <description>Test apply-templates to the root of a temporary tree</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0107.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><tree><x/></tree></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0108">
      <description>Test apply-templates when context node is a temporary tree</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0108.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><x/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0201">
      <description>Simple test of xsl:apply-templates with moded template calling xsl:apply-templates on another template.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>mode-b: no-mode:brown-fox</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0301">
      <description>FileName: MODES10 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7 Modes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-03"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0301.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-0301.out"/>
      </result>
   </test-case>

   <test-case name="mode-0401">
      <description>FileName: modes11 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0401.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out> This test executed properly. </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0501">
      <description>FileName: modes12 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-05"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0501.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Processing-Instruction 1 type="text/xml"</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0601">
      <description>FileName: modes13 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-06"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0601.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  This is the child number 1.
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0701">
      <description>FileName: modes14 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-07"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0701.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>attribute1</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-0801a">
      <description>Ambiguous match</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-08"/>
      <dependencies>
         <spec value="XSLT10 XSLT20"/>
         <on-multiple-match value="recover"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0801.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-0801.out"/>
      </result>
   </test-case>

   <test-case name="mode-0801b">
      <description>Ambiguous match</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-08"/>
      <dependencies>
         <spec value="XSLT10 XSLT20"/>
         <on-multiple-match value="error"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0801.xsl"/>
      </test>
      <result>
         <error code="XTRE0540"/>
      </result>
   </test-case>
   
   <test-case name="mode-0801c">
      <description>Ambiguous match</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-08"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0801.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-0801.out"/>
      </result>
   </test-case>

   <test-case name="mode-0901">
      <description>FileName: MODES16 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7 Modes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-09"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-0901.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>mode-moo:a, a-text</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1001">
      <description>FileName: MODES17 Document: http://www.w3.org/TR/xslt DocVersion: 19991116 Section: 5.7 Modes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1001.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>_1st_mode: mode-a:lazy-dog</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1101">
      <description>Match a template whose mode list is just X, where a named mode X is set at the time the transformation is launched.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="mode-11"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1101.xsl"/>
         <initial-mode name="X"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
	 	 mode-X (doc): 
	  inside named-templates: mode-X: brown-fox</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1102">
      <description>Match a template whose mode list is X and other names, but not #default. Where a named mode X is set at the time the transformation is launched.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="mode-11"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1102.xsl"/>
         <initial-mode name="X"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
	 	 mode-bXc (doc): 
	  inside named-templates: mode-X: brown-fox</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1103">
      <description>Match a template whose mode list is #all. Where a named mode X is set at the time the transformation is launched.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="mode-11"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1103.xsl"/>
         <initial-mode name="X"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
	 	 mode-#all (doc): 
	  inside named-templates: mode-X: brown-fox</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1104">
      <description>Set stylesheet params, at least one of which will be used in the match="/" mode="X" template. Where a named mode X is set at the time the transformation is launched.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="Tim Mills" on="2013-01-29" change="Fixed param/@select"/>
      <environment ref="mode-11"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1104.xsl"/>
         <param name="Sparam" as="xs:string" select="'assignedValue'"/>
         <initial-mode name="X"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
	 	 mode-X (/): assignedValue
	 	 mode-#all (doc): 
	  inside named-templates: mode-X: brown-fox</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1105">
      <description>
      	Set an initial context node, and have a template to match that node in mode X. 
      	Where a named mode X is set at the time the transformation is launched.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment>
         <source role="." select="/doc">
            <content><![CDATA[<doc><str>brown-fox</str><yet>lazy-dog</yet></doc>]]></content>
         </source>
      </environment>   
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1105.xsl"/>
         <initial-mode name="X"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><mode-X at="doc"/><inside>mode-X: brown-fox</inside></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1201">
      <description>Basic test for mode="#all" (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-12"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><m1><a mode="m1"/><b mode="#all"/></m1><m2><a mode="m2"/><b mode="#all"/></m2></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1202">
      <description>Test for mode="#all" appearing before the specific templates (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-12"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1202.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><m1><a mode="m1"/><b mode="m1"/></m1><m2><a mode="m2"/><b mode="m2"/></m2></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1203">
      <description>Test for mode="#all" appearing before the specific templates and with higher priority (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-12"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1203.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><m1><a mode="m1"/><b mode="#all"/></m1><m2><a mode="m2"/><b mode="#all"/></m2></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1204">
      <description>Test for mode="#all" with next-match (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-12"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1204.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><m1><a mode="m1"/><b mode="#all"/><b mode="m1"/></m1><m2><a mode="m2"/><b mode="#all"/><b mode="m2"/></m2></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1301">
      <description>Test for mode="#all" with built-in template rules (XSLT 2.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-13"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><m1><a mode="m1"/><b mode="#all"/></m1><m2><a mode="m2"/><b mode="m2"/></m2></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1401">
      <description>Test for mode="#current" in a function reverts to the unnamed mode (XSLT 2.0, clarfied by erratum XT.E19)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1401.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-1401.out"/>
      </result>
   </test-case>

   <test-case name="mode-1402">
      <description>Test for mode="#current" in an attribute set retains the current mode (XSLT 2.0, clarfied by erratum XT.E19)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1402.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><chapter a="m:Chapter 1"/><chapter a="m:Chapter 2"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1403">
      <description>Test for mode="#current" in a global variable uses the unnamed mode (XSLT 2.0, clarfied by erratum XT.E19)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="modes37.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><chapter a="#default:Chapter 1"/><chapter a="#default:Chapter 1"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1404">
      <description>Test for mode="#current" in a global variable uses the unnamed mode (XSLT 2.0, clarfied by erratum XT.E19)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="modes37.xsl"/>
         <initial-mode name="m"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><chapter a="#default:Chapter 1"/><chapter a="#default:Chapter 1"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1405">
      <description>Test xsl:mode on-no-match="text-only-copy"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1405.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
      </result>
   </test-case>

   <test-case name="mode-1406">
      <description>Test xsl:mode on-no-match="text-only-copy", streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1406.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
      </result>
   </test-case>

   <test-case name="mode-1407">
      <description>Test xsl:mode on-no-match="text-only-copy"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1407.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
      </result>
   </test-case>

   <test-case name="mode-1408">
      <description>Test xsl:mode on-no-match="text-only-copy"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1408.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
      </result>
   </test-case>

   <test-case name="mode-1409">
      <description>Test xsl:mode on-no-match="text-only-copy"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1409.xsl"/>
      </test>
      <result>
         <assert>starts-with(., "&#xa; THE FIRST BOOK OF MOSES, CALLED GENESIS.")</assert>
      </result>
   </test-case>

   <test-case name="mode-1410">
      <description>Test xsl:mode on-no-match="text-only-copy"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1410.xsl"/>
      </test>
      <result>
         <assert>starts-with(., "&#xa; THE FIRST BOOK OF MOSES, CALLED GENESIS.")</assert>
      </result>
   </test-case>

   <test-case name="mode-1411">
      <description>Test xsl:mode on-no-match="copy"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1411.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml file="mode-1411.out"/>
      </result>
   </test-case>

   <test-case name="mode-1412">
      <description>Test xsl:mode on-no-match="copy"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1412.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml file="mode-1412.out"/>
      </result>
   </test-case>

   <test-case name="mode-1413">
      <description>Test xsl:mode on-no-match="copy"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1413.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml file="mode-1413.out"/>
      </result>
   </test-case>

   <test-case name="mode-1414">
      <description>Test xsl:mode on-no-match="copy"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1414.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml file="mode-1414.out"/>
      </result>
   </test-case>

   <test-case name="mode-1415">
      <description>Test xsl:mode on-no-match="copy"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1415.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-1415.out"/>
      </result>
   </test-case>

   <test-case name="mode-1416">
      <description>Test xsl:mode on-no-match="copy"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1416.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-1416.out"/>
      </result>
   </test-case>

   <test-case name="mode-1417">
      <description>Test xsl:mode on-no-match="discard"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1417.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml><![CDATA[<book><bktlong/><bktshort/></book>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1418">
      <description>Test xsl:mode on-no-match="discard"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1418.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml><![CDATA[<book><bktlong/><bktshort/></book>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1419">
      <description>Test xsl:mode on-no-match="discard"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1419.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Genesis</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1420">
      <description>Test xsl:mode on-no-match="discard"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1420.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>Genesis</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1421">
      <description>Test xsl:mode on-no-match="discard"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1421.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml file="mode-1421.out"/>
      </result>
   </test-case>

   <test-case name="mode-1422">
      <description>Test xsl:mode on-no-match="discard"; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1422.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <assert-xml file="mode-1422.out"/>
      </result>
   </test-case>

   <test-case name="mode-1423">
      <description>Test xsl:mode on-no-match=fail, no failure occurs</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1423.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-1423.out"/>
      </result>
   </test-case>

   <test-case name="mode-1424">
      <description>Test xsl:mode on-no-match=fail, no failure occurs; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1424.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-1424.out"/>
      </result>
   </test-case>

   <test-case name="mode-1425">
      <description>Test xsl:mode on-no-match=fail, failure occurs but is caught</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1425.xsl"/>
      </test>
      <result>
         <assert-xml file="mode-1425.out"/>
      </result>
   </test-case>

   <test-case name="mode-1426">
      <description>Test xsl:mode on-no-match=fail, failure occurs but is caught; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1426.xsl"/>
      </test>
      <result>
         <error code="SXST0060"/>
      </result>
   </test-case>

   <test-case name="mode-1427">
      <description>Test xsl:mode warning-on-no-match=yes</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1427.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <all-of>
            <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
            <assert-message>
               <assert-xml><![CDATA[** Expect no-matching-template warnings **]]></assert-xml>
            </assert-message>
         </all-of>
      </result>
   </test-case>

   <test-case name="mode-1428">
      <description>Test xsl:mode warning-on-no-match=yes; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1428.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <all-of>
            <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
            <assert-message>
               <assert-xml><![CDATA[** Expect no-matching-template warnings **]]></assert-xml>
            </assert-message>
         </all-of>
      </result>
   </test-case>

   <test-case name="mode-1429">
      <description>Test xsl:mode warning-on-no-match=no</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1429.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <all-of>
            <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
            <assert-message>
               <assert-xml><![CDATA[** Expect NO no-matching-template warnings **]]></assert-xml>
            </assert-message>
         </all-of>
      </result>
   </test-case>

   <test-case name="mode-1430">
      <description>Test xsl:mode warning-on-no-match=no; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1430.xsl"/>
         <initial-mode name="s"/>
      </test>
      <result>
         <all-of>
            <assert>starts-with(., "&#xa; The First Book of Moses, Called GENESIS.")</assert>
            <assert-message>
               <assert-xml><![CDATA[** Expect NO no-matching-template warnings **]]></assert-xml>
            </assert-message>
         </all-of>
      </result>
   </test-case>

   <test-case name="mode-1431">
      <description>Test xsl:mode on-no-match=fail, failure occurs</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1431.xsl"/>
      </test>
      <result>
         <error code="XTDE0555"/>
      </result>
   </test-case>

   <test-case name="mode-1432">
      <description>Test xsl:mode on-no-match=fail, failure occurs; streaming</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1432.xsl"/>
      </test>
      <result>
         <error code="XTDE0555"/>
      </result>
   </test-case>

   <test-case name="mode-1433">
      <description>Test default-mode attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1433.xsl"/>
         <initial-mode name="dm"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>
 The First Book of Moses, Called GENESIS.
 <book><QED>Genesis</QED></book>
 Chapter 1
 Chapter 2
</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1434">
      <description>Test default-mode attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1434.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>
 The First Book of Moses, Called GENESIS.
 <book><QED>Genesis</QED></book>
 Chapter 1
 Chapter 2
</root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="mode-1435">
      <description>Test default-mode attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1435.xsl"/>
         <initial-mode xmlns:a="http://example.com/a" name="a:mode"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root>
 The First Book of Moses, Called GENESIS.
 <book><QED>Genesis</QED></book>
 Chapter 1
 Chapter 2
</root>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="mode-1436">
      <description>Test xsl:mode on-no-match=deep-skip</description>
      <created by="Michael Kay" on="2013-06-15"/>
      <environment ref="mode-14"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1436.xsl"/>
      </test>
      <result>
         <assert>empty(/node())</assert>
      </result>
   </test-case>
   
   <test-case name="mode-1437">
      <description>Test xsl:mode on-no-match=deep-skip; streaming</description>
      <created by="Michael Kay" on="2013-06-15"/>
      <environment ref="mode-14s"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1437.xsl"/>
      </test>
      <result>
         <assert>empty(/node())</assert>
      </result>
   </test-case>

   <test-case name="mode-1501">
      <description>Test for mode="#all" with match="node()"</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="mode-15"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="mode-1501.xsl"/>
         <initial-mode name="baz"/>
      </test>
      <result>
         <assert-xml><![CDATA[<doc>
   <para><?pi PI ?>text <bar><baz/></bar></para>
</doc>]]></assert-xml>
      </result>
   </test-case>
   
   
</test-set>
