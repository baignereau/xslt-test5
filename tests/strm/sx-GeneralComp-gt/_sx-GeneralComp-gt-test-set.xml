<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="sx-GeneralComp-gt">
   <description>">" operator with streaming</description>
   
   <environment name="sx-gc-gt-A">
     <stylesheet file="sx-gc-gt-A.xsl"/>
   </environment>
   
   <environment name="sx-gc-gt-B">
     <stylesheet file="sx-gc-gt-B.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   <test-case name="sx-gc-gt-003">
      <description>Basic Test of xsl:stream instruction with ">"</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-003"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-004">
      <description>Test of xsl:stream instruction with ">", filtered with a motionless predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-004"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-005">
      <description>Test of xsl:stream instruction with ">", filtered with a positional predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-005"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-006">
      <description>Test of xsl:stream instruction with ">", filtered with a positional predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-006"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-007">
      <description>Test of xsl:stream instruction with ">", filtered with a positional predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-007"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-008">
      <description>Test of xsl:stream instruction with ">", filtered with data() to make the predicates motionless</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-008"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-009">
      <description>Test of xsl:stream instruction with ">", filtered with text() to make the predicates motionless</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-009"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-010">
      <description>Test of xsl:stream instruction with ">", filtered with number() to make the predicates motionless</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-010"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-011">
      <description>">" selecting nothing, returning the $zero case</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-011"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-012">
      <description>">" selecting both streamed nodes and literals</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-012"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-013">
      <description>">" selecting both streamed nodes and literals while also filtering</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-013"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-015">
      <description>Test of xsl:stream instruction with ">" of a computed value</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-015"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-016">
      <description>Test of xsl:stream instruction with ">" of a computed value</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-016"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-017">
      <description>Test of xsl:stream instruction with ">" using copy-of to make it streamable</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-017"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-018">
      <description>Test of xsl:stream instruction with ">" over attribute values</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-018"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-019">
      <description>Test of xsl:stream instruction with ">" over attribute values, filtered</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-019"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-020">
      <description>">" over attribute values, computed</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-020"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-021">
      <description>">" over values that depend on a condition</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-021"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-022">
      <description>">" with a loop used to compute each value</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-022"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-023">
      <description>">" over a crawling expression</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-A"/>
      <test>
         <initial-template name="s-023"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
    <test-case name="sx-gc-gt-103">
      <description>Basic Test of xsl:stream instruction with ">"</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-003"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-104">
      <description>Test of xsl:stream instruction with ">", filtered with a motionless predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-004"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-105">
      <description>Test of xsl:stream instruction with ">", filtered with a positional predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-005"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-106">
      <description>Test of xsl:stream instruction with ">", filtered with a positional predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-006"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

   <test-case name="sx-gc-gt-107">
      <description>Test of xsl:stream instruction with ">", filtered with a positional predicate</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-007"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-108">
      <description>Test of xsl:stream instruction with ">", filtered with data() to make the predicates motionless</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-008"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-109">
      <description>Test of xsl:stream instruction with ">", filtered with text() to make the predicates motionless</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-009"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-110">
      <description>Test of xsl:stream instruction with ">", filtered with number() to make the predicates motionless</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-010"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-111">
      <description>">" selecting nothing, returning the $zero case</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-011"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-112">
      <description>">" selecting both streamed nodes and literals</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-012"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-113">
      <description>">" selecting both streamed nodes and literals while also filtering</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-013"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-115">
      <description>Test of xsl:stream instruction with ">" of a computed value</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-015"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-116">
      <description>Test of xsl:stream instruction with ">" of a computed value</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-016"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-117">
      <description>Test of xsl:stream instruction with ">" using copy-of to make it streamable</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-017"/>
      </test>
      <result>
         <assert>/out = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-118">
      <description>Test of xsl:stream instruction with ">" over attribute values</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-018"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-119">
      <description>Test of xsl:stream instruction with ">" over attribute values, filtered</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-019"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-120">
      <description>">" over attribute values, computed</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-020"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-121">
      <description>">" over values that depend on a condition</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-021"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-122">
      <description>">" with a loop used to compute each value</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-022"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-123">
      <description>">" over a crawling expression</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <environment ref="sx-gc-gt-B"/>
      <test>
         <initial-template name="s-023"/>
      </test>
      <result>
         <assert>/out = 'true'</assert>
      </result>
   </test-case>

  

   <test-case name="sx-gc-gt-901">
      <description>Test of xsl:stream instruction with ">", filtered with predicate that atomizes.</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <test>
         <stylesheet file="sx-gc-gt-901.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="sx-gc-gt-902">
      <description>Test of xsl:stream instruction with ">", filtered with predicate that uses last().</description>
      <created by="Michael Kay" on="2013-12-14"/>
      <test>
         <stylesheet file="sx-gc-gt-902.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>


</test-set>