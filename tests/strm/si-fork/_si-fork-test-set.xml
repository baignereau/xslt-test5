<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="si-fork">
   <description>xsl:value-of instruction with streaming</description>
   
   <environment name="si-fork-A">
     <stylesheet file="si-fork-A.xsl"/>
   </environment>
   
   <environment name="si-fork-B">
     <stylesheet file="si-fork-B.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   <test-case name="si-fork-001">
      <description>Basic Test of xsl:stream instruction with xsl:fork</description>
      <keywords>multiple-xsl-sequence-children fn:avg PathExpr xsl:value-of striding consuming</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-001"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><a>9.06</a><b>420</b></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-fork-002">
      <description>xsl:stream instruction with xsl:fork, some motionless prongs</description>
      <keywords>multiple-xsl-sequence-children fn:avg PathExpr striding xsl:value-of consuming</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-002"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>[<a>9.06</a><b>420</b>]</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-fork-003">
      <description>xsl:stream instruction with xsl:fork, split input to multiple result files</description>
      <keywords>multiple-xsl-sequence-children xsl:result-document motionless-predicate striding PathExpr fn:number consuming</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-003"/>
      </test>
      <result>
         <all-of>
            <assert-result-document uri="credits.xml">
               <all-of>
                  <assert>count(/credits/transaction) = 15</assert>
                  <assert>/credits/transaction[1]/@value = 13.24</assert>
         	   </all-of>
         	</assert-result-document>
         	<assert-result-document uri="debits.xml">
         		<all-of>
                  <assert>count(/debits/transaction) = 4</assert>
                  <assert>/debits/transaction[1]/@value = -15.00</assert>
         	   </all-of>
         	</assert-result-document>
         </all-of>	
      </result>
   </test-case>
   
   <test-case name="si-fork-004">
      <description>xsl:stream instruction with xsl:fork, all prongs motionless</description>
      <keywords>multiple-xsl-sequence-children motionless lre literals</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-004"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><in>[<a/><b/>]</in></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-fork-005">
      <description>xsl:stream / xsl:for-each / xsl:fork </description>
      <keywords>xsl:for-each multiple-xsl-sequence-children AxisStep striding consuming</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-005"/>
      </test>
      <result>
         <all-of>
            <assert>/out/book[@title="Pride and Prejudice"]/@price-per-page = "0.0141"</assert>
            <assert>count(/out/book) = 6</assert>
            <assert>count(//*) = 7</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-006">
      <description>xsl:fork with only one branch consuming</description>
      <keywords>multiple-xsl-sequence-children consuming motionless mixed-sweep</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-006"/>
      </test>
      <result>
         <all-of>
            <assert>/out/book[1][@category="MMP"][.="Pride and Prejudice"]</assert>
            <assert>/out/book[2][@category="P"][.="Wuthering Heights"]</assert>
            <assert>count(/out/book) = 6</assert>
            <assert>count(//*) = 13</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-007">
      <description>xsl:fork with try/catch within a single prong</description>
      <keywords>multiple-xsl-sequence-children xsl:try fn:outermost crawling-then-striding XPTY0004 consuming</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-007"/>
      </test>
      <result>
		 <assert>/out = "2520 9.06"</assert>
      </result>
   </test-case>
   
   <test-case name="si-fork-008">
      <description>xsl:fork with try/catch around the whole xsl:fork</description>
      <keywords>multiple-xsl-sequence-children consuming fn:outermost crawling-then-striding</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-008"/>
      </test>
      <result>
		 <assert>/out = ""</assert>
      </result>
   </test-case>
   
   <test-case name="si-fork-009">
      <description>xsl:fork used to create attribute nodes</description>
      <keywords>multiple-xsl-sequence-children AxisStep consuming striding</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <environment ref="si-fork-A"/>
      <test>
         <initial-template name="f-009"/>
      </test>
      <result>
         <all-of>
		   <assert>/out/book[1][@title="Pride and Prejudice"][@author="Jane Austen"][@publisher="Modern Library"][@price="4.95"]</assert>
		   <assert>/out/book[6][@title="The Eyre Affair"][@author="Jasper Fforde"][@publisher="Penguin"][@price="16.47"]</assert>
		 </all-of>  
      </result>
   </test-case>
   
   <test-case name="si-fork-101">
      <description>xsl:stream instruction with xsl:fork with xsl:for-each-group</description>
      <created by="Michael Kay" on="2015-07-09"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-001"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>count(/out/CAT[@ID="MMP"]/ITEM) = 1</assert>
            <assert>count(/out/CAT[@ID="P"]/ITEM) = 4</assert>
            <assert>count(/out/CAT[@ID="H"]/ITEM) = 1</assert>
            <assert>every $I in //ITEM satisfies $I/@CAT = $I/../@ID</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-102">
      <description>xsl:stream instruction with xsl:fork with xsl:for-each-group, population is grounded</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-002"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>count(/out/CAT[@ID="MMP"]/ITEM) = 1</assert>
            <assert>count(/out/CAT[@ID="P"]/ITEM) = 4</assert>
            <assert>count(/out/CAT[@ID="H"]/ITEM) = 1</assert>
            <assert>every $I in //ITEM satisfies $I/@CAT = $I/../@ID</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-103">
      <description>xsl:stream/xsl:fork/xsl:for-each-group/@group-by, multiple result documents, population is striding</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-003"/>
      </test>
      <result>
         <all-of>
            <assert-result-document uri="P.xml">
               <all-of>
                  <assert>/CAT[@ID="P"]/ITEM</assert>
                  <assert>count(/CAT/ITEM) = 4</assert>
               </all-of>
            </assert-result-document>
            <assert-result-document uri="MMP.xml">
               <all-of>
                  <assert>/CAT[@ID="MMP"]/ITEM</assert>
                  <assert>count(/CAT/ITEM) = 1</assert>
               </all-of>
            </assert-result-document>
            <assert-result-document uri="H.xml">
               <all-of>
                  <assert>/CAT[@ID="H"]/ITEM</assert>
                  <assert>count(/CAT/ITEM) = 1</assert>
               </all-of>
            </assert-result-document>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-104">
      <description>xsl:stream/xsl:fork/xsl:for-each-group/@group-by, aggregate over current-group</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-004"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>/out/CAT[@ID="MMP"][@SIZE="1"]</assert>
            <assert>/out/CAT[@ID="P"][@SIZE="4"]</assert>
            <assert>/out/CAT[@ID="H"][@SIZE="1"]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-105">
      <description>xsl:stream/xsl:fork/xsl:for-each-group/@group-by, non-consuming action</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-005"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>/out/CAT[@ID="MMP"]</assert>
            <assert>/out/CAT[@ID="P"]</assert>
            <assert>/out/CAT[@ID="H"]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-106">
      <description>xsl:for-each-group with both striding and grounded items</description>
      <created by="Michael Kay" on="2016-02-25"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-006"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>count(/out/CAT[@ID="MMP"]/ITEM) = 1</assert>
            <assert>count(/out/CAT[@ID="P"]/ITEM) = 4</assert>
            <assert>count(/out/CAT[@ID="H"]/ITEM) = 2</assert>
            <assert>every $I in //ITEM satisfies $I/@CAT = $I/../@ID</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-107">
      <description>xsl:for-each-group with both striding and grounded items</description>
      <created by="Michael Kay" on="2016-02-25"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-007"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>count(/out/CAT[@ID="MMP"]/ITEM) = 1</assert>
            <assert>count(/out/CAT[@ID="P"]/ITEM) = 4</assert>
            <assert>count(/out/CAT[@ID="H"]/ITEM) = 2</assert>
            <assert>every $I in //ITEM satisfies $I/@CAT = $I/../@ID</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-108">
      <description>xsl:for-each-group downward selection from current-group(), mixed posture</description>
      <created by="Michael Kay" on="2016-02-25"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-008"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>count(/out/CAT[@ID="MMP"]/PRICE) = 1</assert>
            <assert>count(/out/CAT[@ID="P"]/PRICE) = 4</assert>
            <assert>count(/out/CAT[@ID="H"]/PRICE) = 2</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-109">
      <description>xsl:for-each-group downward selection from current-group(), mixed posture</description>
      <created by="Michael Kay" on="2016-02-25"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-009"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 3</assert>
            <assert>count(/out/CAT[@ID="MMP"]/PRICE) = 1</assert>
            <assert>count(/out/CAT[@ID="P"]/PRICE) = 4</assert>
            <assert>count(/out/CAT[@ID="H"]/PRICE) = 2</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-110">
      <description>xsl:for-each-group - group-by - composite key</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-010"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 5</assert>
            <assert>/out/CAT[@DATE="2002-12-31"][@LANG="English"][@AVG-PRICE="5.765"]</assert>
            <assert>/out/CAT[@DATE="1984-05-01"][@LANG="English"][@AVG-PRICE="4.95"]</assert>
            <assert>/out/CAT[@DATE="1998-09-01"][@LANG="English"][@AVG-PRICE="4.95"]</assert>
            <assert>/out/CAT[@DATE="2005-07-11"][@LANG="English"][@AVG-PRICE="16.47"]</assert>
            <assert>/out/CAT[@DATE="2003-02-25"][@LANG="English"][@AVG-PRICE="16.47"]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-111">
      <description>xsl:for-each-group - group-by - composite key</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-011"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/CAT) = 4</assert>
            <assert>/out/CAT[@ID="MMP"][@COUNT="1"][@AVG-QTY="187"][@AUTHOR="Jane Austen"][@PRICE="4.95"]</assert>
            <assert>/out/CAT[@ID="P"][@COUNT="1"][@AVG-QTY="113"][@AUTHOR="Charlotte Brontë"][@PRICE="6.58"]</assert>
            <assert>/out/CAT[@ID="P"][@COUNT="2"][@AVG-QTY="107"][@AUTHOR="Thomas Hardy"][@PRICE="4.95"]</assert>
            <assert>/out/CAT[@ID=("H P", "P H")][@COUNT="2"][@AVG-QTY="129"][@AUTHOR="Jasper Fforde"][@PRICE="16.47"]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-112">
      <description>xsl:for-each-group - group-by - position() of groups</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-012"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/g) = 4</assert>
            <assert>/out/g[@author="Jane Austen" and @position="1"]</assert>
            <assert>/out/g[@author="Charlotte Brontë" and @position="2"]</assert>
            <assert>/out/g[@author="Thomas Hardy" and @position="3"]</assert>
            <assert>/out/g[@author="Jasper Fforde" and @position="4"]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-113">
      <description>xsl:for-each-group - group-by - current-grouping-key() not available in called template</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-013"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/g/h) = 4</assert>
            <assert>every $h in /out/g/h satisfies $h/@key = "#absent#"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-114">
      <description>xsl:for-each-group - group-by - current-group() not available in called template</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-014"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/g/h) = 4</assert>
            <assert>every $h in /out/g/h satisfies $h/@size = "#absent#"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-115">
      <description>xsl:for-each-group - group-by - current-grouping-key() not available in applied template</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-015"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/g/h) = 4</assert>
            <assert>every $h in /out/g/h satisfies $h/@key = "#absent#"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-116">
      <description>xsl:for-each-group - group-by - current-group() not available in applied template</description>
      <created by="Michael Kay" on="2016-02-29"/>
      <environment ref="si-fork-B"/>
      <test>
         <initial-template name="g-016"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/g/h) = 4</assert>
            <assert>every $h in /out/g/h satisfies $h/@size = "#absent#"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-fork-901">
      <description>Non-streamable xsl:fork - returns streamed nodes</description>
      <keywords>multiple-xsl-sequence-children AxisStep striding XTSE3430 illegally-returning-streamed-nodes</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <test>
         <stylesheet file="si-fork-901.xsl"/>
         <initial-template name="f-901"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-902">
      <description>Non-streamable xsl:fork - one prong is non-streamable</description>
      <keywords>illegally-returning-streamed-nodes multiple-xsl-sequence-children striding AxisStep XTSE3430</keywords>
      <created by="Michael Kay" on="2014-01-13"/>
      <test>
         <stylesheet file="si-fork-902.xsl"/>
         <initial-template name="f-902"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-951">
      <description>Non-streamable xsl:fork/xsl:for-each-group: current-group() used repeatedly</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-951.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-952">
      <description>Non-streamable xsl:fork/xsl:for-each-group: 2 down-selections from current-group()</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-952.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-953">
      <description>Non-streamable xsl:fork/xsl:for-each-group: sorted groups (should this be an error?)</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-953.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-954">
      <description>Non-streamable xsl:fork/xsl:for-each-group: Down-selection from current-group() and from "."</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-954.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-955">
      <description>Non-streamable xsl:fork/xsl:for-each-group: Population is crawling</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-955.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-956">
      <description>Non-streamable xsl:fork/xsl:for-each-group: current-group() appears in higher-order operand</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-956.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-fork-957">
      <description>Non-streamable xsl:fork/xsl:for-each-group: group-by expression not motionless</description>
      <created by="Michael Kay" on="2016-02-24"/>
      <test>
         <stylesheet file="si-fork-957.xsl"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   



</test-set>