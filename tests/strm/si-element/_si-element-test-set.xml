<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="si-element">
   <description>xsl:element with streaming</description>
   
   <!--
     TODO: this is currently a mechanical conversion of the xsl:copy tests. Needs refining!
    -->
   
   <environment name="si-element-A">
     <stylesheet file="si-element-A.xsl"/>
   </environment>
   
   <environment name="si-element-B">
     <schema file="../docs/loans.xsd"/>
     <stylesheet file="si-element-B.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   
   
   <test-case name="si-element-001">
      <description>Use xsl:element: atomic values, consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-001"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-002">
      <description>Use xsl:element: atomic values, consuming and non-consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-002"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05 101 102"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-003">
      <description>Use xsl:element: climbing posture</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-003"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-004">
      <description>Use xsl:element: climbing posture</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-004"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05 101 102"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-005">
      <description>Use xsl:element: striding posture, element nodes</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-005"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><PRICE>4.95</PRICE><PRICE>6.58</PRICE><PRICE>4.95</PRICE><PRICE>4.95</PRICE><PRICE>16.47</PRICE><PRICE>16.47</PRICE></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-element-006">
      <description>Use xsl:element: striding posture, text nodes</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-006"/>
      </test>
      <result>
         <assert>/out = "4.956.584.954.9516.4716.47"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-007">
      <description>Use xsl:element: striding posture, text nodes plus atomic values</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-007"/>
      </test>
      <result>
         <assert>/out = "4.956.584.954.9516.4716.47101 102"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-008">
      <description>Use xsl:element: striding posture, element nodes plus grounded elements</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-008"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><PRICE>100.00</PRICE><PRICE>101.00</PRICE><PRICE>4.95</PRICE><PRICE>6.58</PRICE><PRICE>4.95</PRICE><PRICE>4.95</PRICE><PRICE>16.47</PRICE><PRICE>16.47</PRICE></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-element-009">
      <description>Use xsl:element: descendant text nodes</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-009"/>
      </test>
      <result>
         <assert>/out = "4.956.584.954.9516.4716.47"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-010">
      <description>Use xsl:element: descendant text nodes plus atomic values</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-010"/>
      </test>
      <result>
         <assert>/out = "100 1014.956.584.954.9516.4716.47"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-011">
      <description>Use xsl:element: whole document unchanged</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-011"/>
      </test>
      <result>
         <all-of>
           <assert>/out/head</assert>
           <assert>/out/BOOKLIST/BOOKS</assert>
           <assert>/out/BOOKLIST/CATEGORIES</assert>
           <assert>/out/tail</assert>
         </all-of>  
      </result>
   </test-case>
   
   <test-case name="si-element-022">
      <description>Use xsl:element: validation="strip" (non-schema-aware)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-022"/>
      </test>
      <result>
         <assert>/out/* instance of element(*, xs:untyped)</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-023">
      <description>Use xsl:element: validation="preserve" (non-schema-aware)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-023"/>
      </test>
      <result>
         <assert>/out/* instance of element(*, xs:untyped)</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-024">
      <description>Use xsl:element: validation="lax" (non-schema-aware)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-024"/>
      </test>
      <result>
         <assert>/out/* instance of element(*, xs:untyped)</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-025">
      <description>Use xsl:element: copy-namespaces=yes, argument grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-025"/>
      </test>
      <result>
         <assert>count(in-scope-prefixes(/out/*)) = 8</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-026">
      <description>Use xsl:element: copy-namespaces=no, argument grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-026"/>
      </test>
      <result>
         <any-of>            
            <assert>deep-equal(in-scope-prefixes(/out/*), ("xml", "gml"))</assert>
            <assert>deep-equal(in-scope-prefixes(/out/*), ("gml", "xml"))</assert>
         </any-of>   
      </result>
   </test-case>
   
   <test-case name="si-element-027">
      <description>Use xsl:element: type error, more than one item selected</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-027"/>
      </test>
      <result>
         <error code="XTTE3180"/>  
      </result>
   </test-case>
   
   <test-case name="si-element-029">
      <description>Use xsl:element: uses a streamable attribute set</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-029"/>
      </test>
      <result>
         <assert>/out/*[@x='1' and @y='2']</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-040">
      <description>Use xsl:element: with on-empty (nothing selected)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-040"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-041">
      <description>Use xsl:element: with on-empty</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-041"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-042">
      <description>Use xsl:element: with on-empty</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-042"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-043">
      <description>Use xsl:element: with on-empty</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-043"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-044">
      <description>Use xsl:element: with on-empty</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-044"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-045">
      <description>Use xsl:element: with on-empty</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-045"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-046">
      <description>Use xsl:element: with on-empty</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-046"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-047">
      <description>Use xsl:element: with on-empty (empty element constructed)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-047"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-048">
      <description>Use xsl:element: with on-empty (empty document constructed)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <environment ref="si-element-A"/>
      <test>
         <initial-template name="cy-048"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-101">
      <description>Use xsl:element: schema-aware, validation=strict</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-101"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
  <test-case name="si-element-102">
      <description>Use xsl:element: schema-aware, validation=lax</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-102"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-103">
      <description>Use xsl:element: schema-aware, validation=strip</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-103"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-104">
      <description>Use xsl:element: schema-aware, validation=preserve</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-104"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-105">
      <description>Use xsl:element: schema-aware, validation by type</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-105"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-106">
      <description>Use xsl:element: schema-aware, validation=strict, no element declaration available</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-106"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>
  
  <test-case name="si-element-107">
      <description>Use xsl:element: schema-aware, validation=lax, no element declaration available</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-107"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>

   <test-case name="si-element-108">
      <description>Use xsl:element: schema-aware, validation by type, invalid (wrong namespace)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-108"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>
  
  <test-case name="si-element-109">
      <description>Use xsl:element: schema-aware, validation=strict, no element declaration available, caught</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-109"/>
      </test>
      <result>
         <assert>/out = "XTTE1510"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-110">
      <description>Use xsl:element: schema-aware, validation by type, invalid, caught</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-110"/>
      </test>
      <result>
         <assert>/out = "XTTE1510"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-111">
      <description>Use xsl:element: schema-aware, validation=strict, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-111"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
  <test-case name="si-element-112">
      <description>Use xsl:element: schema-aware, validation=lax, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-112"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-113">
      <description>Use xsl:element: schema-aware, validation=strip, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-113"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-114">
      <description>Use xsl:element: schema-aware, validation=preserve, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-114"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-115">
      <description>Use xsl:element: schema-aware, validation by type, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-115"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-116">
      <description>Use xsl:element: schema-aware, validate attribute by type, success</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-116"/>
      </test>
      <result>
         <assert>/out/@version = "2.1"</assert>
      </result>
   </test-case>
   
   <test-case name="si-element-117">
      <description>Use xsl:element: schema-aware, validate attribute by type, failure</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-117"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>
   
   <test-case name="si-element-121">
      <description>Use xsl:element: schema-aware, validation=strict, element node</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-121"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
  <test-case name="si-element-122">
      <description>Use xsl:element: schema-aware, validation=lax, element node</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-122"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-123">
      <description>Use xsl:element: schema-aware, validation=strip, element node</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-123"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-124">
      <description>Use xsl:element: schema-aware, validation=preserve, element node</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-124"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-125">
      <description>Use xsl:element: schema-aware, validation by type, element node</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-125"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-element-126">
      <description>Use xsl:element: schema-aware, validation=strict, element node, no element declaration available</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-126"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>
  
  <test-case name="si-element-127">
      <description>Use xsl:element: schema-aware, validation=lax, element node, no element declaration available</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-127"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>

   <test-case name="si-element-128">
      <description>Use xsl:element: schema-aware, validation by type, element node, invalid (wrong namespace)</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <environment ref="si-element-B"/>
      <test>
         <initial-template name="cy-128"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>
   
   
   <test-case name="si-element-901">
      <description>Use xsl:element, uses non-streamable attribute set</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <test>
         <stylesheet file="si-element-901.xsl"/>
         <initial-template name="cy-901"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-element-902">
      <description>Use xsl:element, uses non-streamable attribute set</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <test>
         <stylesheet file="si-element-902.xsl"/>
         <initial-template name="cy-902"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="si-element-903">
      <description>Use xsl:element, uses attribute set that claims wrongly to be streamable</description>
      <created by="Michael Kay" on="2012-12-19"/>
      <test>
         <stylesheet file="si-element-903.xsl"/>
         <initial-template name="cy-903"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
  
  
   
</test-set>