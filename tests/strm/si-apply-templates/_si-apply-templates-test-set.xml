<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="si-apply-templates">
   <description>Tests xsl:stream instruction introduced in XSLT 3.0 with xsl:apply-templates.</description>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   <test-case name="si-apply-templates-001">
      <description>Test of xsl:stream instruction with xsl:apply-templates, 
      	navigating to attributes and ancestors. 
      	From a Saxon bug report by Roger Costello.</description>
      <keywords>motionless complex-use-case on-no-match-attribute shallow-copy climbing-childless PathExpr ancestor-axis climbing</keywords>
      <created by="Michael Kay" on="2013-10-31"/>  
      <test>
         <stylesheet file="si-apply-templates-001.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <all-of>
         	<assert>/Results/CATEGORIES/CATEGORY[1]/Attributes[Name='CODE' and Value='P' and Name='DESC' and Value='Paperback']</assert>
         	<assert>/Results/CATEGORIES/CATEGORY[1]/Ancestors[
         			*[1][self::Name][.='BOOKLIST'] and 
         			*[2][self::Attributes[not(*)]] and 
         			*[3][self::Name][.='CATEGORIES'] and
         			*[4][self::Attributes[Name='DESC' and Value='Miscellaneous categories']]]</assert>
            <assert>count(/Results/CATEGORIES/CATEGORY) = 3</assert>			
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-apply-templates-002">
      <description>Test of xsl:stream instruction with xsl:apply-templates, 
      	itself appearing within a streamable template.
      	From a Saxon bug report by Roger Costello.</description>
      <keywords>motionless complex-use-case _IMPROVE:equal-to-previous-test on-no-match-attribute shallow-copy leading-lone-slash climbing-childless PathExpr ancestor-axis climbing</keywords>
      <created by="Michael Kay" on="2013-11-04"/>
      <environment>
        <source role="." streaming="true">
            <content><![CDATA[<doc/>]]></content>
         </source>
      </environment>
      <test>
         <stylesheet file="si-apply-templates-002.xsl"/>
      </test>
      <result>
         <all-of>
         	<assert>/Results/CATEGORIES/CATEGORY[1]/Attributes[Name='CODE' and Value='P' and Name='DESC' and Value='Paperback']</assert>
         	<assert>/Results/CATEGORIES/CATEGORY[1]/Ancestors[
         			*[1][self::Name][.='BOOKLIST'] and 
         			*[2][self::Attributes[not(*)]] and 
         			*[3][self::Name][.='CATEGORIES'] and
         			*[4][self::Attributes[Name='DESC' and Value='Miscellaneous categories']]]</assert>
            <assert>count(/Results/CATEGORIES/CATEGORY) = 3</assert>			
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-apply-templates-003">
      <description>Test of xsl:stream instruction containing xsl:apply-templates in unstreamed mode.
      	From a Saxon bug report by Martin Honnen.</description>
      <created by="Michael Kay" on="2014-10-08"/>
      <test>
         <stylesheet file="si-apply-templates-003.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <all-of>
         	<assert>/out/p[1] = 'Document type: E'</assert>
         	<assert>/out/p[2] = 'Name: John Smith'</assert>
         	<assert>/out/p[3] = 'Document type: F'</assert>
         	<assert>/out/p[4] = 'Name: Joe Doe'</assert>
         </all-of>
      </result>
   </test-case>


</test-set>