<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="whitespace">
   <description>Tests whitespace</description>
   <environment name="whitespace-01">
      <source role=".">
         <content><![CDATA[<doc></doc>]]></content>
      </source>
   </environment>
   <environment name="whitespace-02">
      <source role=".">
         <content><![CDATA[<doc size="1.5">
  <top-node><rubbish>Content of Rubbish</rubbish></top-node>
</doc>]]></content>
      </source>
   </environment>
   <environment name="whitespace-03">
      <source role=".">
         <content><![CDATA[<doc>
   <foo/>
   <foo/>
</doc>]]></content>
      </source>
   </environment>

   <environment name="whitespace-10">
      <source role=".">
         <content><![CDATA[ 

<doc>
</doc>
]]></content>
      </source>
   </environment>

   <environment name="whitespace-12">
      <source role=".">
         <content><![CDATA[ 

<doc>
  <foo>a</foo>
</doc>
]]></content>
      </source>
   </environment>

   <environment name="whitespace-17">
      <source role=".">
         <content><![CDATA[<document>
  <section/>  <section/>  <section/>
</document>]]></content>
      </source>
   </environment>


   <test-case name="whitespace-0101">
      <description> Test that whitespace text nodes as children of xsl:analyze-string which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><E1>a*cada*</E1></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0102">
      <description> Test that whitespace text nodes as children of xsl:apply-imports which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0102.xsl"/>
         <stylesheet file="import1.xsl" role="secondary"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><b>primary stylesheet</b><a> imported stylesheet </a></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0103">
      <description> Test that whitespace text nodes as children of xsl:character-map which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="John Lumley" on="2014-09-02" change="Declared serialization requirement"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0103.xsl"/>
         <output serialize="yes"/>
      </test>
      <result>
         <serialization-matches>bbbbbb</serialization-matches>
      </result>
   </test-case>

   <test-case name="whitespace-0104">
      <description> Test that whitespace text nodes as children of xsl:next-match which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0104.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><b>primary stylesheet</b><a> next match </a></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0105">
      <description> Test that whitespace text nodes as children of xsl:apply-templates which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0105.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><b>template for root</b><a> template for doc </a></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0106">
      <description> Test that whitespace text nodes as children of xsl:attribute-set which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0106.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><item color="red" number="2"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0107">
      <description> Test that whitespace text nodes as children of xsl:call-template which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0107.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><b>template for doc</b><a> temp template </a></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0108">
      <description> Test that whitespace text nodes as children of xsl:choose which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0108.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><a>true</a></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0109">
      <description> Test that whitespace text nodes as children of xsl:stylesheet which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0109.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>test</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0110">
      <description>Test that whitespace text nodes as children of xsl:transform which has
         @xml:space=preserve do not interfere with processing of the instruction. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0110.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>test</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0111">
      <description>Test referencing an internal whitespace entity and an external parameter
         whitespace entity defined in a DTD.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="John Lumley" on="2014-09-02" change="Declared serialization requirement"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0111.xsl"/>
         <output serialize="yes"/>
      </test>
      <result>
         <all-of>
            <serialization-matches><![CDATA[<a>\r?\n\r?\n</a>]]></serialization-matches>
            <serialization-matches><![CDATA[<b>\stest</b>]]></serialization-matches>
         </all-of>
      </result>
   </test-case>

   <test-case name="whitespace-0112">
      <description> Test with LRE that contains two text nodes with comment in between. First text
         node has whitespace only. Cases tested: - second text node starts with whitespace - second
         text node does not start with whitespace</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0112.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><e>   h   </e><e>   h   </e></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0113">
      <description> Test with LRE that contains two text nodes with processing-instruction in
         between. First text node has whitespace only. Cases tested: - second text node starts with
         whitespace - second text node does not start with whitespace </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0113.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><e>   h</e><e>h   </e></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-0201">
      <description> Test with whitespace text nodes as preceding-siblings of xsl:param. Parent has
         @xml:space=preserve. Whitespace must be stripped. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0201.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/a = "Content of Rubbish"</assert>
            <assert>/out/b = "Content of Rubbish"</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="whitespace-0301">
      <description> Test with whitespace text nodes as preceding-siblings of xsl:sort. Parent has
         @xml:space=preserve. Whitespace must be stripped. </description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="whitespace-03"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-0301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<o>32 32 9 32 10 32 13 10 32 32 9 32 10 32 13 10</o>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1001">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1001.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out> </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1002">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1002.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1003">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1003.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
      x
      </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1004">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1004.xsl"/>
      </test>
      <result>
         <!-- result is a tree containing a document node owning a text node -->
         <all-of>
            <assert>matches(., '\n\s+x\n\s+')</assert>
            <assert>/child::text()</assert>
            <assert>count(/child::node()) = 1</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="whitespace-1005">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1005.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><foo/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1201">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-12"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out> test </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1202">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-12"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1202.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/text() = "test"</assert>
            <assert>not(/*)</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="whitespace-1203">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-12"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1203.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/text() = "a"</assert>
            <assert>not(/*)</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="whitespace-1301">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment>
         <source role=".">
            <content><![CDATA[ 

<doc/>]]></content>
         </source>
      </environment>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1701">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-17"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1701.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/text() = "'test''test'"</assert>
            <assert>not(/*)</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="whitespace-1702">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-17"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1702.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><!--[[[fred]]]--><!--[[[ fred ]]]--></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1703">
      <description/>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-17"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1703.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><?p [[[fred]]]?><?q [[[ fred ]]]?></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="whitespace-1705">
      <description>liberal use of whitespace in attribute values in the stylesheet: see erratum
         E2</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="whitespace-17"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="whitespace-1705.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<document><section/><section/><section/></document>]]></assert-xml>
      </result>
   </test-case>

</test-set>
