<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-grounded-consumingA||file:///D:/Projects/AbraSoft/__HG-ALL__/Exselt/Tests/_Test-Repository/XT3/tests/sandp/xp-striding-grounded-consuming/_xp-striding-grounded-consumingA-test-set.xml">
   <description>
                    CP: Striding, RP: Grounded, RS: Consuming
                    Attribute or namespace axis on child or descendant(-or-self) axis that is not in U{element}} is grounded (selects nothing) and remains consuming
                </description>
   <test-case name="xp-striding-grounded-consumingA001">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>comment()/attribute()</xpath>
            <xpath>comment()/attribute::foo</xpath>
            <xpath>comment()/attribute::ex:foo</xpath>
            <xpath>comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath>comment()/attribute::Q{http://example.com}*</xpath>
            <xpath>comment()/attribute::*:foo</xpath>
            <xpath>comment()/attribute::ex:*</xpath>
            <xpath>comment()/attribute::*</xpath>
            <xpath>comment()/attribute::node()</xpath>
            <xpath>comment()/attribute::attribute()</xpath>
            <xpath>comment()/attribute::attribute(*)</xpath>
            <xpath>comment()/attribute::attribute(ex:foo)</xpath>
            <xpath>comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>comment()/@foo</xpath>
            <xpath>comment()/@ex:foo</xpath>
            <xpath>comment()/@Q{http://example.com}foo</xpath>
            <xpath>comment()/@Q{http://example.com}*</xpath>
            <xpath>comment()/@*:foo</xpath>
            <xpath>comment()/@ex:*</xpath>
            <xpath>comment()/@*</xpath>
            <xpath>comment()/@node()</xpath>
            <xpath>comment()/@attribute()</xpath>
            <xpath>comment()/@attribute(*)</xpath>
            <xpath>comment()/@attribute(ex:foo)</xpath>
            <xpath>comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>comment()/namespace::foo</xpath>
            <xpath>comment()/namespace::Q{}foo</xpath>
            <xpath>comment()/namespace::Q{}*</xpath>
            <xpath>comment()/namespace::*:foo</xpath>
            <xpath>comment()/namespace::*</xpath>
            <xpath>comment()/namespace::node()</xpath>
            <xpath>comment()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA002">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::comment()/attribute()</xpath>
            <xpath>child::comment()/attribute::foo</xpath>
            <xpath>child::comment()/attribute::ex:foo</xpath>
            <xpath>child::comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::comment()/attribute::Q{http://example.com}*</xpath>
            <xpath>child::comment()/attribute::*:foo</xpath>
            <xpath>child::comment()/attribute::ex:*</xpath>
            <xpath>child::comment()/attribute::*</xpath>
            <xpath>child::comment()/attribute::node()</xpath>
            <xpath>child::comment()/attribute::attribute()</xpath>
            <xpath>child::comment()/attribute::attribute(*)</xpath>
            <xpath>child::comment()/attribute::attribute(ex:foo)</xpath>
            <xpath>child::comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::comment()/@foo</xpath>
            <xpath>child::comment()/@ex:foo</xpath>
            <xpath>child::comment()/@Q{http://example.com}foo</xpath>
            <xpath>child::comment()/@Q{http://example.com}*</xpath>
            <xpath>child::comment()/@*:foo</xpath>
            <xpath>child::comment()/@ex:*</xpath>
            <xpath>child::comment()/@*</xpath>
            <xpath>child::comment()/@node()</xpath>
            <xpath>child::comment()/@attribute()</xpath>
            <xpath>child::comment()/@attribute(*)</xpath>
            <xpath>child::comment()/@attribute(ex:foo)</xpath>
            <xpath>child::comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::comment()/namespace::foo</xpath>
            <xpath>child::comment()/namespace::Q{}foo</xpath>
            <xpath>child::comment()/namespace::Q{}*</xpath>
            <xpath>child::comment()/namespace::*:foo</xpath>
            <xpath>child::comment()/namespace::*</xpath>
            <xpath>child::comment()/namespace::node()</xpath>
            <xpath>child::comment()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA003">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>processing-instruction()/attribute()</xpath>
            <xpath>processing-instruction()/attribute::foo</xpath>
            <xpath>processing-instruction()/attribute::ex:foo</xpath>
            <xpath>processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath>processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath>processing-instruction()/attribute::*:foo</xpath>
            <xpath>processing-instruction()/attribute::ex:*</xpath>
            <xpath>processing-instruction()/attribute::*</xpath>
            <xpath>processing-instruction()/attribute::node()</xpath>
            <xpath>processing-instruction()/attribute::attribute()</xpath>
            <xpath>processing-instruction()/attribute::attribute(*)</xpath>
            <xpath>processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath>processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>processing-instruction()/@foo</xpath>
            <xpath>processing-instruction()/@ex:foo</xpath>
            <xpath>processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath>processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath>processing-instruction()/@*:foo</xpath>
            <xpath>processing-instruction()/@ex:*</xpath>
            <xpath>processing-instruction()/@*</xpath>
            <xpath>processing-instruction()/@node()</xpath>
            <xpath>processing-instruction()/@attribute()</xpath>
            <xpath>processing-instruction()/@attribute(*)</xpath>
            <xpath>processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath>processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>processing-instruction()/namespace::foo</xpath>
            <xpath>processing-instruction()/namespace::Q{}foo</xpath>
            <xpath>processing-instruction()/namespace::Q{}*</xpath>
            <xpath>processing-instruction()/namespace::*:foo</xpath>
            <xpath>processing-instruction()/namespace::*</xpath>
            <xpath>processing-instruction()/namespace::node()</xpath>
            <xpath>processing-instruction()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA004">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::processing-instruction()/attribute()</xpath>
            <xpath>child::processing-instruction()/attribute::foo</xpath>
            <xpath>child::processing-instruction()/attribute::ex:foo</xpath>
            <xpath>child::processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath>child::processing-instruction()/attribute::*:foo</xpath>
            <xpath>child::processing-instruction()/attribute::ex:*</xpath>
            <xpath>child::processing-instruction()/attribute::*</xpath>
            <xpath>child::processing-instruction()/attribute::node()</xpath>
            <xpath>child::processing-instruction()/attribute::attribute()</xpath>
            <xpath>child::processing-instruction()/attribute::attribute(*)</xpath>
            <xpath>child::processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath>child::processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::processing-instruction()/@foo</xpath>
            <xpath>child::processing-instruction()/@ex:foo</xpath>
            <xpath>child::processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath>child::processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath>child::processing-instruction()/@*:foo</xpath>
            <xpath>child::processing-instruction()/@ex:*</xpath>
            <xpath>child::processing-instruction()/@*</xpath>
            <xpath>child::processing-instruction()/@node()</xpath>
            <xpath>child::processing-instruction()/@attribute()</xpath>
            <xpath>child::processing-instruction()/@attribute(*)</xpath>
            <xpath>child::processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath>child::processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::processing-instruction()/namespace::foo</xpath>
            <xpath>child::processing-instruction()/namespace::Q{}foo</xpath>
            <xpath>child::processing-instruction()/namespace::Q{}*</xpath>
            <xpath>child::processing-instruction()/namespace::*:foo</xpath>
            <xpath>child::processing-instruction()/namespace::*</xpath>
            <xpath>child::processing-instruction()/namespace::node()</xpath>
            <xpath>child::processing-instruction()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA005">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::processing-instruction(xml-stylesheet)
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::processing-instruction(xml-stylesheet)/attribute()</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::ex:foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::Q{http://example.com}*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::*:foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::ex:*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::node()</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::attribute()</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::attribute(*)</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::attribute(ex:foo)</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@ex:foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@Q{http://example.com}foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@Q{http://example.com}*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@*:foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@ex:*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@node()</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@attribute()</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@attribute(*)</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@attribute(ex:foo)</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::Q{}foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::Q{}*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::*:foo</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::*</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::node()</xpath>
            <xpath>child::processing-instruction(xml-stylesheet)/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA006">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::processing-instruction('xml-stylesheet')
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::processing-instruction('xml-stylesheet')/attribute()</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::ex:foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::Q{http://example.com}*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::*:foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::ex:*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::node()</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::attribute()</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::attribute(*)</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::attribute(ex:foo)</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@ex:foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@Q{http://example.com}foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@Q{http://example.com}*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@*:foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@ex:*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@node()</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@attribute()</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@attribute(*)</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@attribute(ex:foo)</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::Q{}foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::Q{}*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::*:foo</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::*</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::node()</xpath>
            <xpath>child::processing-instruction('xml-stylesheet')/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA007">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>text()/attribute()</xpath>
            <xpath>text()/attribute::foo</xpath>
            <xpath>text()/attribute::ex:foo</xpath>
            <xpath>text()/attribute::Q{http://example.com}foo</xpath>
            <xpath>text()/attribute::Q{http://example.com}*</xpath>
            <xpath>text()/attribute::*:foo</xpath>
            <xpath>text()/attribute::ex:*</xpath>
            <xpath>text()/attribute::*</xpath>
            <xpath>text()/attribute::node()</xpath>
            <xpath>text()/attribute::attribute()</xpath>
            <xpath>text()/attribute::attribute(*)</xpath>
            <xpath>text()/attribute::attribute(ex:foo)</xpath>
            <xpath>text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>text()/@foo</xpath>
            <xpath>text()/@ex:foo</xpath>
            <xpath>text()/@Q{http://example.com}foo</xpath>
            <xpath>text()/@Q{http://example.com}*</xpath>
            <xpath>text()/@*:foo</xpath>
            <xpath>text()/@ex:*</xpath>
            <xpath>text()/@*</xpath>
            <xpath>text()/@node()</xpath>
            <xpath>text()/@attribute()</xpath>
            <xpath>text()/@attribute(*)</xpath>
            <xpath>text()/@attribute(ex:foo)</xpath>
            <xpath>text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>text()/namespace::foo</xpath>
            <xpath>text()/namespace::Q{}foo</xpath>
            <xpath>text()/namespace::Q{}*</xpath>
            <xpath>text()/namespace::*:foo</xpath>
            <xpath>text()/namespace::*</xpath>
            <xpath>text()/namespace::node()</xpath>
            <xpath>text()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA008">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::text()/attribute()</xpath>
            <xpath>child::text()/attribute::foo</xpath>
            <xpath>child::text()/attribute::ex:foo</xpath>
            <xpath>child::text()/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::text()/attribute::Q{http://example.com}*</xpath>
            <xpath>child::text()/attribute::*:foo</xpath>
            <xpath>child::text()/attribute::ex:*</xpath>
            <xpath>child::text()/attribute::*</xpath>
            <xpath>child::text()/attribute::node()</xpath>
            <xpath>child::text()/attribute::attribute()</xpath>
            <xpath>child::text()/attribute::attribute(*)</xpath>
            <xpath>child::text()/attribute::attribute(ex:foo)</xpath>
            <xpath>child::text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::text()/@foo</xpath>
            <xpath>child::text()/@ex:foo</xpath>
            <xpath>child::text()/@Q{http://example.com}foo</xpath>
            <xpath>child::text()/@Q{http://example.com}*</xpath>
            <xpath>child::text()/@*:foo</xpath>
            <xpath>child::text()/@ex:*</xpath>
            <xpath>child::text()/@*</xpath>
            <xpath>child::text()/@node()</xpath>
            <xpath>child::text()/@attribute()</xpath>
            <xpath>child::text()/@attribute(*)</xpath>
            <xpath>child::text()/@attribute(ex:foo)</xpath>
            <xpath>child::text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::text()/namespace::foo</xpath>
            <xpath>child::text()/namespace::Q{}foo</xpath>
            <xpath>child::text()/namespace::Q{}*</xpath>
            <xpath>child::text()/namespace::*:foo</xpath>
            <xpath>child::text()/namespace::*</xpath>
            <xpath>child::text()/namespace::node()</xpath>
            <xpath>child::text()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA009">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::comment()/attribute()</xpath>
            <xpath>descendant::comment()/attribute::foo</xpath>
            <xpath>descendant::comment()/attribute::ex:foo</xpath>
            <xpath>descendant::comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::comment()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::comment()/attribute::*:foo</xpath>
            <xpath>descendant::comment()/attribute::ex:*</xpath>
            <xpath>descendant::comment()/attribute::*</xpath>
            <xpath>descendant::comment()/attribute::node()</xpath>
            <xpath>descendant::comment()/attribute::attribute()</xpath>
            <xpath>descendant::comment()/attribute::attribute(*)</xpath>
            <xpath>descendant::comment()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::comment()/@foo</xpath>
            <xpath>descendant::comment()/@ex:foo</xpath>
            <xpath>descendant::comment()/@Q{http://example.com}foo</xpath>
            <xpath>descendant::comment()/@Q{http://example.com}*</xpath>
            <xpath>descendant::comment()/@*:foo</xpath>
            <xpath>descendant::comment()/@ex:*</xpath>
            <xpath>descendant::comment()/@*</xpath>
            <xpath>descendant::comment()/@node()</xpath>
            <xpath>descendant::comment()/@attribute()</xpath>
            <xpath>descendant::comment()/@attribute(*)</xpath>
            <xpath>descendant::comment()/@attribute(ex:foo)</xpath>
            <xpath>descendant::comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::comment()/namespace::foo</xpath>
            <xpath>descendant::comment()/namespace::Q{}foo</xpath>
            <xpath>descendant::comment()/namespace::Q{}*</xpath>
            <xpath>descendant::comment()/namespace::*:foo</xpath>
            <xpath>descendant::comment()/namespace::*</xpath>
            <xpath>descendant::comment()/namespace::node()</xpath>
            <xpath>descendant::comment()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA010">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::processing-instruction()/attribute()</xpath>
            <xpath>descendant::processing-instruction()/attribute::foo</xpath>
            <xpath>descendant::processing-instruction()/attribute::ex:foo</xpath>
            <xpath>descendant::processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::processing-instruction()/attribute::*:foo</xpath>
            <xpath>descendant::processing-instruction()/attribute::ex:*</xpath>
            <xpath>descendant::processing-instruction()/attribute::*</xpath>
            <xpath>descendant::processing-instruction()/attribute::node()</xpath>
            <xpath>descendant::processing-instruction()/attribute::attribute()</xpath>
            <xpath>descendant::processing-instruction()/attribute::attribute(*)</xpath>
            <xpath>descendant::processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::processing-instruction()/@foo</xpath>
            <xpath>descendant::processing-instruction()/@ex:foo</xpath>
            <xpath>descendant::processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath>descendant::processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath>descendant::processing-instruction()/@*:foo</xpath>
            <xpath>descendant::processing-instruction()/@ex:*</xpath>
            <xpath>descendant::processing-instruction()/@*</xpath>
            <xpath>descendant::processing-instruction()/@node()</xpath>
            <xpath>descendant::processing-instruction()/@attribute()</xpath>
            <xpath>descendant::processing-instruction()/@attribute(*)</xpath>
            <xpath>descendant::processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath>descendant::processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::processing-instruction()/namespace::foo</xpath>
            <xpath>descendant::processing-instruction()/namespace::Q{}foo</xpath>
            <xpath>descendant::processing-instruction()/namespace::Q{}*</xpath>
            <xpath>descendant::processing-instruction()/namespace::*:foo</xpath>
            <xpath>descendant::processing-instruction()/namespace::*</xpath>
            <xpath>descendant::processing-instruction()/namespace::node()</xpath>
            <xpath>descendant::processing-instruction()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA011">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::processing-instruction(xsl-stylesheet)
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute()</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::ex:foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::*:foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::ex:*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::node()</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::attribute()</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::attribute(*)</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@ex:foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@Q{http://example.com}foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@Q{http://example.com}*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@*:foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@ex:*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@node()</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@attribute()</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@attribute(*)</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@attribute(ex:foo)</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::Q{}foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::Q{}*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::*:foo</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::*</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::node()</xpath>
            <xpath>descendant::processing-instruction(xsl-stylesheet)/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA012">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::processing-instruction('xsl-stylesheet')
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute()</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::ex:foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::*:foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::ex:*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::node()</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::attribute()</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::attribute(*)</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@ex:foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@Q{http://example.com}foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@Q{http://example.com}*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@*:foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@ex:*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@node()</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@attribute()</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@attribute(*)</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@attribute(ex:foo)</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::Q{}foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::Q{}*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::*:foo</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::*</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::node()</xpath>
            <xpath>descendant::processing-instruction('xsl-stylesheet')/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA013">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::text()/attribute()</xpath>
            <xpath>descendant::text()/attribute::foo</xpath>
            <xpath>descendant::text()/attribute::ex:foo</xpath>
            <xpath>descendant::text()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::text()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::text()/attribute::*:foo</xpath>
            <xpath>descendant::text()/attribute::ex:*</xpath>
            <xpath>descendant::text()/attribute::*</xpath>
            <xpath>descendant::text()/attribute::node()</xpath>
            <xpath>descendant::text()/attribute::attribute()</xpath>
            <xpath>descendant::text()/attribute::attribute(*)</xpath>
            <xpath>descendant::text()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::text()/@foo</xpath>
            <xpath>descendant::text()/@ex:foo</xpath>
            <xpath>descendant::text()/@Q{http://example.com}foo</xpath>
            <xpath>descendant::text()/@Q{http://example.com}*</xpath>
            <xpath>descendant::text()/@*:foo</xpath>
            <xpath>descendant::text()/@ex:*</xpath>
            <xpath>descendant::text()/@*</xpath>
            <xpath>descendant::text()/@node()</xpath>
            <xpath>descendant::text()/@attribute()</xpath>
            <xpath>descendant::text()/@attribute(*)</xpath>
            <xpath>descendant::text()/@attribute(ex:foo)</xpath>
            <xpath>descendant::text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::text()/namespace::foo</xpath>
            <xpath>descendant::text()/namespace::Q{}foo</xpath>
            <xpath>descendant::text()/namespace::Q{}*</xpath>
            <xpath>descendant::text()/namespace::*:foo</xpath>
            <xpath>descendant::text()/namespace::*</xpath>
            <xpath>descendant::text()/namespace::node()</xpath>
            <xpath>descendant::text()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA014">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::comment()/attribute()</xpath>
            <xpath>descendant-or-self::comment()/attribute::foo</xpath>
            <xpath>descendant-or-self::comment()/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::comment()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::comment()/attribute::*:foo</xpath>
            <xpath>descendant-or-self::comment()/attribute::ex:*</xpath>
            <xpath>descendant-or-self::comment()/attribute::*</xpath>
            <xpath>descendant-or-self::comment()/attribute::node()</xpath>
            <xpath>descendant-or-self::comment()/attribute::attribute()</xpath>
            <xpath>descendant-or-self::comment()/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::comment()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::comment()/@foo</xpath>
            <xpath>descendant-or-self::comment()/@ex:foo</xpath>
            <xpath>descendant-or-self::comment()/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::comment()/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::comment()/@*:foo</xpath>
            <xpath>descendant-or-self::comment()/@ex:*</xpath>
            <xpath>descendant-or-self::comment()/@*</xpath>
            <xpath>descendant-or-self::comment()/@node()</xpath>
            <xpath>descendant-or-self::comment()/@attribute()</xpath>
            <xpath>descendant-or-self::comment()/@attribute(*)</xpath>
            <xpath>descendant-or-self::comment()/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::comment()/namespace::foo</xpath>
            <xpath>descendant-or-self::comment()/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::comment()/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::comment()/namespace::*:foo</xpath>
            <xpath>descendant-or-self::comment()/namespace::*</xpath>
            <xpath>descendant-or-self::comment()/namespace::node()</xpath>
            <xpath>descendant-or-self::comment()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA015">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::processing-instruction()/attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::ex:*</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::*</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::node()</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::processing-instruction()/@foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/@ex:foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::processing-instruction()/@*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/@ex:*</xpath>
            <xpath>descendant-or-self::processing-instruction()/@*</xpath>
            <xpath>descendant-or-self::processing-instruction()/@node()</xpath>
            <xpath>descendant-or-self::processing-instruction()/@attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction()/@attribute(*)</xpath>
            <xpath>descendant-or-self::processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::*</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::node()</xpath>
            <xpath>descendant-or-self::processing-instruction()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA016">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::processing-instruction(xsl-stylesheet)
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::ex:*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::node()</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@ex:foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@ex:*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@node()</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute(*)</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::*</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::node()</xpath>
            <xpath>descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA017">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::processing-instruction('xsl-stylesheet')
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::ex:*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::node()</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@ex:foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@ex:*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@node()</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute()</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute(*)</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::*:foo</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::*</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::node()</xpath>
            <xpath>descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA018">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::text()/attribute()</xpath>
            <xpath>descendant-or-self::text()/attribute::foo</xpath>
            <xpath>descendant-or-self::text()/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::text()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::text()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::text()/attribute::*:foo</xpath>
            <xpath>descendant-or-self::text()/attribute::ex:*</xpath>
            <xpath>descendant-or-self::text()/attribute::*</xpath>
            <xpath>descendant-or-self::text()/attribute::node()</xpath>
            <xpath>descendant-or-self::text()/attribute::attribute()</xpath>
            <xpath>descendant-or-self::text()/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::text()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::text()/@foo</xpath>
            <xpath>descendant-or-self::text()/@ex:foo</xpath>
            <xpath>descendant-or-self::text()/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::text()/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::text()/@*:foo</xpath>
            <xpath>descendant-or-self::text()/@ex:*</xpath>
            <xpath>descendant-or-self::text()/@*</xpath>
            <xpath>descendant-or-self::text()/@node()</xpath>
            <xpath>descendant-or-self::text()/@attribute()</xpath>
            <xpath>descendant-or-self::text()/@attribute(*)</xpath>
            <xpath>descendant-or-self::text()/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::text()/namespace::foo</xpath>
            <xpath>descendant-or-self::text()/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::text()/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::text()/namespace::*:foo</xpath>
            <xpath>descendant-or-self::text()/namespace::*</xpath>
            <xpath>descendant-or-self::text()/namespace::node()</xpath>
            <xpath>descendant-or-self::text()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
</test-set>