<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-climbing-motionlessC">
   <description>
                    CP: Striding, RP: Climbing, RS: Motionless
                    Climbing axis attribute, namespace on self or climbing axis with U{element}} is climbing and motionless
                </description>
   <dependencies>
      <sweep_and_posture satisfied="true" value="supports-sweep-and-posture-assessments"/>
   </dependencies>
   <test-case name="xp-striding-climbing-motionlessC001">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::foo/attribute()</xpath>
            <xpath>self::foo/attribute::foo</xpath>
            <xpath>self::foo/attribute::ex:foo</xpath>
            <xpath>self::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>self::foo/attribute::*:foo</xpath>
            <xpath>self::foo/attribute::ex:*</xpath>
            <xpath>self::foo/attribute::*</xpath>
            <xpath>self::foo/attribute::node()</xpath>
            <xpath>self::foo/attribute::attribute()</xpath>
            <xpath>self::foo/attribute::attribute(*)</xpath>
            <xpath>self::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>self::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::foo/@foo</xpath>
            <xpath>self::foo/@ex:foo</xpath>
            <xpath>self::foo/@Q{http://example.com}foo</xpath>
            <xpath>self::foo/@Q{http://example.com}*</xpath>
            <xpath>self::foo/@*:foo</xpath>
            <xpath>self::foo/@ex:*</xpath>
            <xpath>self::foo/@*</xpath>
            <xpath>self::foo/@node()</xpath>
            <xpath>self::foo/@attribute()</xpath>
            <xpath>self::foo/@attribute(*)</xpath>
            <xpath>self::foo/@attribute(ex:foo)</xpath>
            <xpath>self::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::foo/namespace::foo</xpath>
            <xpath>self::foo/namespace::Q{}foo</xpath>
            <xpath>self::foo/namespace::Q{}*</xpath>
            <xpath>self::foo/namespace::*:foo</xpath>
            <xpath>self::foo/namespace::*</xpath>
            <xpath>self::foo/namespace::node()</xpath>
            <xpath>self::foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC002">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::ex:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::ex:foo/attribute()</xpath>
            <xpath>self::ex:foo/attribute::foo</xpath>
            <xpath>self::ex:foo/attribute::ex:foo</xpath>
            <xpath>self::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>self::ex:foo/attribute::*:foo</xpath>
            <xpath>self::ex:foo/attribute::ex:*</xpath>
            <xpath>self::ex:foo/attribute::*</xpath>
            <xpath>self::ex:foo/attribute::node()</xpath>
            <xpath>self::ex:foo/attribute::attribute()</xpath>
            <xpath>self::ex:foo/attribute::attribute(*)</xpath>
            <xpath>self::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>self::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::ex:foo/@foo</xpath>
            <xpath>self::ex:foo/@ex:foo</xpath>
            <xpath>self::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>self::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>self::ex:foo/@*:foo</xpath>
            <xpath>self::ex:foo/@ex:*</xpath>
            <xpath>self::ex:foo/@*</xpath>
            <xpath>self::ex:foo/@node()</xpath>
            <xpath>self::ex:foo/@attribute()</xpath>
            <xpath>self::ex:foo/@attribute(*)</xpath>
            <xpath>self::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>self::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::ex:foo/namespace::foo</xpath>
            <xpath>self::ex:foo/namespace::Q{}foo</xpath>
            <xpath>self::ex:foo/namespace::Q{}*</xpath>
            <xpath>self::ex:foo/namespace::*:foo</xpath>
            <xpath>self::ex:foo/namespace::*</xpath>
            <xpath>self::ex:foo/namespace::node()</xpath>
            <xpath>self::ex:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC003">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::Q{http://example.com}foo/attribute()</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>self::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::Q{http://example.com}foo/@foo</xpath>
            <xpath>self::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>self::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>self::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>self::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>self::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>self::Q{http://example.com}foo/@*</xpath>
            <xpath>self::Q{http://example.com}foo/@node()</xpath>
            <xpath>self::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>self::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>self::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>self::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>self::Q{http://example.com}foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC004">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::Q{http://example.com}*/attribute()</xpath>
            <xpath>self::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>self::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>self::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>self::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>self::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>self::Q{http://example.com}*/attribute::*</xpath>
            <xpath>self::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>self::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>self::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>self::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>self::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::Q{http://example.com}*/@foo</xpath>
            <xpath>self::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>self::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>self::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>self::Q{http://example.com}*/@*:foo</xpath>
            <xpath>self::Q{http://example.com}*/@ex:*</xpath>
            <xpath>self::Q{http://example.com}*/@*</xpath>
            <xpath>self::Q{http://example.com}*/@node()</xpath>
            <xpath>self::Q{http://example.com}*/@attribute()</xpath>
            <xpath>self::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>self::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>self::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>self::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>self::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>self::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>self::Q{http://example.com}*/namespace::*</xpath>
            <xpath>self::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>self::Q{http://example.com}*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC005">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::*:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::*:foo/attribute()</xpath>
            <xpath>self::*:foo/attribute::foo</xpath>
            <xpath>self::*:foo/attribute::ex:foo</xpath>
            <xpath>self::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>self::*:foo/attribute::*:foo</xpath>
            <xpath>self::*:foo/attribute::ex:*</xpath>
            <xpath>self::*:foo/attribute::*</xpath>
            <xpath>self::*:foo/attribute::node()</xpath>
            <xpath>self::*:foo/attribute::attribute()</xpath>
            <xpath>self::*:foo/attribute::attribute(*)</xpath>
            <xpath>self::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>self::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::*:foo/@foo</xpath>
            <xpath>self::*:foo/@ex:foo</xpath>
            <xpath>self::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>self::*:foo/@Q{http://example.com}*</xpath>
            <xpath>self::*:foo/@*:foo</xpath>
            <xpath>self::*:foo/@ex:*</xpath>
            <xpath>self::*:foo/@*</xpath>
            <xpath>self::*:foo/@node()</xpath>
            <xpath>self::*:foo/@attribute()</xpath>
            <xpath>self::*:foo/@attribute(*)</xpath>
            <xpath>self::*:foo/@attribute(ex:foo)</xpath>
            <xpath>self::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::*:foo/namespace::foo</xpath>
            <xpath>self::*:foo/namespace::Q{}foo</xpath>
            <xpath>self::*:foo/namespace::Q{}*</xpath>
            <xpath>self::*:foo/namespace::*:foo</xpath>
            <xpath>self::*:foo/namespace::*</xpath>
            <xpath>self::*:foo/namespace::node()</xpath>
            <xpath>self::*:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC006">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::ex:*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::ex:*/attribute()</xpath>
            <xpath>self::ex:*/attribute::foo</xpath>
            <xpath>self::ex:*/attribute::ex:foo</xpath>
            <xpath>self::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>self::ex:*/attribute::*:foo</xpath>
            <xpath>self::ex:*/attribute::ex:*</xpath>
            <xpath>self::ex:*/attribute::*</xpath>
            <xpath>self::ex:*/attribute::node()</xpath>
            <xpath>self::ex:*/attribute::attribute()</xpath>
            <xpath>self::ex:*/attribute::attribute(*)</xpath>
            <xpath>self::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>self::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::ex:*/@foo</xpath>
            <xpath>self::ex:*/@ex:foo</xpath>
            <xpath>self::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>self::ex:*/@Q{http://example.com}*</xpath>
            <xpath>self::ex:*/@*:foo</xpath>
            <xpath>self::ex:*/@ex:*</xpath>
            <xpath>self::ex:*/@*</xpath>
            <xpath>self::ex:*/@node()</xpath>
            <xpath>self::ex:*/@attribute()</xpath>
            <xpath>self::ex:*/@attribute(*)</xpath>
            <xpath>self::ex:*/@attribute(ex:foo)</xpath>
            <xpath>self::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::ex:*/namespace::foo</xpath>
            <xpath>self::ex:*/namespace::Q{}foo</xpath>
            <xpath>self::ex:*/namespace::Q{}*</xpath>
            <xpath>self::ex:*/namespace::*:foo</xpath>
            <xpath>self::ex:*/namespace::*</xpath>
            <xpath>self::ex:*/namespace::node()</xpath>
            <xpath>self::ex:*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC007">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::*/attribute()</xpath>
            <xpath>self::*/attribute::foo</xpath>
            <xpath>self::*/attribute::ex:foo</xpath>
            <xpath>self::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::*/attribute::Q{http://example.com}*</xpath>
            <xpath>self::*/attribute::*:foo</xpath>
            <xpath>self::*/attribute::ex:*</xpath>
            <xpath>self::*/attribute::*</xpath>
            <xpath>self::*/attribute::node()</xpath>
            <xpath>self::*/attribute::attribute()</xpath>
            <xpath>self::*/attribute::attribute(*)</xpath>
            <xpath>self::*/attribute::attribute(ex:foo)</xpath>
            <xpath>self::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::*/@foo</xpath>
            <xpath>self::*/@ex:foo</xpath>
            <xpath>self::*/@Q{http://example.com}foo</xpath>
            <xpath>self::*/@Q{http://example.com}*</xpath>
            <xpath>self::*/@*:foo</xpath>
            <xpath>self::*/@ex:*</xpath>
            <xpath>self::*/@*</xpath>
            <xpath>self::*/@node()</xpath>
            <xpath>self::*/@attribute()</xpath>
            <xpath>self::*/@attribute(*)</xpath>
            <xpath>self::*/@attribute(ex:foo)</xpath>
            <xpath>self::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::*/namespace::foo</xpath>
            <xpath>self::*/namespace::Q{}foo</xpath>
            <xpath>self::*/namespace::Q{}*</xpath>
            <xpath>self::*/namespace::*:foo</xpath>
            <xpath>self::*/namespace::*</xpath>
            <xpath>self::*/namespace::node()</xpath>
            <xpath>self::*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC008">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: self::node()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>self::node()/attribute()</xpath>
            <xpath>self::node()/attribute::foo</xpath>
            <xpath>self::node()/attribute::ex:foo</xpath>
            <xpath>self::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>self::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>self::node()/attribute::*:foo</xpath>
            <xpath>self::node()/attribute::ex:*</xpath>
            <xpath>self::node()/attribute::*</xpath>
            <xpath>self::node()/attribute::node()</xpath>
            <xpath>self::node()/attribute::attribute()</xpath>
            <xpath>self::node()/attribute::attribute(*)</xpath>
            <xpath>self::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>self::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::node()/@foo</xpath>
            <xpath>self::node()/@ex:foo</xpath>
            <xpath>self::node()/@Q{http://example.com}foo</xpath>
            <xpath>self::node()/@Q{http://example.com}*</xpath>
            <xpath>self::node()/@*:foo</xpath>
            <xpath>self::node()/@ex:*</xpath>
            <xpath>self::node()/@*</xpath>
            <xpath>self::node()/@node()</xpath>
            <xpath>self::node()/@attribute()</xpath>
            <xpath>self::node()/@attribute(*)</xpath>
            <xpath>self::node()/@attribute(ex:foo)</xpath>
            <xpath>self::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>self::node()/namespace::foo</xpath>
            <xpath>self::node()/namespace::Q{}foo</xpath>
            <xpath>self::node()/namespace::Q{}*</xpath>
            <xpath>self::node()/namespace::*:foo</xpath>
            <xpath>self::node()/namespace::*</xpath>
            <xpath>self::node()/namespace::node()</xpath>
            <xpath>self::node()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC009">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::foo/attribute()</xpath>
            <xpath>parent::foo/attribute::foo</xpath>
            <xpath>parent::foo/attribute::ex:foo</xpath>
            <xpath>parent::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::foo/attribute::*:foo</xpath>
            <xpath>parent::foo/attribute::ex:*</xpath>
            <xpath>parent::foo/attribute::*</xpath>
            <xpath>parent::foo/attribute::node()</xpath>
            <xpath>parent::foo/attribute::attribute()</xpath>
            <xpath>parent::foo/attribute::attribute(*)</xpath>
            <xpath>parent::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::foo/@foo</xpath>
            <xpath>parent::foo/@ex:foo</xpath>
            <xpath>parent::foo/@Q{http://example.com}foo</xpath>
            <xpath>parent::foo/@Q{http://example.com}*</xpath>
            <xpath>parent::foo/@*:foo</xpath>
            <xpath>parent::foo/@ex:*</xpath>
            <xpath>parent::foo/@*</xpath>
            <xpath>parent::foo/@node()</xpath>
            <xpath>parent::foo/@attribute()</xpath>
            <xpath>parent::foo/@attribute(*)</xpath>
            <xpath>parent::foo/@attribute(ex:foo)</xpath>
            <xpath>parent::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::foo/namespace::foo</xpath>
            <xpath>parent::foo/namespace::Q{}foo</xpath>
            <xpath>parent::foo/namespace::Q{}*</xpath>
            <xpath>parent::foo/namespace::*:foo</xpath>
            <xpath>parent::foo/namespace::*</xpath>
            <xpath>parent::foo/namespace::node()</xpath>
            <xpath>parent::foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC010">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::ex:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::ex:foo/attribute()</xpath>
            <xpath>parent::ex:foo/attribute::foo</xpath>
            <xpath>parent::ex:foo/attribute::ex:foo</xpath>
            <xpath>parent::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::ex:foo/attribute::*:foo</xpath>
            <xpath>parent::ex:foo/attribute::ex:*</xpath>
            <xpath>parent::ex:foo/attribute::*</xpath>
            <xpath>parent::ex:foo/attribute::node()</xpath>
            <xpath>parent::ex:foo/attribute::attribute()</xpath>
            <xpath>parent::ex:foo/attribute::attribute(*)</xpath>
            <xpath>parent::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::ex:foo/@foo</xpath>
            <xpath>parent::ex:foo/@ex:foo</xpath>
            <xpath>parent::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>parent::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>parent::ex:foo/@*:foo</xpath>
            <xpath>parent::ex:foo/@ex:*</xpath>
            <xpath>parent::ex:foo/@*</xpath>
            <xpath>parent::ex:foo/@node()</xpath>
            <xpath>parent::ex:foo/@attribute()</xpath>
            <xpath>parent::ex:foo/@attribute(*)</xpath>
            <xpath>parent::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>parent::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::ex:foo/namespace::foo</xpath>
            <xpath>parent::ex:foo/namespace::Q{}foo</xpath>
            <xpath>parent::ex:foo/namespace::Q{}*</xpath>
            <xpath>parent::ex:foo/namespace::*:foo</xpath>
            <xpath>parent::ex:foo/namespace::*</xpath>
            <xpath>parent::ex:foo/namespace::node()</xpath>
            <xpath>parent::ex:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC011">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::Q{http://example.com}foo/attribute()</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::Q{http://example.com}foo/@foo</xpath>
            <xpath>parent::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>parent::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>parent::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>parent::Q{http://example.com}foo/@*</xpath>
            <xpath>parent::Q{http://example.com}foo/@node()</xpath>
            <xpath>parent::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>parent::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>parent::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>parent::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>parent::Q{http://example.com}foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC012">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::Q{http://example.com}*/attribute()</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::*</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::Q{http://example.com}*/@foo</xpath>
            <xpath>parent::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>parent::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>parent::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>parent::Q{http://example.com}*/@*:foo</xpath>
            <xpath>parent::Q{http://example.com}*/@ex:*</xpath>
            <xpath>parent::Q{http://example.com}*/@*</xpath>
            <xpath>parent::Q{http://example.com}*/@node()</xpath>
            <xpath>parent::Q{http://example.com}*/@attribute()</xpath>
            <xpath>parent::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>parent::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>parent::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::*</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>parent::Q{http://example.com}*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC013">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::*:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::*:foo/attribute()</xpath>
            <xpath>parent::*:foo/attribute::foo</xpath>
            <xpath>parent::*:foo/attribute::ex:foo</xpath>
            <xpath>parent::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::*:foo/attribute::*:foo</xpath>
            <xpath>parent::*:foo/attribute::ex:*</xpath>
            <xpath>parent::*:foo/attribute::*</xpath>
            <xpath>parent::*:foo/attribute::node()</xpath>
            <xpath>parent::*:foo/attribute::attribute()</xpath>
            <xpath>parent::*:foo/attribute::attribute(*)</xpath>
            <xpath>parent::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::*:foo/@foo</xpath>
            <xpath>parent::*:foo/@ex:foo</xpath>
            <xpath>parent::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>parent::*:foo/@Q{http://example.com}*</xpath>
            <xpath>parent::*:foo/@*:foo</xpath>
            <xpath>parent::*:foo/@ex:*</xpath>
            <xpath>parent::*:foo/@*</xpath>
            <xpath>parent::*:foo/@node()</xpath>
            <xpath>parent::*:foo/@attribute()</xpath>
            <xpath>parent::*:foo/@attribute(*)</xpath>
            <xpath>parent::*:foo/@attribute(ex:foo)</xpath>
            <xpath>parent::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::*:foo/namespace::foo</xpath>
            <xpath>parent::*:foo/namespace::Q{}foo</xpath>
            <xpath>parent::*:foo/namespace::Q{}*</xpath>
            <xpath>parent::*:foo/namespace::*:foo</xpath>
            <xpath>parent::*:foo/namespace::*</xpath>
            <xpath>parent::*:foo/namespace::node()</xpath>
            <xpath>parent::*:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC014">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::ex:*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::ex:*/attribute()</xpath>
            <xpath>parent::ex:*/attribute::foo</xpath>
            <xpath>parent::ex:*/attribute::ex:foo</xpath>
            <xpath>parent::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::ex:*/attribute::*:foo</xpath>
            <xpath>parent::ex:*/attribute::ex:*</xpath>
            <xpath>parent::ex:*/attribute::*</xpath>
            <xpath>parent::ex:*/attribute::node()</xpath>
            <xpath>parent::ex:*/attribute::attribute()</xpath>
            <xpath>parent::ex:*/attribute::attribute(*)</xpath>
            <xpath>parent::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::ex:*/@foo</xpath>
            <xpath>parent::ex:*/@ex:foo</xpath>
            <xpath>parent::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>parent::ex:*/@Q{http://example.com}*</xpath>
            <xpath>parent::ex:*/@*:foo</xpath>
            <xpath>parent::ex:*/@ex:*</xpath>
            <xpath>parent::ex:*/@*</xpath>
            <xpath>parent::ex:*/@node()</xpath>
            <xpath>parent::ex:*/@attribute()</xpath>
            <xpath>parent::ex:*/@attribute(*)</xpath>
            <xpath>parent::ex:*/@attribute(ex:foo)</xpath>
            <xpath>parent::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::ex:*/namespace::foo</xpath>
            <xpath>parent::ex:*/namespace::Q{}foo</xpath>
            <xpath>parent::ex:*/namespace::Q{}*</xpath>
            <xpath>parent::ex:*/namespace::*:foo</xpath>
            <xpath>parent::ex:*/namespace::*</xpath>
            <xpath>parent::ex:*/namespace::node()</xpath>
            <xpath>parent::ex:*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC015">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::*/attribute()</xpath>
            <xpath>parent::*/attribute::foo</xpath>
            <xpath>parent::*/attribute::ex:foo</xpath>
            <xpath>parent::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::*/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::*/attribute::*:foo</xpath>
            <xpath>parent::*/attribute::ex:*</xpath>
            <xpath>parent::*/attribute::*</xpath>
            <xpath>parent::*/attribute::node()</xpath>
            <xpath>parent::*/attribute::attribute()</xpath>
            <xpath>parent::*/attribute::attribute(*)</xpath>
            <xpath>parent::*/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::*/@foo</xpath>
            <xpath>parent::*/@ex:foo</xpath>
            <xpath>parent::*/@Q{http://example.com}foo</xpath>
            <xpath>parent::*/@Q{http://example.com}*</xpath>
            <xpath>parent::*/@*:foo</xpath>
            <xpath>parent::*/@ex:*</xpath>
            <xpath>parent::*/@*</xpath>
            <xpath>parent::*/@node()</xpath>
            <xpath>parent::*/@attribute()</xpath>
            <xpath>parent::*/@attribute(*)</xpath>
            <xpath>parent::*/@attribute(ex:foo)</xpath>
            <xpath>parent::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::*/namespace::foo</xpath>
            <xpath>parent::*/namespace::Q{}foo</xpath>
            <xpath>parent::*/namespace::Q{}*</xpath>
            <xpath>parent::*/namespace::*:foo</xpath>
            <xpath>parent::*/namespace::*</xpath>
            <xpath>parent::*/namespace::node()</xpath>
            <xpath>parent::*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC016">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::node()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::node()/attribute()</xpath>
            <xpath>parent::node()/attribute::foo</xpath>
            <xpath>parent::node()/attribute::ex:foo</xpath>
            <xpath>parent::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>parent::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>parent::node()/attribute::*:foo</xpath>
            <xpath>parent::node()/attribute::ex:*</xpath>
            <xpath>parent::node()/attribute::*</xpath>
            <xpath>parent::node()/attribute::node()</xpath>
            <xpath>parent::node()/attribute::attribute()</xpath>
            <xpath>parent::node()/attribute::attribute(*)</xpath>
            <xpath>parent::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>parent::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::node()/@foo</xpath>
            <xpath>parent::node()/@ex:foo</xpath>
            <xpath>parent::node()/@Q{http://example.com}foo</xpath>
            <xpath>parent::node()/@Q{http://example.com}*</xpath>
            <xpath>parent::node()/@*:foo</xpath>
            <xpath>parent::node()/@ex:*</xpath>
            <xpath>parent::node()/@*</xpath>
            <xpath>parent::node()/@node()</xpath>
            <xpath>parent::node()/@attribute()</xpath>
            <xpath>parent::node()/@attribute(*)</xpath>
            <xpath>parent::node()/@attribute(ex:foo)</xpath>
            <xpath>parent::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>parent::node()/namespace::foo</xpath>
            <xpath>parent::node()/namespace::Q{}foo</xpath>
            <xpath>parent::node()/namespace::Q{}*</xpath>
            <xpath>parent::node()/namespace::*:foo</xpath>
            <xpath>parent::node()/namespace::*</xpath>
            <xpath>parent::node()/namespace::node()</xpath>
            <xpath>parent::node()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC017">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::foo/attribute()</xpath>
            <xpath>ancestor::foo/attribute::foo</xpath>
            <xpath>ancestor::foo/attribute::ex:foo</xpath>
            <xpath>ancestor::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::foo/attribute::*:foo</xpath>
            <xpath>ancestor::foo/attribute::ex:*</xpath>
            <xpath>ancestor::foo/attribute::*</xpath>
            <xpath>ancestor::foo/attribute::node()</xpath>
            <xpath>ancestor::foo/attribute::attribute()</xpath>
            <xpath>ancestor::foo/attribute::attribute(*)</xpath>
            <xpath>ancestor::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::foo/@foo</xpath>
            <xpath>ancestor::foo/@ex:foo</xpath>
            <xpath>ancestor::foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor::foo/@*:foo</xpath>
            <xpath>ancestor::foo/@ex:*</xpath>
            <xpath>ancestor::foo/@*</xpath>
            <xpath>ancestor::foo/@node()</xpath>
            <xpath>ancestor::foo/@attribute()</xpath>
            <xpath>ancestor::foo/@attribute(*)</xpath>
            <xpath>ancestor::foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::foo/namespace::foo</xpath>
            <xpath>ancestor::foo/namespace::Q{}foo</xpath>
            <xpath>ancestor::foo/namespace::Q{}*</xpath>
            <xpath>ancestor::foo/namespace::*:foo</xpath>
            <xpath>ancestor::foo/namespace::*</xpath>
            <xpath>ancestor::foo/namespace::node()</xpath>
            <xpath>ancestor::foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC018">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::ex:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::ex:foo/attribute()</xpath>
            <xpath>ancestor::ex:foo/attribute::foo</xpath>
            <xpath>ancestor::ex:foo/attribute::ex:foo</xpath>
            <xpath>ancestor::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::ex:foo/attribute::*:foo</xpath>
            <xpath>ancestor::ex:foo/attribute::ex:*</xpath>
            <xpath>ancestor::ex:foo/attribute::*</xpath>
            <xpath>ancestor::ex:foo/attribute::node()</xpath>
            <xpath>ancestor::ex:foo/attribute::attribute()</xpath>
            <xpath>ancestor::ex:foo/attribute::attribute(*)</xpath>
            <xpath>ancestor::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::ex:foo/@foo</xpath>
            <xpath>ancestor::ex:foo/@ex:foo</xpath>
            <xpath>ancestor::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor::ex:foo/@*:foo</xpath>
            <xpath>ancestor::ex:foo/@ex:*</xpath>
            <xpath>ancestor::ex:foo/@*</xpath>
            <xpath>ancestor::ex:foo/@node()</xpath>
            <xpath>ancestor::ex:foo/@attribute()</xpath>
            <xpath>ancestor::ex:foo/@attribute(*)</xpath>
            <xpath>ancestor::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::ex:foo/namespace::foo</xpath>
            <xpath>ancestor::ex:foo/namespace::Q{}foo</xpath>
            <xpath>ancestor::ex:foo/namespace::Q{}*</xpath>
            <xpath>ancestor::ex:foo/namespace::*:foo</xpath>
            <xpath>ancestor::ex:foo/namespace::*</xpath>
            <xpath>ancestor::ex:foo/namespace::node()</xpath>
            <xpath>ancestor::ex:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC019">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::Q{http://example.com}foo/attribute()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@node()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC020">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::Q{http://example.com}*/attribute()</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::*</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::Q{http://example.com}*/@foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>ancestor::Q{http://example.com}*/@*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/@ex:*</xpath>
            <xpath>ancestor::Q{http://example.com}*/@*</xpath>
            <xpath>ancestor::Q{http://example.com}*/@node()</xpath>
            <xpath>ancestor::Q{http://example.com}*/@attribute()</xpath>
            <xpath>ancestor::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>ancestor::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>ancestor::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::*</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>ancestor::Q{http://example.com}*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC021">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::*:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::*:foo/attribute()</xpath>
            <xpath>ancestor::*:foo/attribute::foo</xpath>
            <xpath>ancestor::*:foo/attribute::ex:foo</xpath>
            <xpath>ancestor::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::*:foo/attribute::*:foo</xpath>
            <xpath>ancestor::*:foo/attribute::ex:*</xpath>
            <xpath>ancestor::*:foo/attribute::*</xpath>
            <xpath>ancestor::*:foo/attribute::node()</xpath>
            <xpath>ancestor::*:foo/attribute::attribute()</xpath>
            <xpath>ancestor::*:foo/attribute::attribute(*)</xpath>
            <xpath>ancestor::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::*:foo/@foo</xpath>
            <xpath>ancestor::*:foo/@ex:foo</xpath>
            <xpath>ancestor::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::*:foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor::*:foo/@*:foo</xpath>
            <xpath>ancestor::*:foo/@ex:*</xpath>
            <xpath>ancestor::*:foo/@*</xpath>
            <xpath>ancestor::*:foo/@node()</xpath>
            <xpath>ancestor::*:foo/@attribute()</xpath>
            <xpath>ancestor::*:foo/@attribute(*)</xpath>
            <xpath>ancestor::*:foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::*:foo/namespace::foo</xpath>
            <xpath>ancestor::*:foo/namespace::Q{}foo</xpath>
            <xpath>ancestor::*:foo/namespace::Q{}*</xpath>
            <xpath>ancestor::*:foo/namespace::*:foo</xpath>
            <xpath>ancestor::*:foo/namespace::*</xpath>
            <xpath>ancestor::*:foo/namespace::node()</xpath>
            <xpath>ancestor::*:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC022">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::ex:*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::ex:*/attribute()</xpath>
            <xpath>ancestor::ex:*/attribute::foo</xpath>
            <xpath>ancestor::ex:*/attribute::ex:foo</xpath>
            <xpath>ancestor::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::ex:*/attribute::*:foo</xpath>
            <xpath>ancestor::ex:*/attribute::ex:*</xpath>
            <xpath>ancestor::ex:*/attribute::*</xpath>
            <xpath>ancestor::ex:*/attribute::node()</xpath>
            <xpath>ancestor::ex:*/attribute::attribute()</xpath>
            <xpath>ancestor::ex:*/attribute::attribute(*)</xpath>
            <xpath>ancestor::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::ex:*/@foo</xpath>
            <xpath>ancestor::ex:*/@ex:foo</xpath>
            <xpath>ancestor::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::ex:*/@Q{http://example.com}*</xpath>
            <xpath>ancestor::ex:*/@*:foo</xpath>
            <xpath>ancestor::ex:*/@ex:*</xpath>
            <xpath>ancestor::ex:*/@*</xpath>
            <xpath>ancestor::ex:*/@node()</xpath>
            <xpath>ancestor::ex:*/@attribute()</xpath>
            <xpath>ancestor::ex:*/@attribute(*)</xpath>
            <xpath>ancestor::ex:*/@attribute(ex:foo)</xpath>
            <xpath>ancestor::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::ex:*/namespace::foo</xpath>
            <xpath>ancestor::ex:*/namespace::Q{}foo</xpath>
            <xpath>ancestor::ex:*/namespace::Q{}*</xpath>
            <xpath>ancestor::ex:*/namespace::*:foo</xpath>
            <xpath>ancestor::ex:*/namespace::*</xpath>
            <xpath>ancestor::ex:*/namespace::node()</xpath>
            <xpath>ancestor::ex:*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC023">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::*/attribute()</xpath>
            <xpath>ancestor::*/attribute::foo</xpath>
            <xpath>ancestor::*/attribute::ex:foo</xpath>
            <xpath>ancestor::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::*/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::*/attribute::*:foo</xpath>
            <xpath>ancestor::*/attribute::ex:*</xpath>
            <xpath>ancestor::*/attribute::*</xpath>
            <xpath>ancestor::*/attribute::node()</xpath>
            <xpath>ancestor::*/attribute::attribute()</xpath>
            <xpath>ancestor::*/attribute::attribute(*)</xpath>
            <xpath>ancestor::*/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::*/@foo</xpath>
            <xpath>ancestor::*/@ex:foo</xpath>
            <xpath>ancestor::*/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::*/@Q{http://example.com}*</xpath>
            <xpath>ancestor::*/@*:foo</xpath>
            <xpath>ancestor::*/@ex:*</xpath>
            <xpath>ancestor::*/@*</xpath>
            <xpath>ancestor::*/@node()</xpath>
            <xpath>ancestor::*/@attribute()</xpath>
            <xpath>ancestor::*/@attribute(*)</xpath>
            <xpath>ancestor::*/@attribute(ex:foo)</xpath>
            <xpath>ancestor::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::*/namespace::foo</xpath>
            <xpath>ancestor::*/namespace::Q{}foo</xpath>
            <xpath>ancestor::*/namespace::Q{}*</xpath>
            <xpath>ancestor::*/namespace::*:foo</xpath>
            <xpath>ancestor::*/namespace::*</xpath>
            <xpath>ancestor::*/namespace::node()</xpath>
            <xpath>ancestor::*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC024">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::node()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::node()/attribute()</xpath>
            <xpath>ancestor::node()/attribute::foo</xpath>
            <xpath>ancestor::node()/attribute::ex:foo</xpath>
            <xpath>ancestor::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor::node()/attribute::*:foo</xpath>
            <xpath>ancestor::node()/attribute::ex:*</xpath>
            <xpath>ancestor::node()/attribute::*</xpath>
            <xpath>ancestor::node()/attribute::node()</xpath>
            <xpath>ancestor::node()/attribute::attribute()</xpath>
            <xpath>ancestor::node()/attribute::attribute(*)</xpath>
            <xpath>ancestor::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::node()/@foo</xpath>
            <xpath>ancestor::node()/@ex:foo</xpath>
            <xpath>ancestor::node()/@Q{http://example.com}foo</xpath>
            <xpath>ancestor::node()/@Q{http://example.com}*</xpath>
            <xpath>ancestor::node()/@*:foo</xpath>
            <xpath>ancestor::node()/@ex:*</xpath>
            <xpath>ancestor::node()/@*</xpath>
            <xpath>ancestor::node()/@node()</xpath>
            <xpath>ancestor::node()/@attribute()</xpath>
            <xpath>ancestor::node()/@attribute(*)</xpath>
            <xpath>ancestor::node()/@attribute(ex:foo)</xpath>
            <xpath>ancestor::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor::node()/namespace::foo</xpath>
            <xpath>ancestor::node()/namespace::Q{}foo</xpath>
            <xpath>ancestor::node()/namespace::Q{}*</xpath>
            <xpath>ancestor::node()/namespace::*:foo</xpath>
            <xpath>ancestor::node()/namespace::*</xpath>
            <xpath>ancestor::node()/namespace::node()</xpath>
            <xpath>ancestor::node()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC025">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::foo/attribute()</xpath>
            <xpath>ancestor-or-self::foo/attribute::foo</xpath>
            <xpath>ancestor-or-self::foo/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::foo/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::foo/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::foo/attribute::*</xpath>
            <xpath>ancestor-or-self::foo/attribute::node()</xpath>
            <xpath>ancestor-or-self::foo/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::foo/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::foo/@foo</xpath>
            <xpath>ancestor-or-self::foo/@ex:foo</xpath>
            <xpath>ancestor-or-self::foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::foo/@*:foo</xpath>
            <xpath>ancestor-or-self::foo/@ex:*</xpath>
            <xpath>ancestor-or-self::foo/@*</xpath>
            <xpath>ancestor-or-self::foo/@node()</xpath>
            <xpath>ancestor-or-self::foo/@attribute()</xpath>
            <xpath>ancestor-or-self::foo/@attribute(*)</xpath>
            <xpath>ancestor-or-self::foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::foo/namespace::foo</xpath>
            <xpath>ancestor-or-self::foo/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::foo/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::foo/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::foo/namespace::*</xpath>
            <xpath>ancestor-or-self::foo/namespace::node()</xpath>
            <xpath>ancestor-or-self::foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC026">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::ex:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::ex:foo/attribute()</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::foo</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::*</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::node()</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::ex:foo/@foo</xpath>
            <xpath>ancestor-or-self::ex:foo/@ex:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::ex:foo/@*:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/@ex:*</xpath>
            <xpath>ancestor-or-self::ex:foo/@*</xpath>
            <xpath>ancestor-or-self::ex:foo/@node()</xpath>
            <xpath>ancestor-or-self::ex:foo/@attribute()</xpath>
            <xpath>ancestor-or-self::ex:foo/@attribute(*)</xpath>
            <xpath>ancestor-or-self::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::foo</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::*</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::node()</xpath>
            <xpath>ancestor-or-self::ex:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC027">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC028">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@ex:*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@attribute()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC029">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::*:foo
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::*:foo/attribute()</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::foo</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::*</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::node()</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::*:foo/@foo</xpath>
            <xpath>ancestor-or-self::*:foo/@ex:foo</xpath>
            <xpath>ancestor-or-self::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::*:foo/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::*:foo/@*:foo</xpath>
            <xpath>ancestor-or-self::*:foo/@ex:*</xpath>
            <xpath>ancestor-or-self::*:foo/@*</xpath>
            <xpath>ancestor-or-self::*:foo/@node()</xpath>
            <xpath>ancestor-or-self::*:foo/@attribute()</xpath>
            <xpath>ancestor-or-self::*:foo/@attribute(*)</xpath>
            <xpath>ancestor-or-self::*:foo/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::foo</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::*</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::node()</xpath>
            <xpath>ancestor-or-self::*:foo/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC030">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::ex:*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::ex:*/attribute()</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::foo</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::*</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::node()</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::ex:*/@foo</xpath>
            <xpath>ancestor-or-self::ex:*/@ex:foo</xpath>
            <xpath>ancestor-or-self::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::ex:*/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::ex:*/@*:foo</xpath>
            <xpath>ancestor-or-self::ex:*/@ex:*</xpath>
            <xpath>ancestor-or-self::ex:*/@*</xpath>
            <xpath>ancestor-or-self::ex:*/@node()</xpath>
            <xpath>ancestor-or-self::ex:*/@attribute()</xpath>
            <xpath>ancestor-or-self::ex:*/@attribute(*)</xpath>
            <xpath>ancestor-or-self::ex:*/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::foo</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::*</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::node()</xpath>
            <xpath>ancestor-or-self::ex:*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC031">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::*
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::*/attribute()</xpath>
            <xpath>ancestor-or-self::*/attribute::foo</xpath>
            <xpath>ancestor-or-self::*/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::*/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::*/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::*/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::*/attribute::*</xpath>
            <xpath>ancestor-or-self::*/attribute::node()</xpath>
            <xpath>ancestor-or-self::*/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::*/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::*/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::*/@foo</xpath>
            <xpath>ancestor-or-self::*/@ex:foo</xpath>
            <xpath>ancestor-or-self::*/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::*/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::*/@*:foo</xpath>
            <xpath>ancestor-or-self::*/@ex:*</xpath>
            <xpath>ancestor-or-self::*/@*</xpath>
            <xpath>ancestor-or-self::*/@node()</xpath>
            <xpath>ancestor-or-self::*/@attribute()</xpath>
            <xpath>ancestor-or-self::*/@attribute(*)</xpath>
            <xpath>ancestor-or-self::*/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::*/namespace::foo</xpath>
            <xpath>ancestor-or-self::*/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::*/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::*/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::*/namespace::*</xpath>
            <xpath>ancestor-or-self::*/namespace::node()</xpath>
            <xpath>ancestor-or-self::*/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessC032">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::node()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::node()/attribute()</xpath>
            <xpath>ancestor-or-self::node()/attribute::foo</xpath>
            <xpath>ancestor-or-self::node()/attribute::ex:foo</xpath>
            <xpath>ancestor-or-self::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::node()/attribute::*:foo</xpath>
            <xpath>ancestor-or-self::node()/attribute::ex:*</xpath>
            <xpath>ancestor-or-self::node()/attribute::*</xpath>
            <xpath>ancestor-or-self::node()/attribute::node()</xpath>
            <xpath>ancestor-or-self::node()/attribute::attribute()</xpath>
            <xpath>ancestor-or-self::node()/attribute::attribute(*)</xpath>
            <xpath>ancestor-or-self::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::node()/@foo</xpath>
            <xpath>ancestor-or-self::node()/@ex:foo</xpath>
            <xpath>ancestor-or-self::node()/@Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::node()/@Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::node()/@*:foo</xpath>
            <xpath>ancestor-or-self::node()/@ex:*</xpath>
            <xpath>ancestor-or-self::node()/@*</xpath>
            <xpath>ancestor-or-self::node()/@node()</xpath>
            <xpath>ancestor-or-self::node()/@attribute()</xpath>
            <xpath>ancestor-or-self::node()/@attribute(*)</xpath>
            <xpath>ancestor-or-self::node()/@attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::node()/namespace::foo</xpath>
            <xpath>ancestor-or-self::node()/namespace::Q{}foo</xpath>
            <xpath>ancestor-or-self::node()/namespace::Q{}*</xpath>
            <xpath>ancestor-or-self::node()/namespace::*:foo</xpath>
            <xpath>ancestor-or-self::node()/namespace::*</xpath>
            <xpath>ancestor-or-self::node()/namespace::node()</xpath>
            <xpath>ancestor-or-self::node()/namespace::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
</test-set>