<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-climbing-motionlessB">
   <description>
                    CP: Striding, RP: Climbing, RS: Motionless
                    Self axis on climbing axis, provided node type is same, inherits the climbing axis: climbing and motionless
                </description>
   <test-case name="xp-striding-climbing-motionlessB001">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute()/self::node()</xpath>
            <xpath>attribute()/self::item()</xpath>
            <xpath>attribute()/self::attribute()</xpath>
            <xpath>attribute()/self::attribute(*)</xpath>
            <xpath>attribute()/self::attribute(ex:foo)</xpath>
            <xpath>attribute()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB002">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::foo/self::node()</xpath>
            <xpath>attribute::foo/self::item()</xpath>
            <xpath>attribute::foo/self::attribute()</xpath>
            <xpath>attribute::foo/self::attribute(*)</xpath>
            <xpath>attribute::foo/self::attribute(ex:foo)</xpath>
            <xpath>attribute::foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB003">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::ex:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::ex:foo/self::node()</xpath>
            <xpath>attribute::ex:foo/self::item()</xpath>
            <xpath>attribute::ex:foo/self::attribute()</xpath>
            <xpath>attribute::ex:foo/self::attribute(*)</xpath>
            <xpath>attribute::ex:foo/self::attribute(ex:foo)</xpath>
            <xpath>attribute::ex:foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB004">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::Q{http://example.com}foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::Q{http://example.com}foo/self::node()</xpath>
            <xpath>attribute::Q{http://example.com}foo/self::item()</xpath>
            <xpath>attribute::Q{http://example.com}foo/self::attribute()</xpath>
            <xpath>attribute::Q{http://example.com}foo/self::attribute(*)</xpath>
            <xpath>attribute::Q{http://example.com}foo/self::attribute(ex:foo)</xpath>
            <xpath>attribute::Q{http://example.com}foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB005">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::Q{http://example.com}*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::Q{http://example.com}*/self::node()</xpath>
            <xpath>attribute::Q{http://example.com}*/self::item()</xpath>
            <xpath>attribute::Q{http://example.com}*/self::attribute()</xpath>
            <xpath>attribute::Q{http://example.com}*/self::attribute(*)</xpath>
            <xpath>attribute::Q{http://example.com}*/self::attribute(ex:foo)</xpath>
            <xpath>attribute::Q{http://example.com}*/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB006">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::*:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::*:foo/self::node()</xpath>
            <xpath>attribute::*:foo/self::item()</xpath>
            <xpath>attribute::*:foo/self::attribute()</xpath>
            <xpath>attribute::*:foo/self::attribute(*)</xpath>
            <xpath>attribute::*:foo/self::attribute(ex:foo)</xpath>
            <xpath>attribute::*:foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB007">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::ex:*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::ex:*/self::node()</xpath>
            <xpath>attribute::ex:*/self::item()</xpath>
            <xpath>attribute::ex:*/self::attribute()</xpath>
            <xpath>attribute::ex:*/self::attribute(*)</xpath>
            <xpath>attribute::ex:*/self::attribute(ex:foo)</xpath>
            <xpath>attribute::ex:*/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB008">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::*/self::node()</xpath>
            <xpath>attribute::*/self::item()</xpath>
            <xpath>attribute::*/self::attribute()</xpath>
            <xpath>attribute::*/self::attribute(*)</xpath>
            <xpath>attribute::*/self::attribute(ex:foo)</xpath>
            <xpath>attribute::*/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB009">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::node()/self::node()</xpath>
            <xpath>attribute::node()/self::item()</xpath>
            <xpath>attribute::node()/self::attribute()</xpath>
            <xpath>attribute::node()/self::attribute(*)</xpath>
            <xpath>attribute::node()/self::attribute(ex:foo)</xpath>
            <xpath>attribute::node()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB010">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::item()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::item()/self::node()</xpath>
            <xpath>attribute::item()/self::item()</xpath>
            <xpath>attribute::item()/self::attribute()</xpath>
            <xpath>attribute::item()/self::attribute(*)</xpath>
            <xpath>attribute::item()/self::attribute(ex:foo)</xpath>
            <xpath>attribute::item()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB011">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::attribute()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::attribute()/self::node()</xpath>
            <xpath>attribute::attribute()/self::item()</xpath>
            <xpath>attribute::attribute()/self::attribute()</xpath>
            <xpath>attribute::attribute()/self::attribute(*)</xpath>
            <xpath>attribute::attribute()/self::attribute(ex:foo)</xpath>
            <xpath>attribute::attribute()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB012">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::attribute(*)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::attribute(*)/self::node()</xpath>
            <xpath>attribute::attribute(*)/self::item()</xpath>
            <xpath>attribute::attribute(*)/self::attribute()</xpath>
            <xpath>attribute::attribute(*)/self::attribute(*)</xpath>
            <xpath>attribute::attribute(*)/self::attribute(ex:foo)</xpath>
            <xpath>attribute::attribute(*)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB013">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::attribute(ex:foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::attribute(ex:foo)/self::node()</xpath>
            <xpath>attribute::attribute(ex:foo)/self::item()</xpath>
            <xpath>attribute::attribute(ex:foo)/self::attribute()</xpath>
            <xpath>attribute::attribute(ex:foo)/self::attribute(*)</xpath>
            <xpath>attribute::attribute(ex:foo)/self::attribute(ex:foo)</xpath>
            <xpath>attribute::attribute(ex:foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB014">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: attribute::attribute(Q{http://example.com}foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>attribute::attribute(Q{http://example.com}foo)/self::node()</xpath>
            <xpath>attribute::attribute(Q{http://example.com}foo)/self::item()</xpath>
            <xpath>attribute::attribute(Q{http://example.com}foo)/self::attribute()</xpath>
            <xpath>attribute::attribute(Q{http://example.com}foo)/self::attribute(*)</xpath>
            <xpath>attribute::attribute(Q{http://example.com}foo)/self::attribute(ex:foo)</xpath>
            <xpath>attribute::attribute(Q{http://example.com}foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB015">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@foo/self::node()</xpath>
            <xpath>@foo/self::item()</xpath>
            <xpath>@foo/self::attribute()</xpath>
            <xpath>@foo/self::attribute(*)</xpath>
            <xpath>@foo/self::attribute(ex:foo)</xpath>
            <xpath>@foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB016">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @ex:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@ex:foo/self::node()</xpath>
            <xpath>@ex:foo/self::item()</xpath>
            <xpath>@ex:foo/self::attribute()</xpath>
            <xpath>@ex:foo/self::attribute(*)</xpath>
            <xpath>@ex:foo/self::attribute(ex:foo)</xpath>
            <xpath>@ex:foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB017">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @Q{http://example.com}foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@Q{http://example.com}foo/self::node()</xpath>
            <xpath>@Q{http://example.com}foo/self::item()</xpath>
            <xpath>@Q{http://example.com}foo/self::attribute()</xpath>
            <xpath>@Q{http://example.com}foo/self::attribute(*)</xpath>
            <xpath>@Q{http://example.com}foo/self::attribute(ex:foo)</xpath>
            <xpath>@Q{http://example.com}foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB018">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @Q{http://example.com}*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@Q{http://example.com}*/self::node()</xpath>
            <xpath>@Q{http://example.com}*/self::item()</xpath>
            <xpath>@Q{http://example.com}*/self::attribute()</xpath>
            <xpath>@Q{http://example.com}*/self::attribute(*)</xpath>
            <xpath>@Q{http://example.com}*/self::attribute(ex:foo)</xpath>
            <xpath>@Q{http://example.com}*/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB019">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @*:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@*:foo/self::node()</xpath>
            <xpath>@*:foo/self::item()</xpath>
            <xpath>@*:foo/self::attribute()</xpath>
            <xpath>@*:foo/self::attribute(*)</xpath>
            <xpath>@*:foo/self::attribute(ex:foo)</xpath>
            <xpath>@*:foo/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB020">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @ex:*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@ex:*/self::node()</xpath>
            <xpath>@ex:*/self::item()</xpath>
            <xpath>@ex:*/self::attribute()</xpath>
            <xpath>@ex:*/self::attribute(*)</xpath>
            <xpath>@ex:*/self::attribute(ex:foo)</xpath>
            <xpath>@ex:*/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB021">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@*/self::node()</xpath>
            <xpath>@*/self::item()</xpath>
            <xpath>@*/self::attribute()</xpath>
            <xpath>@*/self::attribute(*)</xpath>
            <xpath>@*/self::attribute(ex:foo)</xpath>
            <xpath>@*/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB022">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@node()/self::node()</xpath>
            <xpath>@node()/self::item()</xpath>
            <xpath>@node()/self::attribute()</xpath>
            <xpath>@node()/self::attribute(*)</xpath>
            <xpath>@node()/self::attribute(ex:foo)</xpath>
            <xpath>@node()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB023">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @item()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@item()/self::node()</xpath>
            <xpath>@item()/self::item()</xpath>
            <xpath>@item()/self::attribute()</xpath>
            <xpath>@item()/self::attribute(*)</xpath>
            <xpath>@item()/self::attribute(ex:foo)</xpath>
            <xpath>@item()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB024">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @attribute()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@attribute()/self::node()</xpath>
            <xpath>@attribute()/self::item()</xpath>
            <xpath>@attribute()/self::attribute()</xpath>
            <xpath>@attribute()/self::attribute(*)</xpath>
            <xpath>@attribute()/self::attribute(ex:foo)</xpath>
            <xpath>@attribute()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB025">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @attribute(*)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@attribute(*)/self::node()</xpath>
            <xpath>@attribute(*)/self::item()</xpath>
            <xpath>@attribute(*)/self::attribute()</xpath>
            <xpath>@attribute(*)/self::attribute(*)</xpath>
            <xpath>@attribute(*)/self::attribute(ex:foo)</xpath>
            <xpath>@attribute(*)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB026">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @attribute(ex:foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@attribute(ex:foo)/self::node()</xpath>
            <xpath>@attribute(ex:foo)/self::item()</xpath>
            <xpath>@attribute(ex:foo)/self::attribute()</xpath>
            <xpath>@attribute(ex:foo)/self::attribute(*)</xpath>
            <xpath>@attribute(ex:foo)/self::attribute(ex:foo)</xpath>
            <xpath>@attribute(ex:foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB027">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: @attribute(Q{http://example.com}foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>@attribute(Q{http://example.com}foo)/self::node()</xpath>
            <xpath>@attribute(Q{http://example.com}foo)/self::item()</xpath>
            <xpath>@attribute(Q{http://example.com}foo)/self::attribute()</xpath>
            <xpath>@attribute(Q{http://example.com}foo)/self::attribute(*)</xpath>
            <xpath>@attribute(Q{http://example.com}foo)/self::attribute(ex:foo)</xpath>
            <xpath>@attribute(Q{http://example.com}foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB028">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::foo/self::node()</xpath>
            <xpath>namespace::foo/self::item()</xpath>
            <xpath>namespace::foo/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB029">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::Q{}foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::Q{}foo/self::node()</xpath>
            <xpath>namespace::Q{}foo/self::item()</xpath>
            <xpath>namespace::Q{}foo/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB030">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::Q{}*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::Q{}*/self::node()</xpath>
            <xpath>namespace::Q{}*/self::item()</xpath>
            <xpath>namespace::Q{}*/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB031">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::*:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::*:foo/self::node()</xpath>
            <xpath>namespace::*:foo/self::item()</xpath>
            <xpath>namespace::*:foo/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB032">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::*/self::node()</xpath>
            <xpath>namespace::*/self::item()</xpath>
            <xpath>namespace::*/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB033">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::node()/self::node()</xpath>
            <xpath>namespace::node()/self::item()</xpath>
            <xpath>namespace::node()/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB034">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::item()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::item()/self::node()</xpath>
            <xpath>namespace::item()/self::item()</xpath>
            <xpath>namespace::item()/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB035">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::attribute()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::attribute()/self::node()</xpath>
            <xpath>namespace::attribute()/self::item()</xpath>
            <xpath>namespace::attribute()/self::attribute()</xpath>
            <xpath>namespace::attribute()/self::attribute(*)</xpath>
            <xpath>namespace::attribute()/self::attribute(ex:foo)</xpath>
            <xpath>namespace::attribute()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB036">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::attribute(*)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::attribute(*)/self::node()</xpath>
            <xpath>namespace::attribute(*)/self::item()</xpath>
            <xpath>namespace::attribute(*)/self::attribute()</xpath>
            <xpath>namespace::attribute(*)/self::attribute(*)</xpath>
            <xpath>namespace::attribute(*)/self::attribute(ex:foo)</xpath>
            <xpath>namespace::attribute(*)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB037">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::attribute(ex:foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::attribute(ex:foo)/self::node()</xpath>
            <xpath>namespace::attribute(ex:foo)/self::item()</xpath>
            <xpath>namespace::attribute(ex:foo)/self::attribute()</xpath>
            <xpath>namespace::attribute(ex:foo)/self::attribute(*)</xpath>
            <xpath>namespace::attribute(ex:foo)/self::attribute(ex:foo)</xpath>
            <xpath>namespace::attribute(ex:foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB038">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::attribute(Q{http://example.com}foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::attribute(Q{http://example.com}foo)/self::node()</xpath>
            <xpath>namespace::attribute(Q{http://example.com}foo)/self::item()</xpath>
            <xpath>namespace::attribute(Q{http://example.com}foo)/self::attribute()</xpath>
            <xpath>namespace::attribute(Q{http://example.com}foo)/self::attribute(*)</xpath>
            <xpath>namespace::attribute(Q{http://example.com}foo)/self::attribute(ex:foo)</xpath>
            <xpath>namespace::attribute(Q{http://example.com}foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB039">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: namespace::namespace-node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>namespace::namespace-node()/self::node()</xpath>
            <xpath>namespace::namespace-node()/self::item()</xpath>
            <xpath>namespace::namespace-node()/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB040">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::foo/self::foo</xpath>
            <xpath>parent::foo/self::ex:foo</xpath>
            <xpath>parent::foo/self::Q{http://example.com}foo</xpath>
            <xpath>parent::foo/self::Q{http://example.com}*</xpath>
            <xpath>parent::foo/self::*:foo</xpath>
            <xpath>parent::foo/self::ex:*</xpath>
            <xpath>parent::foo/self::*</xpath>
            <xpath>parent::foo/self::node()</xpath>
            <xpath>parent::foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB041">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::ex:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::ex:foo/self::foo</xpath>
            <xpath>parent::ex:foo/self::ex:foo</xpath>
            <xpath>parent::ex:foo/self::Q{http://example.com}foo</xpath>
            <xpath>parent::ex:foo/self::Q{http://example.com}*</xpath>
            <xpath>parent::ex:foo/self::*:foo</xpath>
            <xpath>parent::ex:foo/self::ex:*</xpath>
            <xpath>parent::ex:foo/self::*</xpath>
            <xpath>parent::ex:foo/self::node()</xpath>
            <xpath>parent::ex:foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB042">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::Q{http://example.com}foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::Q{http://example.com}foo/self::foo</xpath>
            <xpath>parent::Q{http://example.com}foo/self::ex:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/self::Q{http://example.com}foo</xpath>
            <xpath>parent::Q{http://example.com}foo/self::Q{http://example.com}*</xpath>
            <xpath>parent::Q{http://example.com}foo/self::*:foo</xpath>
            <xpath>parent::Q{http://example.com}foo/self::ex:*</xpath>
            <xpath>parent::Q{http://example.com}foo/self::*</xpath>
            <xpath>parent::Q{http://example.com}foo/self::node()</xpath>
            <xpath>parent::Q{http://example.com}foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB043">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::Q{http://example.com}*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::Q{http://example.com}*/self::foo</xpath>
            <xpath>parent::Q{http://example.com}*/self::ex:foo</xpath>
            <xpath>parent::Q{http://example.com}*/self::Q{http://example.com}foo</xpath>
            <xpath>parent::Q{http://example.com}*/self::Q{http://example.com}*</xpath>
            <xpath>parent::Q{http://example.com}*/self::*:foo</xpath>
            <xpath>parent::Q{http://example.com}*/self::ex:*</xpath>
            <xpath>parent::Q{http://example.com}*/self::*</xpath>
            <xpath>parent::Q{http://example.com}*/self::node()</xpath>
            <xpath>parent::Q{http://example.com}*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB044">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::*:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::*:foo/self::foo</xpath>
            <xpath>parent::*:foo/self::ex:foo</xpath>
            <xpath>parent::*:foo/self::Q{http://example.com}foo</xpath>
            <xpath>parent::*:foo/self::Q{http://example.com}*</xpath>
            <xpath>parent::*:foo/self::*:foo</xpath>
            <xpath>parent::*:foo/self::ex:*</xpath>
            <xpath>parent::*:foo/self::*</xpath>
            <xpath>parent::*:foo/self::node()</xpath>
            <xpath>parent::*:foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB045">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::ex:*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::ex:*/self::foo</xpath>
            <xpath>parent::ex:*/self::ex:foo</xpath>
            <xpath>parent::ex:*/self::Q{http://example.com}foo</xpath>
            <xpath>parent::ex:*/self::Q{http://example.com}*</xpath>
            <xpath>parent::ex:*/self::*:foo</xpath>
            <xpath>parent::ex:*/self::ex:*</xpath>
            <xpath>parent::ex:*/self::*</xpath>
            <xpath>parent::ex:*/self::node()</xpath>
            <xpath>parent::ex:*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB046">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::*/self::foo</xpath>
            <xpath>parent::*/self::ex:foo</xpath>
            <xpath>parent::*/self::Q{http://example.com}foo</xpath>
            <xpath>parent::*/self::Q{http://example.com}*</xpath>
            <xpath>parent::*/self::*:foo</xpath>
            <xpath>parent::*/self::ex:*</xpath>
            <xpath>parent::*/self::*</xpath>
            <xpath>parent::*/self::node()</xpath>
            <xpath>parent::*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB047">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::node()/self::foo</xpath>
            <xpath>parent::node()/self::ex:foo</xpath>
            <xpath>parent::node()/self::Q{http://example.com}foo</xpath>
            <xpath>parent::node()/self::Q{http://example.com}*</xpath>
            <xpath>parent::node()/self::*:foo</xpath>
            <xpath>parent::node()/self::ex:*</xpath>
            <xpath>parent::node()/self::*</xpath>
            <xpath>parent::node()/self::node()</xpath>
            <xpath>parent::node()/self::item()</xpath>
            <xpath>parent::node()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB048">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::item()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::item()/self::foo</xpath>
            <xpath>parent::item()/self::ex:foo</xpath>
            <xpath>parent::item()/self::Q{http://example.com}foo</xpath>
            <xpath>parent::item()/self::Q{http://example.com}*</xpath>
            <xpath>parent::item()/self::*:foo</xpath>
            <xpath>parent::item()/self::ex:*</xpath>
            <xpath>parent::item()/self::*</xpath>
            <xpath>parent::item()/self::node()</xpath>
            <xpath>parent::item()/self::item()</xpath>
            <xpath>parent::item()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB049">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: parent::document-node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>parent::document-node()/self::node()</xpath>
            <xpath>parent::document-node()/self::item()</xpath>
            <xpath>parent::document-node()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB050">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::foo/self::foo</xpath>
            <xpath>ancestor::foo/self::ex:foo</xpath>
            <xpath>ancestor::foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::foo/self::*:foo</xpath>
            <xpath>ancestor::foo/self::ex:*</xpath>
            <xpath>ancestor::foo/self::*</xpath>
            <xpath>ancestor::foo/self::node()</xpath>
            <xpath>ancestor::foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB051">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::ex:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::ex:foo/self::foo</xpath>
            <xpath>ancestor::ex:foo/self::ex:foo</xpath>
            <xpath>ancestor::ex:foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::ex:foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::ex:foo/self::*:foo</xpath>
            <xpath>ancestor::ex:foo/self::ex:*</xpath>
            <xpath>ancestor::ex:foo/self::*</xpath>
            <xpath>ancestor::ex:foo/self::node()</xpath>
            <xpath>ancestor::ex:foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB052">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::Q{http://example.com}foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::Q{http://example.com}foo/self::foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::ex:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::ex:*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::*</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::node()</xpath>
            <xpath>ancestor::Q{http://example.com}foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB053">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::Q{http://example.com}*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::Q{http://example.com}*/self::foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::ex:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::*:foo</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::ex:*</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::*</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::node()</xpath>
            <xpath>ancestor::Q{http://example.com}*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB054">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::*:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::*:foo/self::foo</xpath>
            <xpath>ancestor::*:foo/self::ex:foo</xpath>
            <xpath>ancestor::*:foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::*:foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::*:foo/self::*:foo</xpath>
            <xpath>ancestor::*:foo/self::ex:*</xpath>
            <xpath>ancestor::*:foo/self::*</xpath>
            <xpath>ancestor::*:foo/self::node()</xpath>
            <xpath>ancestor::*:foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB055">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::ex:*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::ex:*/self::foo</xpath>
            <xpath>ancestor::ex:*/self::ex:foo</xpath>
            <xpath>ancestor::ex:*/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::ex:*/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::ex:*/self::*:foo</xpath>
            <xpath>ancestor::ex:*/self::ex:*</xpath>
            <xpath>ancestor::ex:*/self::*</xpath>
            <xpath>ancestor::ex:*/self::node()</xpath>
            <xpath>ancestor::ex:*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB056">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::*/self::foo</xpath>
            <xpath>ancestor::*/self::ex:foo</xpath>
            <xpath>ancestor::*/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::*/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::*/self::*:foo</xpath>
            <xpath>ancestor::*/self::ex:*</xpath>
            <xpath>ancestor::*/self::*</xpath>
            <xpath>ancestor::*/self::node()</xpath>
            <xpath>ancestor::*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB057">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::node()/self::foo</xpath>
            <xpath>ancestor::node()/self::ex:foo</xpath>
            <xpath>ancestor::node()/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::node()/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::node()/self::*:foo</xpath>
            <xpath>ancestor::node()/self::ex:*</xpath>
            <xpath>ancestor::node()/self::*</xpath>
            <xpath>ancestor::node()/self::node()</xpath>
            <xpath>ancestor::node()/self::item()</xpath>
            <xpath>ancestor::node()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB058">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::item()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::item()/self::foo</xpath>
            <xpath>ancestor::item()/self::ex:foo</xpath>
            <xpath>ancestor::item()/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor::item()/self::Q{http://example.com}*</xpath>
            <xpath>ancestor::item()/self::*:foo</xpath>
            <xpath>ancestor::item()/self::ex:*</xpath>
            <xpath>ancestor::item()/self::*</xpath>
            <xpath>ancestor::item()/self::node()</xpath>
            <xpath>ancestor::item()/self::item()</xpath>
            <xpath>ancestor::item()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB059">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor::document-node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor::document-node()/self::node()</xpath>
            <xpath>ancestor::document-node()/self::item()</xpath>
            <xpath>ancestor::document-node()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB060">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::foo/self::foo</xpath>
            <xpath>ancestor-or-self::foo/self::ex:foo</xpath>
            <xpath>ancestor-or-self::foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::foo/self::*:foo</xpath>
            <xpath>ancestor-or-self::foo/self::ex:*</xpath>
            <xpath>ancestor-or-self::foo/self::*</xpath>
            <xpath>ancestor-or-self::foo/self::node()</xpath>
            <xpath>ancestor-or-self::foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB061">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::ex:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::ex:foo/self::foo</xpath>
            <xpath>ancestor-or-self::ex:foo/self::ex:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::ex:foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::ex:foo/self::*:foo</xpath>
            <xpath>ancestor-or-self::ex:foo/self::ex:*</xpath>
            <xpath>ancestor-or-self::ex:foo/self::*</xpath>
            <xpath>ancestor-or-self::ex:foo/self::node()</xpath>
            <xpath>ancestor-or-self::ex:foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB062">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::Q{http://example.com}foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::ex:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::ex:*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB063">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::Q{http://example.com}*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::Q{http://example.com}*/self::foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::ex:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::*:foo</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::ex:*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::*</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::node()</xpath>
            <xpath>ancestor-or-self::Q{http://example.com}*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB064">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::*:foo
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::*:foo/self::foo</xpath>
            <xpath>ancestor-or-self::*:foo/self::ex:foo</xpath>
            <xpath>ancestor-or-self::*:foo/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::*:foo/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::*:foo/self::*:foo</xpath>
            <xpath>ancestor-or-self::*:foo/self::ex:*</xpath>
            <xpath>ancestor-or-self::*:foo/self::*</xpath>
            <xpath>ancestor-or-self::*:foo/self::node()</xpath>
            <xpath>ancestor-or-self::*:foo/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB065">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::ex:*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::ex:*/self::foo</xpath>
            <xpath>ancestor-or-self::ex:*/self::ex:foo</xpath>
            <xpath>ancestor-or-self::ex:*/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::ex:*/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::ex:*/self::*:foo</xpath>
            <xpath>ancestor-or-self::ex:*/self::ex:*</xpath>
            <xpath>ancestor-or-self::ex:*/self::*</xpath>
            <xpath>ancestor-or-self::ex:*/self::node()</xpath>
            <xpath>ancestor-or-self::ex:*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB066">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::*
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::*/self::foo</xpath>
            <xpath>ancestor-or-self::*/self::ex:foo</xpath>
            <xpath>ancestor-or-self::*/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::*/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::*/self::*:foo</xpath>
            <xpath>ancestor-or-self::*/self::ex:*</xpath>
            <xpath>ancestor-or-self::*/self::*</xpath>
            <xpath>ancestor-or-self::*/self::node()</xpath>
            <xpath>ancestor-or-self::*/self::item()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB067">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::node()/self::foo</xpath>
            <xpath>ancestor-or-self::node()/self::ex:foo</xpath>
            <xpath>ancestor-or-self::node()/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::node()/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::node()/self::*:foo</xpath>
            <xpath>ancestor-or-self::node()/self::ex:*</xpath>
            <xpath>ancestor-or-self::node()/self::*</xpath>
            <xpath>ancestor-or-self::node()/self::node()</xpath>
            <xpath>ancestor-or-self::node()/self::item()</xpath>
            <xpath>ancestor-or-self::node()/self::document-node()</xpath>
            <xpath>ancestor-or-self::node()/self::attribute()</xpath>
            <xpath>ancestor-or-self::node()/self::attribute(*)</xpath>
            <xpath>ancestor-or-self::node()/self::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::node()/self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::node()/self::comment()</xpath>
            <xpath>ancestor-or-self::node()/self::processing-instruction()</xpath>
            <xpath>ancestor-or-self::node()/self::processing-instruction(xml-stylesheet)</xpath>
            <xpath>ancestor-or-self::node()/self::processing-instruction('xml-stylesheet')</xpath>
            <xpath>ancestor-or-self::node()/self::text()</xpath>
            <xpath>ancestor-or-self::node()/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB068">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::item()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::item()/self::foo</xpath>
            <xpath>ancestor-or-self::item()/self::ex:foo</xpath>
            <xpath>ancestor-or-self::item()/self::Q{http://example.com}foo</xpath>
            <xpath>ancestor-or-self::item()/self::Q{http://example.com}*</xpath>
            <xpath>ancestor-or-self::item()/self::*:foo</xpath>
            <xpath>ancestor-or-self::item()/self::ex:*</xpath>
            <xpath>ancestor-or-self::item()/self::*</xpath>
            <xpath>ancestor-or-self::item()/self::node()</xpath>
            <xpath>ancestor-or-self::item()/self::item()</xpath>
            <xpath>ancestor-or-self::item()/self::document-node()</xpath>
            <xpath>ancestor-or-self::item()/self::attribute()</xpath>
            <xpath>ancestor-or-self::item()/self::attribute(*)</xpath>
            <xpath>ancestor-or-self::item()/self::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::item()/self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ancestor-or-self::item()/self::comment()</xpath>
            <xpath>ancestor-or-self::item()/self::processing-instruction()</xpath>
            <xpath>ancestor-or-self::item()/self::processing-instruction(xml-stylesheet)</xpath>
            <xpath>ancestor-or-self::item()/self::processing-instruction('xml-stylesheet')</xpath>
            <xpath>ancestor-or-self::item()/self::text()</xpath>
            <xpath>ancestor-or-self::item()/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB069">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::document-node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::document-node()/self::node()</xpath>
            <xpath>ancestor-or-self::document-node()/self::item()</xpath>
            <xpath>ancestor-or-self::document-node()/self::document-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB070">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::attribute()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::attribute()/self::node()</xpath>
            <xpath>ancestor-or-self::attribute()/self::item()</xpath>
            <xpath>ancestor-or-self::attribute()/self::attribute()</xpath>
            <xpath>ancestor-or-self::attribute()/self::attribute(*)</xpath>
            <xpath>ancestor-or-self::attribute()/self::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::attribute()/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB071">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::attribute(*)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::attribute(*)/self::node()</xpath>
            <xpath>ancestor-or-self::attribute(*)/self::item()</xpath>
            <xpath>ancestor-or-self::attribute(*)/self::attribute()</xpath>
            <xpath>ancestor-or-self::attribute(*)/self::attribute(*)</xpath>
            <xpath>ancestor-or-self::attribute(*)/self::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::attribute(*)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB072">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::attribute(ex:foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::attribute(ex:foo)/self::node()</xpath>
            <xpath>ancestor-or-self::attribute(ex:foo)/self::item()</xpath>
            <xpath>ancestor-or-self::attribute(ex:foo)/self::attribute()</xpath>
            <xpath>ancestor-or-self::attribute(ex:foo)/self::attribute(*)</xpath>
            <xpath>ancestor-or-self::attribute(ex:foo)/self::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::attribute(ex:foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB073">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::attribute(Q{http://example.com}foo)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::attribute(Q{http://example.com}foo)/self::node()</xpath>
            <xpath>ancestor-or-self::attribute(Q{http://example.com}foo)/self::item()</xpath>
            <xpath>ancestor-or-self::attribute(Q{http://example.com}foo)/self::attribute()</xpath>
            <xpath>ancestor-or-self::attribute(Q{http://example.com}foo)/self::attribute(*)</xpath>
            <xpath>ancestor-or-self::attribute(Q{http://example.com}foo)/self::attribute(ex:foo)</xpath>
            <xpath>ancestor-or-self::attribute(Q{http://example.com}foo)/self::attribute(Q{http://example.com}foo)</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB074">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::comment()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::comment()/self::node()</xpath>
            <xpath>ancestor-or-self::comment()/self::item()</xpath>
            <xpath>ancestor-or-self::comment()/self::comment()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB075">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::processing-instruction()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::processing-instruction()/self::node()</xpath>
            <xpath>ancestor-or-self::processing-instruction()/self::item()</xpath>
            <xpath>ancestor-or-self::processing-instruction()/self::processing-instruction()</xpath>
            <xpath>ancestor-or-self::processing-instruction()/self::processing-instruction(xml-stylesheet)</xpath>
            <xpath>ancestor-or-self::processing-instruction()/self::processing-instruction('xml-stylesheet')</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB076">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::processing-instruction(xsl-stylesheet)
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::processing-instruction(xsl-stylesheet)/self::node()</xpath>
            <xpath>ancestor-or-self::processing-instruction(xsl-stylesheet)/self::item()</xpath>
            <xpath>ancestor-or-self::processing-instruction(xsl-stylesheet)/self::processing-instruction()</xpath>
            <xpath>ancestor-or-self::processing-instruction(xsl-stylesheet)/self::processing-instruction(xml-stylesheet)</xpath>
            <xpath>ancestor-or-self::processing-instruction(xsl-stylesheet)/self::processing-instruction('xml-stylesheet')</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB077">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::processing-instruction('xsl-stylesheet')
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::processing-instruction('xsl-stylesheet')/self::node()</xpath>
            <xpath>ancestor-or-self::processing-instruction('xsl-stylesheet')/self::item()</xpath>
            <xpath>ancestor-or-self::processing-instruction('xsl-stylesheet')/self::processing-instruction()</xpath>
            <xpath>ancestor-or-self::processing-instruction('xsl-stylesheet')/self::processing-instruction(xml-stylesheet)</xpath>
            <xpath>ancestor-or-self::processing-instruction('xsl-stylesheet')/self::processing-instruction('xml-stylesheet')</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB078">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::text()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::text()/self::node()</xpath>
            <xpath>ancestor-or-self::text()/self::item()</xpath>
            <xpath>ancestor-or-self::text()/self::text()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-motionlessB079">
      <description>
                CP: striding, RP: climbing, RS: motionless
                Base expression: ancestor-or-self::namespace-node()
                Separators:      / 
                With axes:       self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       node-type-equal
            </description>
      <created by="Abel Braaksma" on="2014-10-15"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ancestor-or-self::namespace-node()/self::node()</xpath>
            <xpath>ancestor-or-self::namespace-node()/self::item()</xpath>
            <xpath>ancestor-or-self::namespace-node()/self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="motionless"/>
      </result>
   </test-case>
</test-set>