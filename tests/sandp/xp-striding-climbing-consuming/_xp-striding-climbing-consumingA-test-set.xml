<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-climbing-consumingA||file:///D:/Projects/AbraSoft/__HG-ALL__/Exselt/Tests/_Test-Repository/XT3/tests/sandp/xp-striding-climbing-consuming/_xp-striding-climbing-consumingA-test-set.xml">
   <description>
                    CP: Striding, RP: Climbing, RS: Consuming
                    Attribute, namespace, parent or ancestor(-or-self) axis on child, descendant(-or-self) axis selecting elements is climbing and remains consuming
                </description>
   <test-case name="xp-striding-climbing-consumingA001">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>foo/attribute()</xpath>
            <xpath>foo/attribute::foo</xpath>
            <xpath>foo/attribute::ex:foo</xpath>
            <xpath>foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>foo/attribute::Q{http://example.com}*</xpath>
            <xpath>foo/attribute::*:foo</xpath>
            <xpath>foo/attribute::ex:*</xpath>
            <xpath>foo/attribute::*</xpath>
            <xpath>foo/attribute::node()</xpath>
            <xpath>foo/attribute::attribute()</xpath>
            <xpath>foo/attribute::attribute(*)</xpath>
            <xpath>foo/attribute::attribute(ex:foo)</xpath>
            <xpath>foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>foo/@foo</xpath>
            <xpath>foo/@ex:foo</xpath>
            <xpath>foo/@Q{http://example.com}foo</xpath>
            <xpath>foo/@Q{http://example.com}*</xpath>
            <xpath>foo/@*:foo</xpath>
            <xpath>foo/@ex:*</xpath>
            <xpath>foo/@*</xpath>
            <xpath>foo/@node()</xpath>
            <xpath>foo/@attribute()</xpath>
            <xpath>foo/@attribute(*)</xpath>
            <xpath>foo/@attribute(ex:foo)</xpath>
            <xpath>foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>foo/namespace::foo</xpath>
            <xpath>foo/namespace::Q{}foo</xpath>
            <xpath>foo/namespace::Q{}*</xpath>
            <xpath>foo/namespace::*:foo</xpath>
            <xpath>foo/namespace::*</xpath>
            <xpath>foo/namespace::node()</xpath>
            <xpath>foo/namespace::namespace-node()</xpath>
            <xpath>foo/parent::foo</xpath>
            <xpath>foo/parent::ex:foo</xpath>
            <xpath>foo/parent::Q{http://example.com}foo</xpath>
            <xpath>foo/parent::Q{http://example.com}*</xpath>
            <xpath>foo/parent::*:foo</xpath>
            <xpath>foo/parent::ex:*</xpath>
            <xpath>foo/parent::*</xpath>
            <xpath>foo/parent::node()</xpath>
            <xpath>foo/parent::document-node()</xpath>
            <xpath>foo/ancestor::foo</xpath>
            <xpath>foo/ancestor::ex:foo</xpath>
            <xpath>foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>foo/ancestor::*:foo</xpath>
            <xpath>foo/ancestor::ex:*</xpath>
            <xpath>foo/ancestor::*</xpath>
            <xpath>foo/ancestor::node()</xpath>
            <xpath>foo/ancestor::document-node()</xpath>
            <xpath>foo/ancestor-or-self::foo</xpath>
            <xpath>foo/ancestor-or-self::ex:foo</xpath>
            <xpath>foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>foo/ancestor-or-self::*:foo</xpath>
            <xpath>foo/ancestor-or-self::ex:*</xpath>
            <xpath>foo/ancestor-or-self::*</xpath>
            <xpath>foo/ancestor-or-self::node()</xpath>
            <xpath>foo/ancestor-or-self::document-node()</xpath>
            <xpath>foo/ancestor-or-self::attribute()</xpath>
            <xpath>foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>foo/ancestor-or-self::comment()</xpath>
            <xpath>foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>foo/ancestor-or-self::text()</xpath>
            <xpath>foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA002">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: ex:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ex:foo/attribute()</xpath>
            <xpath>ex:foo/attribute::foo</xpath>
            <xpath>ex:foo/attribute::ex:foo</xpath>
            <xpath>ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>ex:foo/attribute::*:foo</xpath>
            <xpath>ex:foo/attribute::ex:*</xpath>
            <xpath>ex:foo/attribute::*</xpath>
            <xpath>ex:foo/attribute::node()</xpath>
            <xpath>ex:foo/attribute::attribute()</xpath>
            <xpath>ex:foo/attribute::attribute(*)</xpath>
            <xpath>ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ex:foo/@foo</xpath>
            <xpath>ex:foo/@ex:foo</xpath>
            <xpath>ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>ex:foo/@Q{http://example.com}*</xpath>
            <xpath>ex:foo/@*:foo</xpath>
            <xpath>ex:foo/@ex:*</xpath>
            <xpath>ex:foo/@*</xpath>
            <xpath>ex:foo/@node()</xpath>
            <xpath>ex:foo/@attribute()</xpath>
            <xpath>ex:foo/@attribute(*)</xpath>
            <xpath>ex:foo/@attribute(ex:foo)</xpath>
            <xpath>ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ex:foo/namespace::foo</xpath>
            <xpath>ex:foo/namespace::Q{}foo</xpath>
            <xpath>ex:foo/namespace::Q{}*</xpath>
            <xpath>ex:foo/namespace::*:foo</xpath>
            <xpath>ex:foo/namespace::*</xpath>
            <xpath>ex:foo/namespace::node()</xpath>
            <xpath>ex:foo/namespace::namespace-node()</xpath>
            <xpath>ex:foo/parent::foo</xpath>
            <xpath>ex:foo/parent::ex:foo</xpath>
            <xpath>ex:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>ex:foo/parent::Q{http://example.com}*</xpath>
            <xpath>ex:foo/parent::*:foo</xpath>
            <xpath>ex:foo/parent::ex:*</xpath>
            <xpath>ex:foo/parent::*</xpath>
            <xpath>ex:foo/parent::node()</xpath>
            <xpath>ex:foo/parent::document-node()</xpath>
            <xpath>ex:foo/ancestor::foo</xpath>
            <xpath>ex:foo/ancestor::ex:foo</xpath>
            <xpath>ex:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>ex:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>ex:foo/ancestor::*:foo</xpath>
            <xpath>ex:foo/ancestor::ex:*</xpath>
            <xpath>ex:foo/ancestor::*</xpath>
            <xpath>ex:foo/ancestor::node()</xpath>
            <xpath>ex:foo/ancestor::document-node()</xpath>
            <xpath>ex:foo/ancestor-or-self::foo</xpath>
            <xpath>ex:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>ex:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>ex:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>ex:foo/ancestor-or-self::*:foo</xpath>
            <xpath>ex:foo/ancestor-or-self::ex:*</xpath>
            <xpath>ex:foo/ancestor-or-self::*</xpath>
            <xpath>ex:foo/ancestor-or-self::node()</xpath>
            <xpath>ex:foo/ancestor-or-self::document-node()</xpath>
            <xpath>ex:foo/ancestor-or-self::attribute()</xpath>
            <xpath>ex:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>ex:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>ex:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ex:foo/ancestor-or-self::comment()</xpath>
            <xpath>ex:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>ex:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>ex:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>ex:foo/ancestor-or-self::text()</xpath>
            <xpath>ex:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA003">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>Q{http://example.com}foo/attribute()</xpath>
            <xpath>Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>Q{http://example.com}foo/attribute::*</xpath>
            <xpath>Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>Q{http://example.com}foo/@foo</xpath>
            <xpath>Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/@*:foo</xpath>
            <xpath>Q{http://example.com}foo/@ex:*</xpath>
            <xpath>Q{http://example.com}foo/@*</xpath>
            <xpath>Q{http://example.com}foo/@node()</xpath>
            <xpath>Q{http://example.com}foo/@attribute()</xpath>
            <xpath>Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>Q{http://example.com}foo/namespace::*</xpath>
            <xpath>Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>Q{http://example.com}foo/namespace::namespace-node()</xpath>
            <xpath>Q{http://example.com}foo/parent::foo</xpath>
            <xpath>Q{http://example.com}foo/parent::ex:foo</xpath>
            <xpath>Q{http://example.com}foo/parent::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/parent::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/parent::*:foo</xpath>
            <xpath>Q{http://example.com}foo/parent::ex:*</xpath>
            <xpath>Q{http://example.com}foo/parent::*</xpath>
            <xpath>Q{http://example.com}foo/parent::node()</xpath>
            <xpath>Q{http://example.com}foo/parent::document-node()</xpath>
            <xpath>Q{http://example.com}foo/ancestor::foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor::ex:foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/ancestor::*:foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor::ex:*</xpath>
            <xpath>Q{http://example.com}foo/ancestor::*</xpath>
            <xpath>Q{http://example.com}foo/ancestor::node()</xpath>
            <xpath>Q{http://example.com}foo/ancestor::document-node()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::ex:foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::*:foo</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::ex:*</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::*</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::node()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::document-node()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::attribute()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::comment()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::text()</xpath>
            <xpath>Q{http://example.com}foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA004">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>Q{http://example.com}*/attribute()</xpath>
            <xpath>Q{http://example.com}*/attribute::foo</xpath>
            <xpath>Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>Q{http://example.com}*/attribute::*</xpath>
            <xpath>Q{http://example.com}*/attribute::node()</xpath>
            <xpath>Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>Q{http://example.com}*/@foo</xpath>
            <xpath>Q{http://example.com}*/@ex:foo</xpath>
            <xpath>Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/@*:foo</xpath>
            <xpath>Q{http://example.com}*/@ex:*</xpath>
            <xpath>Q{http://example.com}*/@*</xpath>
            <xpath>Q{http://example.com}*/@node()</xpath>
            <xpath>Q{http://example.com}*/@attribute()</xpath>
            <xpath>Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>Q{http://example.com}*/namespace::foo</xpath>
            <xpath>Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>Q{http://example.com}*/namespace::*</xpath>
            <xpath>Q{http://example.com}*/namespace::node()</xpath>
            <xpath>Q{http://example.com}*/namespace::namespace-node()</xpath>
            <xpath>Q{http://example.com}*/parent::foo</xpath>
            <xpath>Q{http://example.com}*/parent::ex:foo</xpath>
            <xpath>Q{http://example.com}*/parent::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/parent::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/parent::*:foo</xpath>
            <xpath>Q{http://example.com}*/parent::ex:*</xpath>
            <xpath>Q{http://example.com}*/parent::*</xpath>
            <xpath>Q{http://example.com}*/parent::node()</xpath>
            <xpath>Q{http://example.com}*/parent::document-node()</xpath>
            <xpath>Q{http://example.com}*/ancestor::foo</xpath>
            <xpath>Q{http://example.com}*/ancestor::ex:foo</xpath>
            <xpath>Q{http://example.com}*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/ancestor::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/ancestor::*:foo</xpath>
            <xpath>Q{http://example.com}*/ancestor::ex:*</xpath>
            <xpath>Q{http://example.com}*/ancestor::*</xpath>
            <xpath>Q{http://example.com}*/ancestor::node()</xpath>
            <xpath>Q{http://example.com}*/ancestor::document-node()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::foo</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::ex:foo</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::*:foo</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::ex:*</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::*</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::node()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::document-node()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::attribute()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::attribute(*)</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::comment()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::text()</xpath>
            <xpath>Q{http://example.com}*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA005">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::foo/attribute()</xpath>
            <xpath>child::foo/attribute::foo</xpath>
            <xpath>child::foo/attribute::ex:foo</xpath>
            <xpath>child::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>child::foo/attribute::*:foo</xpath>
            <xpath>child::foo/attribute::ex:*</xpath>
            <xpath>child::foo/attribute::*</xpath>
            <xpath>child::foo/attribute::node()</xpath>
            <xpath>child::foo/attribute::attribute()</xpath>
            <xpath>child::foo/attribute::attribute(*)</xpath>
            <xpath>child::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>child::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::foo/@foo</xpath>
            <xpath>child::foo/@ex:foo</xpath>
            <xpath>child::foo/@Q{http://example.com}foo</xpath>
            <xpath>child::foo/@Q{http://example.com}*</xpath>
            <xpath>child::foo/@*:foo</xpath>
            <xpath>child::foo/@ex:*</xpath>
            <xpath>child::foo/@*</xpath>
            <xpath>child::foo/@node()</xpath>
            <xpath>child::foo/@attribute()</xpath>
            <xpath>child::foo/@attribute(*)</xpath>
            <xpath>child::foo/@attribute(ex:foo)</xpath>
            <xpath>child::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::foo/namespace::foo</xpath>
            <xpath>child::foo/namespace::Q{}foo</xpath>
            <xpath>child::foo/namespace::Q{}*</xpath>
            <xpath>child::foo/namespace::*:foo</xpath>
            <xpath>child::foo/namespace::*</xpath>
            <xpath>child::foo/namespace::node()</xpath>
            <xpath>child::foo/namespace::namespace-node()</xpath>
            <xpath>child::foo/parent::foo</xpath>
            <xpath>child::foo/parent::ex:foo</xpath>
            <xpath>child::foo/parent::Q{http://example.com}foo</xpath>
            <xpath>child::foo/parent::Q{http://example.com}*</xpath>
            <xpath>child::foo/parent::*:foo</xpath>
            <xpath>child::foo/parent::ex:*</xpath>
            <xpath>child::foo/parent::*</xpath>
            <xpath>child::foo/parent::node()</xpath>
            <xpath>child::foo/parent::document-node()</xpath>
            <xpath>child::foo/ancestor::foo</xpath>
            <xpath>child::foo/ancestor::ex:foo</xpath>
            <xpath>child::foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::foo/ancestor::*:foo</xpath>
            <xpath>child::foo/ancestor::ex:*</xpath>
            <xpath>child::foo/ancestor::*</xpath>
            <xpath>child::foo/ancestor::node()</xpath>
            <xpath>child::foo/ancestor::document-node()</xpath>
            <xpath>child::foo/ancestor-or-self::foo</xpath>
            <xpath>child::foo/ancestor-or-self::ex:foo</xpath>
            <xpath>child::foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::foo/ancestor-or-self::*:foo</xpath>
            <xpath>child::foo/ancestor-or-self::ex:*</xpath>
            <xpath>child::foo/ancestor-or-self::*</xpath>
            <xpath>child::foo/ancestor-or-self::node()</xpath>
            <xpath>child::foo/ancestor-or-self::document-node()</xpath>
            <xpath>child::foo/ancestor-or-self::attribute()</xpath>
            <xpath>child::foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::foo/ancestor-or-self::comment()</xpath>
            <xpath>child::foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::foo/ancestor-or-self::text()</xpath>
            <xpath>child::foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA006">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::ex:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::ex:foo/attribute()</xpath>
            <xpath>child::ex:foo/attribute::foo</xpath>
            <xpath>child::ex:foo/attribute::ex:foo</xpath>
            <xpath>child::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/attribute::*:foo</xpath>
            <xpath>child::ex:foo/attribute::ex:*</xpath>
            <xpath>child::ex:foo/attribute::*</xpath>
            <xpath>child::ex:foo/attribute::node()</xpath>
            <xpath>child::ex:foo/attribute::attribute()</xpath>
            <xpath>child::ex:foo/attribute::attribute(*)</xpath>
            <xpath>child::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>child::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::ex:foo/@foo</xpath>
            <xpath>child::ex:foo/@ex:foo</xpath>
            <xpath>child::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/@*:foo</xpath>
            <xpath>child::ex:foo/@ex:*</xpath>
            <xpath>child::ex:foo/@*</xpath>
            <xpath>child::ex:foo/@node()</xpath>
            <xpath>child::ex:foo/@attribute()</xpath>
            <xpath>child::ex:foo/@attribute(*)</xpath>
            <xpath>child::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>child::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::ex:foo/namespace::foo</xpath>
            <xpath>child::ex:foo/namespace::Q{}foo</xpath>
            <xpath>child::ex:foo/namespace::Q{}*</xpath>
            <xpath>child::ex:foo/namespace::*:foo</xpath>
            <xpath>child::ex:foo/namespace::*</xpath>
            <xpath>child::ex:foo/namespace::node()</xpath>
            <xpath>child::ex:foo/namespace::namespace-node()</xpath>
            <xpath>child::ex:foo/parent::foo</xpath>
            <xpath>child::ex:foo/parent::ex:foo</xpath>
            <xpath>child::ex:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/parent::Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/parent::*:foo</xpath>
            <xpath>child::ex:foo/parent::ex:*</xpath>
            <xpath>child::ex:foo/parent::*</xpath>
            <xpath>child::ex:foo/parent::node()</xpath>
            <xpath>child::ex:foo/parent::document-node()</xpath>
            <xpath>child::ex:foo/ancestor::foo</xpath>
            <xpath>child::ex:foo/ancestor::ex:foo</xpath>
            <xpath>child::ex:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/ancestor::*:foo</xpath>
            <xpath>child::ex:foo/ancestor::ex:*</xpath>
            <xpath>child::ex:foo/ancestor::*</xpath>
            <xpath>child::ex:foo/ancestor::node()</xpath>
            <xpath>child::ex:foo/ancestor::document-node()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::foo</xpath>
            <xpath>child::ex:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>child::ex:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/ancestor-or-self::*:foo</xpath>
            <xpath>child::ex:foo/ancestor-or-self::ex:*</xpath>
            <xpath>child::ex:foo/ancestor-or-self::*</xpath>
            <xpath>child::ex:foo/ancestor-or-self::node()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::document-node()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::attribute()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::ex:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::ex:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::ex:foo/ancestor-or-self::comment()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::ex:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::ex:foo/ancestor-or-self::text()</xpath>
            <xpath>child::ex:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA007">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::Q{http://example.com}foo/attribute()</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>child::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::Q{http://example.com}foo/@foo</xpath>
            <xpath>child::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/@*</xpath>
            <xpath>child::Q{http://example.com}foo/@node()</xpath>
            <xpath>child::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>child::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>child::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>child::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>child::Q{http://example.com}foo/namespace::namespace-node()</xpath>
            <xpath>child::Q{http://example.com}foo/parent::foo</xpath>
            <xpath>child::Q{http://example.com}foo/parent::ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/parent::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/parent::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/parent::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/parent::ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/parent::*</xpath>
            <xpath>child::Q{http://example.com}foo/parent::node()</xpath>
            <xpath>child::Q{http://example.com}foo/parent::document-node()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::*</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::node()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor::document-node()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::*</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::node()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::document-node()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::attribute()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::comment()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::text()</xpath>
            <xpath>child::Q{http://example.com}foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA008">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::Q{http://example.com}*/attribute()</xpath>
            <xpath>child::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>child::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>child::Q{http://example.com}*/attribute::*</xpath>
            <xpath>child::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>child::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>child::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>child::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>child::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::Q{http://example.com}*/@foo</xpath>
            <xpath>child::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/@*:foo</xpath>
            <xpath>child::Q{http://example.com}*/@ex:*</xpath>
            <xpath>child::Q{http://example.com}*/@*</xpath>
            <xpath>child::Q{http://example.com}*/@node()</xpath>
            <xpath>child::Q{http://example.com}*/@attribute()</xpath>
            <xpath>child::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>child::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>child::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>child::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>child::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>child::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/namespace::*</xpath>
            <xpath>child::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>child::Q{http://example.com}*/namespace::namespace-node()</xpath>
            <xpath>child::Q{http://example.com}*/parent::foo</xpath>
            <xpath>child::Q{http://example.com}*/parent::ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/parent::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/parent::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/parent::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/parent::ex:*</xpath>
            <xpath>child::Q{http://example.com}*/parent::*</xpath>
            <xpath>child::Q{http://example.com}*/parent::node()</xpath>
            <xpath>child::Q{http://example.com}*/parent::document-node()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::ex:*</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::*</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::node()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor::document-node()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::ex:*</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::*</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::node()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::document-node()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::attribute()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::comment()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::text()</xpath>
            <xpath>child::Q{http://example.com}*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA009">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: *
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>*/attribute()</xpath>
            <xpath>*/attribute::foo</xpath>
            <xpath>*/attribute::ex:foo</xpath>
            <xpath>*/attribute::Q{http://example.com}foo</xpath>
            <xpath>*/attribute::Q{http://example.com}*</xpath>
            <xpath>*/attribute::*:foo</xpath>
            <xpath>*/attribute::ex:*</xpath>
            <xpath>*/attribute::*</xpath>
            <xpath>*/attribute::node()</xpath>
            <xpath>*/attribute::attribute()</xpath>
            <xpath>*/attribute::attribute(*)</xpath>
            <xpath>*/attribute::attribute(ex:foo)</xpath>
            <xpath>*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>*/@foo</xpath>
            <xpath>*/@ex:foo</xpath>
            <xpath>*/@Q{http://example.com}foo</xpath>
            <xpath>*/@Q{http://example.com}*</xpath>
            <xpath>*/@*:foo</xpath>
            <xpath>*/@ex:*</xpath>
            <xpath>*/@*</xpath>
            <xpath>*/@node()</xpath>
            <xpath>*/@attribute()</xpath>
            <xpath>*/@attribute(*)</xpath>
            <xpath>*/@attribute(ex:foo)</xpath>
            <xpath>*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>*/namespace::foo</xpath>
            <xpath>*/namespace::Q{}foo</xpath>
            <xpath>*/namespace::Q{}*</xpath>
            <xpath>*/namespace::*:foo</xpath>
            <xpath>*/namespace::*</xpath>
            <xpath>*/namespace::node()</xpath>
            <xpath>*/namespace::namespace-node()</xpath>
            <xpath>*/parent::foo</xpath>
            <xpath>*/parent::ex:foo</xpath>
            <xpath>*/parent::Q{http://example.com}foo</xpath>
            <xpath>*/parent::Q{http://example.com}*</xpath>
            <xpath>*/parent::*:foo</xpath>
            <xpath>*/parent::ex:*</xpath>
            <xpath>*/parent::*</xpath>
            <xpath>*/parent::node()</xpath>
            <xpath>*/parent::document-node()</xpath>
            <xpath>*/ancestor::foo</xpath>
            <xpath>*/ancestor::ex:foo</xpath>
            <xpath>*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>*/ancestor::Q{http://example.com}*</xpath>
            <xpath>*/ancestor::*:foo</xpath>
            <xpath>*/ancestor::ex:*</xpath>
            <xpath>*/ancestor::*</xpath>
            <xpath>*/ancestor::node()</xpath>
            <xpath>*/ancestor::document-node()</xpath>
            <xpath>*/ancestor-or-self::foo</xpath>
            <xpath>*/ancestor-or-self::ex:foo</xpath>
            <xpath>*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>*/ancestor-or-self::*:foo</xpath>
            <xpath>*/ancestor-or-self::ex:*</xpath>
            <xpath>*/ancestor-or-self::*</xpath>
            <xpath>*/ancestor-or-self::node()</xpath>
            <xpath>*/ancestor-or-self::document-node()</xpath>
            <xpath>*/ancestor-or-self::attribute()</xpath>
            <xpath>*/ancestor-or-self::attribute(*)</xpath>
            <xpath>*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>*/ancestor-or-self::comment()</xpath>
            <xpath>*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>*/ancestor-or-self::text()</xpath>
            <xpath>*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA010">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: *:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>*:foo/attribute()</xpath>
            <xpath>*:foo/attribute::foo</xpath>
            <xpath>*:foo/attribute::ex:foo</xpath>
            <xpath>*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>*:foo/attribute::*:foo</xpath>
            <xpath>*:foo/attribute::ex:*</xpath>
            <xpath>*:foo/attribute::*</xpath>
            <xpath>*:foo/attribute::node()</xpath>
            <xpath>*:foo/attribute::attribute()</xpath>
            <xpath>*:foo/attribute::attribute(*)</xpath>
            <xpath>*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>*:foo/@foo</xpath>
            <xpath>*:foo/@ex:foo</xpath>
            <xpath>*:foo/@Q{http://example.com}foo</xpath>
            <xpath>*:foo/@Q{http://example.com}*</xpath>
            <xpath>*:foo/@*:foo</xpath>
            <xpath>*:foo/@ex:*</xpath>
            <xpath>*:foo/@*</xpath>
            <xpath>*:foo/@node()</xpath>
            <xpath>*:foo/@attribute()</xpath>
            <xpath>*:foo/@attribute(*)</xpath>
            <xpath>*:foo/@attribute(ex:foo)</xpath>
            <xpath>*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>*:foo/namespace::foo</xpath>
            <xpath>*:foo/namespace::Q{}foo</xpath>
            <xpath>*:foo/namespace::Q{}*</xpath>
            <xpath>*:foo/namespace::*:foo</xpath>
            <xpath>*:foo/namespace::*</xpath>
            <xpath>*:foo/namespace::node()</xpath>
            <xpath>*:foo/namespace::namespace-node()</xpath>
            <xpath>*:foo/parent::foo</xpath>
            <xpath>*:foo/parent::ex:foo</xpath>
            <xpath>*:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>*:foo/parent::Q{http://example.com}*</xpath>
            <xpath>*:foo/parent::*:foo</xpath>
            <xpath>*:foo/parent::ex:*</xpath>
            <xpath>*:foo/parent::*</xpath>
            <xpath>*:foo/parent::node()</xpath>
            <xpath>*:foo/parent::document-node()</xpath>
            <xpath>*:foo/ancestor::foo</xpath>
            <xpath>*:foo/ancestor::ex:foo</xpath>
            <xpath>*:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>*:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>*:foo/ancestor::*:foo</xpath>
            <xpath>*:foo/ancestor::ex:*</xpath>
            <xpath>*:foo/ancestor::*</xpath>
            <xpath>*:foo/ancestor::node()</xpath>
            <xpath>*:foo/ancestor::document-node()</xpath>
            <xpath>*:foo/ancestor-or-self::foo</xpath>
            <xpath>*:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>*:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>*:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>*:foo/ancestor-or-self::*:foo</xpath>
            <xpath>*:foo/ancestor-or-self::ex:*</xpath>
            <xpath>*:foo/ancestor-or-self::*</xpath>
            <xpath>*:foo/ancestor-or-self::node()</xpath>
            <xpath>*:foo/ancestor-or-self::document-node()</xpath>
            <xpath>*:foo/ancestor-or-self::attribute()</xpath>
            <xpath>*:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>*:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>*:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>*:foo/ancestor-or-self::comment()</xpath>
            <xpath>*:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>*:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>*:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>*:foo/ancestor-or-self::text()</xpath>
            <xpath>*:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA011">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: ex:*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ex:*/attribute()</xpath>
            <xpath>ex:*/attribute::foo</xpath>
            <xpath>ex:*/attribute::ex:foo</xpath>
            <xpath>ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>ex:*/attribute::*:foo</xpath>
            <xpath>ex:*/attribute::ex:*</xpath>
            <xpath>ex:*/attribute::*</xpath>
            <xpath>ex:*/attribute::node()</xpath>
            <xpath>ex:*/attribute::attribute()</xpath>
            <xpath>ex:*/attribute::attribute(*)</xpath>
            <xpath>ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ex:*/@foo</xpath>
            <xpath>ex:*/@ex:foo</xpath>
            <xpath>ex:*/@Q{http://example.com}foo</xpath>
            <xpath>ex:*/@Q{http://example.com}*</xpath>
            <xpath>ex:*/@*:foo</xpath>
            <xpath>ex:*/@ex:*</xpath>
            <xpath>ex:*/@*</xpath>
            <xpath>ex:*/@node()</xpath>
            <xpath>ex:*/@attribute()</xpath>
            <xpath>ex:*/@attribute(*)</xpath>
            <xpath>ex:*/@attribute(ex:foo)</xpath>
            <xpath>ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>ex:*/namespace::foo</xpath>
            <xpath>ex:*/namespace::Q{}foo</xpath>
            <xpath>ex:*/namespace::Q{}*</xpath>
            <xpath>ex:*/namespace::*:foo</xpath>
            <xpath>ex:*/namespace::*</xpath>
            <xpath>ex:*/namespace::node()</xpath>
            <xpath>ex:*/namespace::namespace-node()</xpath>
            <xpath>ex:*/parent::foo</xpath>
            <xpath>ex:*/parent::ex:foo</xpath>
            <xpath>ex:*/parent::Q{http://example.com}foo</xpath>
            <xpath>ex:*/parent::Q{http://example.com}*</xpath>
            <xpath>ex:*/parent::*:foo</xpath>
            <xpath>ex:*/parent::ex:*</xpath>
            <xpath>ex:*/parent::*</xpath>
            <xpath>ex:*/parent::node()</xpath>
            <xpath>ex:*/parent::document-node()</xpath>
            <xpath>ex:*/ancestor::foo</xpath>
            <xpath>ex:*/ancestor::ex:foo</xpath>
            <xpath>ex:*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>ex:*/ancestor::Q{http://example.com}*</xpath>
            <xpath>ex:*/ancestor::*:foo</xpath>
            <xpath>ex:*/ancestor::ex:*</xpath>
            <xpath>ex:*/ancestor::*</xpath>
            <xpath>ex:*/ancestor::node()</xpath>
            <xpath>ex:*/ancestor::document-node()</xpath>
            <xpath>ex:*/ancestor-or-self::foo</xpath>
            <xpath>ex:*/ancestor-or-self::ex:foo</xpath>
            <xpath>ex:*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>ex:*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>ex:*/ancestor-or-self::*:foo</xpath>
            <xpath>ex:*/ancestor-or-self::ex:*</xpath>
            <xpath>ex:*/ancestor-or-self::*</xpath>
            <xpath>ex:*/ancestor-or-self::node()</xpath>
            <xpath>ex:*/ancestor-or-self::document-node()</xpath>
            <xpath>ex:*/ancestor-or-self::attribute()</xpath>
            <xpath>ex:*/ancestor-or-self::attribute(*)</xpath>
            <xpath>ex:*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>ex:*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>ex:*/ancestor-or-self::comment()</xpath>
            <xpath>ex:*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>ex:*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>ex:*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>ex:*/ancestor-or-self::text()</xpath>
            <xpath>ex:*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA012">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::*/attribute()</xpath>
            <xpath>child::*/attribute::foo</xpath>
            <xpath>child::*/attribute::ex:foo</xpath>
            <xpath>child::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::*/attribute::Q{http://example.com}*</xpath>
            <xpath>child::*/attribute::*:foo</xpath>
            <xpath>child::*/attribute::ex:*</xpath>
            <xpath>child::*/attribute::*</xpath>
            <xpath>child::*/attribute::node()</xpath>
            <xpath>child::*/attribute::attribute()</xpath>
            <xpath>child::*/attribute::attribute(*)</xpath>
            <xpath>child::*/attribute::attribute(ex:foo)</xpath>
            <xpath>child::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::*/@foo</xpath>
            <xpath>child::*/@ex:foo</xpath>
            <xpath>child::*/@Q{http://example.com}foo</xpath>
            <xpath>child::*/@Q{http://example.com}*</xpath>
            <xpath>child::*/@*:foo</xpath>
            <xpath>child::*/@ex:*</xpath>
            <xpath>child::*/@*</xpath>
            <xpath>child::*/@node()</xpath>
            <xpath>child::*/@attribute()</xpath>
            <xpath>child::*/@attribute(*)</xpath>
            <xpath>child::*/@attribute(ex:foo)</xpath>
            <xpath>child::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::*/namespace::foo</xpath>
            <xpath>child::*/namespace::Q{}foo</xpath>
            <xpath>child::*/namespace::Q{}*</xpath>
            <xpath>child::*/namespace::*:foo</xpath>
            <xpath>child::*/namespace::*</xpath>
            <xpath>child::*/namespace::node()</xpath>
            <xpath>child::*/namespace::namespace-node()</xpath>
            <xpath>child::*/parent::foo</xpath>
            <xpath>child::*/parent::ex:foo</xpath>
            <xpath>child::*/parent::Q{http://example.com}foo</xpath>
            <xpath>child::*/parent::Q{http://example.com}*</xpath>
            <xpath>child::*/parent::*:foo</xpath>
            <xpath>child::*/parent::ex:*</xpath>
            <xpath>child::*/parent::*</xpath>
            <xpath>child::*/parent::node()</xpath>
            <xpath>child::*/parent::document-node()</xpath>
            <xpath>child::*/ancestor::foo</xpath>
            <xpath>child::*/ancestor::ex:foo</xpath>
            <xpath>child::*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::*/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::*/ancestor::*:foo</xpath>
            <xpath>child::*/ancestor::ex:*</xpath>
            <xpath>child::*/ancestor::*</xpath>
            <xpath>child::*/ancestor::node()</xpath>
            <xpath>child::*/ancestor::document-node()</xpath>
            <xpath>child::*/ancestor-or-self::foo</xpath>
            <xpath>child::*/ancestor-or-self::ex:foo</xpath>
            <xpath>child::*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::*/ancestor-or-self::*:foo</xpath>
            <xpath>child::*/ancestor-or-self::ex:*</xpath>
            <xpath>child::*/ancestor-or-self::*</xpath>
            <xpath>child::*/ancestor-or-self::node()</xpath>
            <xpath>child::*/ancestor-or-self::document-node()</xpath>
            <xpath>child::*/ancestor-or-self::attribute()</xpath>
            <xpath>child::*/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::*/ancestor-or-self::comment()</xpath>
            <xpath>child::*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::*/ancestor-or-self::text()</xpath>
            <xpath>child::*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA013">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::*:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::*:foo/attribute()</xpath>
            <xpath>child::*:foo/attribute::foo</xpath>
            <xpath>child::*:foo/attribute::ex:foo</xpath>
            <xpath>child::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>child::*:foo/attribute::*:foo</xpath>
            <xpath>child::*:foo/attribute::ex:*</xpath>
            <xpath>child::*:foo/attribute::*</xpath>
            <xpath>child::*:foo/attribute::node()</xpath>
            <xpath>child::*:foo/attribute::attribute()</xpath>
            <xpath>child::*:foo/attribute::attribute(*)</xpath>
            <xpath>child::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>child::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::*:foo/@foo</xpath>
            <xpath>child::*:foo/@ex:foo</xpath>
            <xpath>child::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/@Q{http://example.com}*</xpath>
            <xpath>child::*:foo/@*:foo</xpath>
            <xpath>child::*:foo/@ex:*</xpath>
            <xpath>child::*:foo/@*</xpath>
            <xpath>child::*:foo/@node()</xpath>
            <xpath>child::*:foo/@attribute()</xpath>
            <xpath>child::*:foo/@attribute(*)</xpath>
            <xpath>child::*:foo/@attribute(ex:foo)</xpath>
            <xpath>child::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::*:foo/namespace::foo</xpath>
            <xpath>child::*:foo/namespace::Q{}foo</xpath>
            <xpath>child::*:foo/namespace::Q{}*</xpath>
            <xpath>child::*:foo/namespace::*:foo</xpath>
            <xpath>child::*:foo/namespace::*</xpath>
            <xpath>child::*:foo/namespace::node()</xpath>
            <xpath>child::*:foo/namespace::namespace-node()</xpath>
            <xpath>child::*:foo/parent::foo</xpath>
            <xpath>child::*:foo/parent::ex:foo</xpath>
            <xpath>child::*:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/parent::Q{http://example.com}*</xpath>
            <xpath>child::*:foo/parent::*:foo</xpath>
            <xpath>child::*:foo/parent::ex:*</xpath>
            <xpath>child::*:foo/parent::*</xpath>
            <xpath>child::*:foo/parent::node()</xpath>
            <xpath>child::*:foo/parent::document-node()</xpath>
            <xpath>child::*:foo/ancestor::foo</xpath>
            <xpath>child::*:foo/ancestor::ex:foo</xpath>
            <xpath>child::*:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::*:foo/ancestor::*:foo</xpath>
            <xpath>child::*:foo/ancestor::ex:*</xpath>
            <xpath>child::*:foo/ancestor::*</xpath>
            <xpath>child::*:foo/ancestor::node()</xpath>
            <xpath>child::*:foo/ancestor::document-node()</xpath>
            <xpath>child::*:foo/ancestor-or-self::foo</xpath>
            <xpath>child::*:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>child::*:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::*:foo/ancestor-or-self::*:foo</xpath>
            <xpath>child::*:foo/ancestor-or-self::ex:*</xpath>
            <xpath>child::*:foo/ancestor-or-self::*</xpath>
            <xpath>child::*:foo/ancestor-or-self::node()</xpath>
            <xpath>child::*:foo/ancestor-or-self::document-node()</xpath>
            <xpath>child::*:foo/ancestor-or-self::attribute()</xpath>
            <xpath>child::*:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::*:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::*:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::*:foo/ancestor-or-self::comment()</xpath>
            <xpath>child::*:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::*:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::*:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::*:foo/ancestor-or-self::text()</xpath>
            <xpath>child::*:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA014">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::ex:*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::ex:*/attribute()</xpath>
            <xpath>child::ex:*/attribute::foo</xpath>
            <xpath>child::ex:*/attribute::ex:foo</xpath>
            <xpath>child::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>child::ex:*/attribute::*:foo</xpath>
            <xpath>child::ex:*/attribute::ex:*</xpath>
            <xpath>child::ex:*/attribute::*</xpath>
            <xpath>child::ex:*/attribute::node()</xpath>
            <xpath>child::ex:*/attribute::attribute()</xpath>
            <xpath>child::ex:*/attribute::attribute(*)</xpath>
            <xpath>child::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>child::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::ex:*/@foo</xpath>
            <xpath>child::ex:*/@ex:foo</xpath>
            <xpath>child::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/@Q{http://example.com}*</xpath>
            <xpath>child::ex:*/@*:foo</xpath>
            <xpath>child::ex:*/@ex:*</xpath>
            <xpath>child::ex:*/@*</xpath>
            <xpath>child::ex:*/@node()</xpath>
            <xpath>child::ex:*/@attribute()</xpath>
            <xpath>child::ex:*/@attribute(*)</xpath>
            <xpath>child::ex:*/@attribute(ex:foo)</xpath>
            <xpath>child::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::ex:*/namespace::foo</xpath>
            <xpath>child::ex:*/namespace::Q{}foo</xpath>
            <xpath>child::ex:*/namespace::Q{}*</xpath>
            <xpath>child::ex:*/namespace::*:foo</xpath>
            <xpath>child::ex:*/namespace::*</xpath>
            <xpath>child::ex:*/namespace::node()</xpath>
            <xpath>child::ex:*/namespace::namespace-node()</xpath>
            <xpath>child::ex:*/parent::foo</xpath>
            <xpath>child::ex:*/parent::ex:foo</xpath>
            <xpath>child::ex:*/parent::Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/parent::Q{http://example.com}*</xpath>
            <xpath>child::ex:*/parent::*:foo</xpath>
            <xpath>child::ex:*/parent::ex:*</xpath>
            <xpath>child::ex:*/parent::*</xpath>
            <xpath>child::ex:*/parent::node()</xpath>
            <xpath>child::ex:*/parent::document-node()</xpath>
            <xpath>child::ex:*/ancestor::foo</xpath>
            <xpath>child::ex:*/ancestor::ex:foo</xpath>
            <xpath>child::ex:*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::ex:*/ancestor::*:foo</xpath>
            <xpath>child::ex:*/ancestor::ex:*</xpath>
            <xpath>child::ex:*/ancestor::*</xpath>
            <xpath>child::ex:*/ancestor::node()</xpath>
            <xpath>child::ex:*/ancestor::document-node()</xpath>
            <xpath>child::ex:*/ancestor-or-self::foo</xpath>
            <xpath>child::ex:*/ancestor-or-self::ex:foo</xpath>
            <xpath>child::ex:*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::ex:*/ancestor-or-self::*:foo</xpath>
            <xpath>child::ex:*/ancestor-or-self::ex:*</xpath>
            <xpath>child::ex:*/ancestor-or-self::*</xpath>
            <xpath>child::ex:*/ancestor-or-self::node()</xpath>
            <xpath>child::ex:*/ancestor-or-self::document-node()</xpath>
            <xpath>child::ex:*/ancestor-or-self::attribute()</xpath>
            <xpath>child::ex:*/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::ex:*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::ex:*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::ex:*/ancestor-or-self::comment()</xpath>
            <xpath>child::ex:*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::ex:*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::ex:*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::ex:*/ancestor-or-self::text()</xpath>
            <xpath>child::ex:*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA015">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: element()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>element()/attribute()</xpath>
            <xpath>element()/attribute::foo</xpath>
            <xpath>element()/attribute::ex:foo</xpath>
            <xpath>element()/attribute::Q{http://example.com}foo</xpath>
            <xpath>element()/attribute::Q{http://example.com}*</xpath>
            <xpath>element()/attribute::*:foo</xpath>
            <xpath>element()/attribute::ex:*</xpath>
            <xpath>element()/attribute::*</xpath>
            <xpath>element()/attribute::node()</xpath>
            <xpath>element()/attribute::attribute()</xpath>
            <xpath>element()/attribute::attribute(*)</xpath>
            <xpath>element()/attribute::attribute(ex:foo)</xpath>
            <xpath>element()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>element()/@foo</xpath>
            <xpath>element()/@ex:foo</xpath>
            <xpath>element()/@Q{http://example.com}foo</xpath>
            <xpath>element()/@Q{http://example.com}*</xpath>
            <xpath>element()/@*:foo</xpath>
            <xpath>element()/@ex:*</xpath>
            <xpath>element()/@*</xpath>
            <xpath>element()/@node()</xpath>
            <xpath>element()/@attribute()</xpath>
            <xpath>element()/@attribute(*)</xpath>
            <xpath>element()/@attribute(ex:foo)</xpath>
            <xpath>element()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>element()/namespace::foo</xpath>
            <xpath>element()/namespace::Q{}foo</xpath>
            <xpath>element()/namespace::Q{}*</xpath>
            <xpath>element()/namespace::*:foo</xpath>
            <xpath>element()/namespace::*</xpath>
            <xpath>element()/namespace::node()</xpath>
            <xpath>element()/namespace::namespace-node()</xpath>
            <xpath>element()/parent::foo</xpath>
            <xpath>element()/parent::ex:foo</xpath>
            <xpath>element()/parent::Q{http://example.com}foo</xpath>
            <xpath>element()/parent::Q{http://example.com}*</xpath>
            <xpath>element()/parent::*:foo</xpath>
            <xpath>element()/parent::ex:*</xpath>
            <xpath>element()/parent::*</xpath>
            <xpath>element()/parent::node()</xpath>
            <xpath>element()/parent::document-node()</xpath>
            <xpath>element()/ancestor::foo</xpath>
            <xpath>element()/ancestor::ex:foo</xpath>
            <xpath>element()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>element()/ancestor::Q{http://example.com}*</xpath>
            <xpath>element()/ancestor::*:foo</xpath>
            <xpath>element()/ancestor::ex:*</xpath>
            <xpath>element()/ancestor::*</xpath>
            <xpath>element()/ancestor::node()</xpath>
            <xpath>element()/ancestor::document-node()</xpath>
            <xpath>element()/ancestor-or-self::foo</xpath>
            <xpath>element()/ancestor-or-self::ex:foo</xpath>
            <xpath>element()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>element()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>element()/ancestor-or-self::*:foo</xpath>
            <xpath>element()/ancestor-or-self::ex:*</xpath>
            <xpath>element()/ancestor-or-self::*</xpath>
            <xpath>element()/ancestor-or-self::node()</xpath>
            <xpath>element()/ancestor-or-self::document-node()</xpath>
            <xpath>element()/ancestor-or-self::attribute()</xpath>
            <xpath>element()/ancestor-or-self::attribute(*)</xpath>
            <xpath>element()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>element()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>element()/ancestor-or-self::comment()</xpath>
            <xpath>element()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>element()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>element()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>element()/ancestor-or-self::text()</xpath>
            <xpath>element()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA016">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::element()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::element()/attribute()</xpath>
            <xpath>child::element()/attribute::foo</xpath>
            <xpath>child::element()/attribute::ex:foo</xpath>
            <xpath>child::element()/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::element()/attribute::Q{http://example.com}*</xpath>
            <xpath>child::element()/attribute::*:foo</xpath>
            <xpath>child::element()/attribute::ex:*</xpath>
            <xpath>child::element()/attribute::*</xpath>
            <xpath>child::element()/attribute::node()</xpath>
            <xpath>child::element()/attribute::attribute()</xpath>
            <xpath>child::element()/attribute::attribute(*)</xpath>
            <xpath>child::element()/attribute::attribute(ex:foo)</xpath>
            <xpath>child::element()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::element()/@foo</xpath>
            <xpath>child::element()/@ex:foo</xpath>
            <xpath>child::element()/@Q{http://example.com}foo</xpath>
            <xpath>child::element()/@Q{http://example.com}*</xpath>
            <xpath>child::element()/@*:foo</xpath>
            <xpath>child::element()/@ex:*</xpath>
            <xpath>child::element()/@*</xpath>
            <xpath>child::element()/@node()</xpath>
            <xpath>child::element()/@attribute()</xpath>
            <xpath>child::element()/@attribute(*)</xpath>
            <xpath>child::element()/@attribute(ex:foo)</xpath>
            <xpath>child::element()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::element()/namespace::foo</xpath>
            <xpath>child::element()/namespace::Q{}foo</xpath>
            <xpath>child::element()/namespace::Q{}*</xpath>
            <xpath>child::element()/namespace::*:foo</xpath>
            <xpath>child::element()/namespace::*</xpath>
            <xpath>child::element()/namespace::node()</xpath>
            <xpath>child::element()/namespace::namespace-node()</xpath>
            <xpath>child::element()/parent::foo</xpath>
            <xpath>child::element()/parent::ex:foo</xpath>
            <xpath>child::element()/parent::Q{http://example.com}foo</xpath>
            <xpath>child::element()/parent::Q{http://example.com}*</xpath>
            <xpath>child::element()/parent::*:foo</xpath>
            <xpath>child::element()/parent::ex:*</xpath>
            <xpath>child::element()/parent::*</xpath>
            <xpath>child::element()/parent::node()</xpath>
            <xpath>child::element()/parent::document-node()</xpath>
            <xpath>child::element()/ancestor::foo</xpath>
            <xpath>child::element()/ancestor::ex:foo</xpath>
            <xpath>child::element()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::element()/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::element()/ancestor::*:foo</xpath>
            <xpath>child::element()/ancestor::ex:*</xpath>
            <xpath>child::element()/ancestor::*</xpath>
            <xpath>child::element()/ancestor::node()</xpath>
            <xpath>child::element()/ancestor::document-node()</xpath>
            <xpath>child::element()/ancestor-or-self::foo</xpath>
            <xpath>child::element()/ancestor-or-self::ex:foo</xpath>
            <xpath>child::element()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::element()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::element()/ancestor-or-self::*:foo</xpath>
            <xpath>child::element()/ancestor-or-self::ex:*</xpath>
            <xpath>child::element()/ancestor-or-self::*</xpath>
            <xpath>child::element()/ancestor-or-self::node()</xpath>
            <xpath>child::element()/ancestor-or-self::document-node()</xpath>
            <xpath>child::element()/ancestor-or-self::attribute()</xpath>
            <xpath>child::element()/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::element()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::element()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::element()/ancestor-or-self::comment()</xpath>
            <xpath>child::element()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::element()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::element()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::element()/ancestor-or-self::text()</xpath>
            <xpath>child::element()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA017">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: node()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>node()/attribute()</xpath>
            <xpath>node()/attribute::foo</xpath>
            <xpath>node()/attribute::ex:foo</xpath>
            <xpath>node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>node()/attribute::Q{http://example.com}*</xpath>
            <xpath>node()/attribute::*:foo</xpath>
            <xpath>node()/attribute::ex:*</xpath>
            <xpath>node()/attribute::*</xpath>
            <xpath>node()/attribute::node()</xpath>
            <xpath>node()/attribute::attribute()</xpath>
            <xpath>node()/attribute::attribute(*)</xpath>
            <xpath>node()/attribute::attribute(ex:foo)</xpath>
            <xpath>node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>node()/@foo</xpath>
            <xpath>node()/@ex:foo</xpath>
            <xpath>node()/@Q{http://example.com}foo</xpath>
            <xpath>node()/@Q{http://example.com}*</xpath>
            <xpath>node()/@*:foo</xpath>
            <xpath>node()/@ex:*</xpath>
            <xpath>node()/@*</xpath>
            <xpath>node()/@node()</xpath>
            <xpath>node()/@attribute()</xpath>
            <xpath>node()/@attribute(*)</xpath>
            <xpath>node()/@attribute(ex:foo)</xpath>
            <xpath>node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>node()/namespace::foo</xpath>
            <xpath>node()/namespace::Q{}foo</xpath>
            <xpath>node()/namespace::Q{}*</xpath>
            <xpath>node()/namespace::*:foo</xpath>
            <xpath>node()/namespace::*</xpath>
            <xpath>node()/namespace::node()</xpath>
            <xpath>node()/namespace::namespace-node()</xpath>
            <xpath>node()/parent::foo</xpath>
            <xpath>node()/parent::ex:foo</xpath>
            <xpath>node()/parent::Q{http://example.com}foo</xpath>
            <xpath>node()/parent::Q{http://example.com}*</xpath>
            <xpath>node()/parent::*:foo</xpath>
            <xpath>node()/parent::ex:*</xpath>
            <xpath>node()/parent::*</xpath>
            <xpath>node()/parent::node()</xpath>
            <xpath>node()/parent::document-node()</xpath>
            <xpath>node()/ancestor::foo</xpath>
            <xpath>node()/ancestor::ex:foo</xpath>
            <xpath>node()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>node()/ancestor::Q{http://example.com}*</xpath>
            <xpath>node()/ancestor::*:foo</xpath>
            <xpath>node()/ancestor::ex:*</xpath>
            <xpath>node()/ancestor::*</xpath>
            <xpath>node()/ancestor::node()</xpath>
            <xpath>node()/ancestor::document-node()</xpath>
            <xpath>node()/ancestor-or-self::foo</xpath>
            <xpath>node()/ancestor-or-self::ex:foo</xpath>
            <xpath>node()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>node()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>node()/ancestor-or-self::*:foo</xpath>
            <xpath>node()/ancestor-or-self::ex:*</xpath>
            <xpath>node()/ancestor-or-self::*</xpath>
            <xpath>node()/ancestor-or-self::node()</xpath>
            <xpath>node()/ancestor-or-self::document-node()</xpath>
            <xpath>node()/ancestor-or-self::attribute()</xpath>
            <xpath>node()/ancestor-or-self::attribute(*)</xpath>
            <xpath>node()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>node()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>node()/ancestor-or-self::comment()</xpath>
            <xpath>node()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>node()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>node()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>node()/ancestor-or-self::text()</xpath>
            <xpath>node()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA018">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: child::node()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::node()/attribute()</xpath>
            <xpath>child::node()/attribute::foo</xpath>
            <xpath>child::node()/attribute::ex:foo</xpath>
            <xpath>child::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>child::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>child::node()/attribute::*:foo</xpath>
            <xpath>child::node()/attribute::ex:*</xpath>
            <xpath>child::node()/attribute::*</xpath>
            <xpath>child::node()/attribute::node()</xpath>
            <xpath>child::node()/attribute::attribute()</xpath>
            <xpath>child::node()/attribute::attribute(*)</xpath>
            <xpath>child::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>child::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::node()/@foo</xpath>
            <xpath>child::node()/@ex:foo</xpath>
            <xpath>child::node()/@Q{http://example.com}foo</xpath>
            <xpath>child::node()/@Q{http://example.com}*</xpath>
            <xpath>child::node()/@*:foo</xpath>
            <xpath>child::node()/@ex:*</xpath>
            <xpath>child::node()/@*</xpath>
            <xpath>child::node()/@node()</xpath>
            <xpath>child::node()/@attribute()</xpath>
            <xpath>child::node()/@attribute(*)</xpath>
            <xpath>child::node()/@attribute(ex:foo)</xpath>
            <xpath>child::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::node()/namespace::foo</xpath>
            <xpath>child::node()/namespace::Q{}foo</xpath>
            <xpath>child::node()/namespace::Q{}*</xpath>
            <xpath>child::node()/namespace::*:foo</xpath>
            <xpath>child::node()/namespace::*</xpath>
            <xpath>child::node()/namespace::node()</xpath>
            <xpath>child::node()/namespace::namespace-node()</xpath>
            <xpath>child::node()/parent::foo</xpath>
            <xpath>child::node()/parent::ex:foo</xpath>
            <xpath>child::node()/parent::Q{http://example.com}foo</xpath>
            <xpath>child::node()/parent::Q{http://example.com}*</xpath>
            <xpath>child::node()/parent::*:foo</xpath>
            <xpath>child::node()/parent::ex:*</xpath>
            <xpath>child::node()/parent::*</xpath>
            <xpath>child::node()/parent::node()</xpath>
            <xpath>child::node()/parent::document-node()</xpath>
            <xpath>child::node()/ancestor::foo</xpath>
            <xpath>child::node()/ancestor::ex:foo</xpath>
            <xpath>child::node()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>child::node()/ancestor::Q{http://example.com}*</xpath>
            <xpath>child::node()/ancestor::*:foo</xpath>
            <xpath>child::node()/ancestor::ex:*</xpath>
            <xpath>child::node()/ancestor::*</xpath>
            <xpath>child::node()/ancestor::node()</xpath>
            <xpath>child::node()/ancestor::document-node()</xpath>
            <xpath>child::node()/ancestor-or-self::foo</xpath>
            <xpath>child::node()/ancestor-or-self::ex:foo</xpath>
            <xpath>child::node()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::node()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>child::node()/ancestor-or-self::*:foo</xpath>
            <xpath>child::node()/ancestor-or-self::ex:*</xpath>
            <xpath>child::node()/ancestor-or-self::*</xpath>
            <xpath>child::node()/ancestor-or-self::node()</xpath>
            <xpath>child::node()/ancestor-or-self::document-node()</xpath>
            <xpath>child::node()/ancestor-or-self::attribute()</xpath>
            <xpath>child::node()/ancestor-or-self::attribute(*)</xpath>
            <xpath>child::node()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>child::node()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>child::node()/ancestor-or-self::comment()</xpath>
            <xpath>child::node()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>child::node()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>child::node()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>child::node()/ancestor-or-self::text()</xpath>
            <xpath>child::node()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA019">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::foo/attribute()</xpath>
            <xpath>descendant::foo/attribute::foo</xpath>
            <xpath>descendant::foo/attribute::ex:foo</xpath>
            <xpath>descendant::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/attribute::*:foo</xpath>
            <xpath>descendant::foo/attribute::ex:*</xpath>
            <xpath>descendant::foo/attribute::*</xpath>
            <xpath>descendant::foo/attribute::node()</xpath>
            <xpath>descendant::foo/attribute::attribute()</xpath>
            <xpath>descendant::foo/attribute::attribute(*)</xpath>
            <xpath>descendant::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::foo/@foo</xpath>
            <xpath>descendant::foo/@ex:foo</xpath>
            <xpath>descendant::foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/@Q{http://example.com}*</xpath>
            <xpath>descendant::foo/@*:foo</xpath>
            <xpath>descendant::foo/@ex:*</xpath>
            <xpath>descendant::foo/@*</xpath>
            <xpath>descendant::foo/@node()</xpath>
            <xpath>descendant::foo/@attribute()</xpath>
            <xpath>descendant::foo/@attribute(*)</xpath>
            <xpath>descendant::foo/@attribute(ex:foo)</xpath>
            <xpath>descendant::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::foo/namespace::foo</xpath>
            <xpath>descendant::foo/namespace::Q{}foo</xpath>
            <xpath>descendant::foo/namespace::Q{}*</xpath>
            <xpath>descendant::foo/namespace::*:foo</xpath>
            <xpath>descendant::foo/namespace::*</xpath>
            <xpath>descendant::foo/namespace::node()</xpath>
            <xpath>descendant::foo/namespace::namespace-node()</xpath>
            <xpath>descendant::foo/parent::foo</xpath>
            <xpath>descendant::foo/parent::ex:foo</xpath>
            <xpath>descendant::foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/parent::*:foo</xpath>
            <xpath>descendant::foo/parent::ex:*</xpath>
            <xpath>descendant::foo/parent::*</xpath>
            <xpath>descendant::foo/parent::node()</xpath>
            <xpath>descendant::foo/parent::document-node()</xpath>
            <xpath>descendant::foo/ancestor::foo</xpath>
            <xpath>descendant::foo/ancestor::ex:foo</xpath>
            <xpath>descendant::foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/ancestor::*:foo</xpath>
            <xpath>descendant::foo/ancestor::ex:*</xpath>
            <xpath>descendant::foo/ancestor::*</xpath>
            <xpath>descendant::foo/ancestor::node()</xpath>
            <xpath>descendant::foo/ancestor::document-node()</xpath>
            <xpath>descendant::foo/ancestor-or-self::foo</xpath>
            <xpath>descendant::foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::foo/ancestor-or-self::*</xpath>
            <xpath>descendant::foo/ancestor-or-self::node()</xpath>
            <xpath>descendant::foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant::foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::foo/ancestor-or-self::text()</xpath>
            <xpath>descendant::foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA020">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::ex:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::ex:foo/attribute()</xpath>
            <xpath>descendant::ex:foo/attribute::foo</xpath>
            <xpath>descendant::ex:foo/attribute::ex:foo</xpath>
            <xpath>descendant::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/attribute::*:foo</xpath>
            <xpath>descendant::ex:foo/attribute::ex:*</xpath>
            <xpath>descendant::ex:foo/attribute::*</xpath>
            <xpath>descendant::ex:foo/attribute::node()</xpath>
            <xpath>descendant::ex:foo/attribute::attribute()</xpath>
            <xpath>descendant::ex:foo/attribute::attribute(*)</xpath>
            <xpath>descendant::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::ex:foo/@foo</xpath>
            <xpath>descendant::ex:foo/@ex:foo</xpath>
            <xpath>descendant::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/@*:foo</xpath>
            <xpath>descendant::ex:foo/@ex:*</xpath>
            <xpath>descendant::ex:foo/@*</xpath>
            <xpath>descendant::ex:foo/@node()</xpath>
            <xpath>descendant::ex:foo/@attribute()</xpath>
            <xpath>descendant::ex:foo/@attribute(*)</xpath>
            <xpath>descendant::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>descendant::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::ex:foo/namespace::foo</xpath>
            <xpath>descendant::ex:foo/namespace::Q{}foo</xpath>
            <xpath>descendant::ex:foo/namespace::Q{}*</xpath>
            <xpath>descendant::ex:foo/namespace::*:foo</xpath>
            <xpath>descendant::ex:foo/namespace::*</xpath>
            <xpath>descendant::ex:foo/namespace::node()</xpath>
            <xpath>descendant::ex:foo/namespace::namespace-node()</xpath>
            <xpath>descendant::ex:foo/parent::foo</xpath>
            <xpath>descendant::ex:foo/parent::ex:foo</xpath>
            <xpath>descendant::ex:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/parent::*:foo</xpath>
            <xpath>descendant::ex:foo/parent::ex:*</xpath>
            <xpath>descendant::ex:foo/parent::*</xpath>
            <xpath>descendant::ex:foo/parent::node()</xpath>
            <xpath>descendant::ex:foo/parent::document-node()</xpath>
            <xpath>descendant::ex:foo/ancestor::foo</xpath>
            <xpath>descendant::ex:foo/ancestor::ex:foo</xpath>
            <xpath>descendant::ex:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/ancestor::*:foo</xpath>
            <xpath>descendant::ex:foo/ancestor::ex:*</xpath>
            <xpath>descendant::ex:foo/ancestor::*</xpath>
            <xpath>descendant::ex:foo/ancestor::node()</xpath>
            <xpath>descendant::ex:foo/ancestor::document-node()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::foo</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::*</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::node()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::text()</xpath>
            <xpath>descendant::ex:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA021">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::Q{http://example.com}foo/attribute()</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::Q{http://example.com}foo/@foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/@*</xpath>
            <xpath>descendant::Q{http://example.com}foo/@node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>descendant::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>descendant::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>descendant::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/namespace::namespace-node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/parent::document-node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor::document-node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::text()</xpath>
            <xpath>descendant::Q{http://example.com}foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA022">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::Q{http://example.com}*/attribute()</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::*</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::Q{http://example.com}*/@foo</xpath>
            <xpath>descendant::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/@*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/@ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/@*</xpath>
            <xpath>descendant::Q{http://example.com}*/@node()</xpath>
            <xpath>descendant::Q{http://example.com}*/@attribute()</xpath>
            <xpath>descendant::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>descendant::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>descendant::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::*</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>descendant::Q{http://example.com}*/namespace::namespace-node()</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::*</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::node()</xpath>
            <xpath>descendant::Q{http://example.com}*/parent::document-node()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::*</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::node()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor::document-node()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::*</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::node()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::comment()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::text()</xpath>
            <xpath>descendant::Q{http://example.com}*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA023">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::*:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::*:foo/attribute()</xpath>
            <xpath>descendant::*:foo/attribute::foo</xpath>
            <xpath>descendant::*:foo/attribute::ex:foo</xpath>
            <xpath>descendant::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/attribute::*:foo</xpath>
            <xpath>descendant::*:foo/attribute::ex:*</xpath>
            <xpath>descendant::*:foo/attribute::*</xpath>
            <xpath>descendant::*:foo/attribute::node()</xpath>
            <xpath>descendant::*:foo/attribute::attribute()</xpath>
            <xpath>descendant::*:foo/attribute::attribute(*)</xpath>
            <xpath>descendant::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::*:foo/@foo</xpath>
            <xpath>descendant::*:foo/@ex:foo</xpath>
            <xpath>descendant::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/@Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/@*:foo</xpath>
            <xpath>descendant::*:foo/@ex:*</xpath>
            <xpath>descendant::*:foo/@*</xpath>
            <xpath>descendant::*:foo/@node()</xpath>
            <xpath>descendant::*:foo/@attribute()</xpath>
            <xpath>descendant::*:foo/@attribute(*)</xpath>
            <xpath>descendant::*:foo/@attribute(ex:foo)</xpath>
            <xpath>descendant::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::*:foo/namespace::foo</xpath>
            <xpath>descendant::*:foo/namespace::Q{}foo</xpath>
            <xpath>descendant::*:foo/namespace::Q{}*</xpath>
            <xpath>descendant::*:foo/namespace::*:foo</xpath>
            <xpath>descendant::*:foo/namespace::*</xpath>
            <xpath>descendant::*:foo/namespace::node()</xpath>
            <xpath>descendant::*:foo/namespace::namespace-node()</xpath>
            <xpath>descendant::*:foo/parent::foo</xpath>
            <xpath>descendant::*:foo/parent::ex:foo</xpath>
            <xpath>descendant::*:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/parent::*:foo</xpath>
            <xpath>descendant::*:foo/parent::ex:*</xpath>
            <xpath>descendant::*:foo/parent::*</xpath>
            <xpath>descendant::*:foo/parent::node()</xpath>
            <xpath>descendant::*:foo/parent::document-node()</xpath>
            <xpath>descendant::*:foo/ancestor::foo</xpath>
            <xpath>descendant::*:foo/ancestor::ex:foo</xpath>
            <xpath>descendant::*:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/ancestor::*:foo</xpath>
            <xpath>descendant::*:foo/ancestor::ex:*</xpath>
            <xpath>descendant::*:foo/ancestor::*</xpath>
            <xpath>descendant::*:foo/ancestor::node()</xpath>
            <xpath>descendant::*:foo/ancestor::document-node()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::foo</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::*</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::node()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::text()</xpath>
            <xpath>descendant::*:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA024">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::ex:*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::ex:*/attribute()</xpath>
            <xpath>descendant::ex:*/attribute::foo</xpath>
            <xpath>descendant::ex:*/attribute::ex:foo</xpath>
            <xpath>descendant::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/attribute::*:foo</xpath>
            <xpath>descendant::ex:*/attribute::ex:*</xpath>
            <xpath>descendant::ex:*/attribute::*</xpath>
            <xpath>descendant::ex:*/attribute::node()</xpath>
            <xpath>descendant::ex:*/attribute::attribute()</xpath>
            <xpath>descendant::ex:*/attribute::attribute(*)</xpath>
            <xpath>descendant::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::ex:*/@foo</xpath>
            <xpath>descendant::ex:*/@ex:foo</xpath>
            <xpath>descendant::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/@Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/@*:foo</xpath>
            <xpath>descendant::ex:*/@ex:*</xpath>
            <xpath>descendant::ex:*/@*</xpath>
            <xpath>descendant::ex:*/@node()</xpath>
            <xpath>descendant::ex:*/@attribute()</xpath>
            <xpath>descendant::ex:*/@attribute(*)</xpath>
            <xpath>descendant::ex:*/@attribute(ex:foo)</xpath>
            <xpath>descendant::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::ex:*/namespace::foo</xpath>
            <xpath>descendant::ex:*/namespace::Q{}foo</xpath>
            <xpath>descendant::ex:*/namespace::Q{}*</xpath>
            <xpath>descendant::ex:*/namespace::*:foo</xpath>
            <xpath>descendant::ex:*/namespace::*</xpath>
            <xpath>descendant::ex:*/namespace::node()</xpath>
            <xpath>descendant::ex:*/namespace::namespace-node()</xpath>
            <xpath>descendant::ex:*/parent::foo</xpath>
            <xpath>descendant::ex:*/parent::ex:foo</xpath>
            <xpath>descendant::ex:*/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/parent::*:foo</xpath>
            <xpath>descendant::ex:*/parent::ex:*</xpath>
            <xpath>descendant::ex:*/parent::*</xpath>
            <xpath>descendant::ex:*/parent::node()</xpath>
            <xpath>descendant::ex:*/parent::document-node()</xpath>
            <xpath>descendant::ex:*/ancestor::foo</xpath>
            <xpath>descendant::ex:*/ancestor::ex:foo</xpath>
            <xpath>descendant::ex:*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/ancestor::*:foo</xpath>
            <xpath>descendant::ex:*/ancestor::ex:*</xpath>
            <xpath>descendant::ex:*/ancestor::*</xpath>
            <xpath>descendant::ex:*/ancestor::node()</xpath>
            <xpath>descendant::ex:*/ancestor::document-node()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::foo</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::*</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::node()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::comment()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::text()</xpath>
            <xpath>descendant::ex:*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA025">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::*/attribute()</xpath>
            <xpath>descendant::*/attribute::foo</xpath>
            <xpath>descendant::*/attribute::ex:foo</xpath>
            <xpath>descendant::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::*/attribute::*:foo</xpath>
            <xpath>descendant::*/attribute::ex:*</xpath>
            <xpath>descendant::*/attribute::*</xpath>
            <xpath>descendant::*/attribute::node()</xpath>
            <xpath>descendant::*/attribute::attribute()</xpath>
            <xpath>descendant::*/attribute::attribute(*)</xpath>
            <xpath>descendant::*/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::*/@foo</xpath>
            <xpath>descendant::*/@ex:foo</xpath>
            <xpath>descendant::*/@Q{http://example.com}foo</xpath>
            <xpath>descendant::*/@Q{http://example.com}*</xpath>
            <xpath>descendant::*/@*:foo</xpath>
            <xpath>descendant::*/@ex:*</xpath>
            <xpath>descendant::*/@*</xpath>
            <xpath>descendant::*/@node()</xpath>
            <xpath>descendant::*/@attribute()</xpath>
            <xpath>descendant::*/@attribute(*)</xpath>
            <xpath>descendant::*/@attribute(ex:foo)</xpath>
            <xpath>descendant::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::*/namespace::foo</xpath>
            <xpath>descendant::*/namespace::Q{}foo</xpath>
            <xpath>descendant::*/namespace::Q{}*</xpath>
            <xpath>descendant::*/namespace::*:foo</xpath>
            <xpath>descendant::*/namespace::*</xpath>
            <xpath>descendant::*/namespace::node()</xpath>
            <xpath>descendant::*/namespace::namespace-node()</xpath>
            <xpath>descendant::*/parent::foo</xpath>
            <xpath>descendant::*/parent::ex:foo</xpath>
            <xpath>descendant::*/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::*/parent::*:foo</xpath>
            <xpath>descendant::*/parent::ex:*</xpath>
            <xpath>descendant::*/parent::*</xpath>
            <xpath>descendant::*/parent::node()</xpath>
            <xpath>descendant::*/parent::document-node()</xpath>
            <xpath>descendant::*/ancestor::foo</xpath>
            <xpath>descendant::*/ancestor::ex:foo</xpath>
            <xpath>descendant::*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::*/ancestor::*:foo</xpath>
            <xpath>descendant::*/ancestor::ex:*</xpath>
            <xpath>descendant::*/ancestor::*</xpath>
            <xpath>descendant::*/ancestor::node()</xpath>
            <xpath>descendant::*/ancestor::document-node()</xpath>
            <xpath>descendant::*/ancestor-or-self::foo</xpath>
            <xpath>descendant::*/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::*/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::*/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::*/ancestor-or-self::*</xpath>
            <xpath>descendant::*/ancestor-or-self::node()</xpath>
            <xpath>descendant::*/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::*/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::*/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::*/ancestor-or-self::comment()</xpath>
            <xpath>descendant::*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::*/ancestor-or-self::text()</xpath>
            <xpath>descendant::*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA026">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant::node()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::node()/attribute()</xpath>
            <xpath>descendant::node()/attribute::foo</xpath>
            <xpath>descendant::node()/attribute::ex:foo</xpath>
            <xpath>descendant::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/attribute::*:foo</xpath>
            <xpath>descendant::node()/attribute::ex:*</xpath>
            <xpath>descendant::node()/attribute::*</xpath>
            <xpath>descendant::node()/attribute::node()</xpath>
            <xpath>descendant::node()/attribute::attribute()</xpath>
            <xpath>descendant::node()/attribute::attribute(*)</xpath>
            <xpath>descendant::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::node()/@foo</xpath>
            <xpath>descendant::node()/@ex:foo</xpath>
            <xpath>descendant::node()/@Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/@Q{http://example.com}*</xpath>
            <xpath>descendant::node()/@*:foo</xpath>
            <xpath>descendant::node()/@ex:*</xpath>
            <xpath>descendant::node()/@*</xpath>
            <xpath>descendant::node()/@node()</xpath>
            <xpath>descendant::node()/@attribute()</xpath>
            <xpath>descendant::node()/@attribute(*)</xpath>
            <xpath>descendant::node()/@attribute(ex:foo)</xpath>
            <xpath>descendant::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::node()/namespace::foo</xpath>
            <xpath>descendant::node()/namespace::Q{}foo</xpath>
            <xpath>descendant::node()/namespace::Q{}*</xpath>
            <xpath>descendant::node()/namespace::*:foo</xpath>
            <xpath>descendant::node()/namespace::*</xpath>
            <xpath>descendant::node()/namespace::node()</xpath>
            <xpath>descendant::node()/namespace::namespace-node()</xpath>
            <xpath>descendant::node()/parent::foo</xpath>
            <xpath>descendant::node()/parent::ex:foo</xpath>
            <xpath>descendant::node()/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/parent::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/parent::*:foo</xpath>
            <xpath>descendant::node()/parent::ex:*</xpath>
            <xpath>descendant::node()/parent::*</xpath>
            <xpath>descendant::node()/parent::node()</xpath>
            <xpath>descendant::node()/parent::document-node()</xpath>
            <xpath>descendant::node()/ancestor::foo</xpath>
            <xpath>descendant::node()/ancestor::ex:foo</xpath>
            <xpath>descendant::node()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/ancestor::*:foo</xpath>
            <xpath>descendant::node()/ancestor::ex:*</xpath>
            <xpath>descendant::node()/ancestor::*</xpath>
            <xpath>descendant::node()/ancestor::node()</xpath>
            <xpath>descendant::node()/ancestor::document-node()</xpath>
            <xpath>descendant::node()/ancestor-or-self::foo</xpath>
            <xpath>descendant::node()/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant::node()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/ancestor-or-self::*:foo</xpath>
            <xpath>descendant::node()/ancestor-or-self::ex:*</xpath>
            <xpath>descendant::node()/ancestor-or-self::*</xpath>
            <xpath>descendant::node()/ancestor-or-self::node()</xpath>
            <xpath>descendant::node()/ancestor-or-self::document-node()</xpath>
            <xpath>descendant::node()/ancestor-or-self::attribute()</xpath>
            <xpath>descendant::node()/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant::node()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant::node()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant::node()/ancestor-or-self::comment()</xpath>
            <xpath>descendant::node()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant::node()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant::node()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant::node()/ancestor-or-self::text()</xpath>
            <xpath>descendant::node()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA027">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::foo/attribute()</xpath>
            <xpath>descendant-or-self::foo/attribute::foo</xpath>
            <xpath>descendant-or-self::foo/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/attribute::*:foo</xpath>
            <xpath>descendant-or-self::foo/attribute::ex:*</xpath>
            <xpath>descendant-or-self::foo/attribute::*</xpath>
            <xpath>descendant-or-self::foo/attribute::node()</xpath>
            <xpath>descendant-or-self::foo/attribute::attribute()</xpath>
            <xpath>descendant-or-self::foo/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::foo/@foo</xpath>
            <xpath>descendant-or-self::foo/@ex:foo</xpath>
            <xpath>descendant-or-self::foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/@*:foo</xpath>
            <xpath>descendant-or-self::foo/@ex:*</xpath>
            <xpath>descendant-or-self::foo/@*</xpath>
            <xpath>descendant-or-self::foo/@node()</xpath>
            <xpath>descendant-or-self::foo/@attribute()</xpath>
            <xpath>descendant-or-self::foo/@attribute(*)</xpath>
            <xpath>descendant-or-self::foo/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::foo/namespace::foo</xpath>
            <xpath>descendant-or-self::foo/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::foo/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::foo/namespace::*:foo</xpath>
            <xpath>descendant-or-self::foo/namespace::*</xpath>
            <xpath>descendant-or-self::foo/namespace::node()</xpath>
            <xpath>descendant-or-self::foo/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::foo/parent::foo</xpath>
            <xpath>descendant-or-self::foo/parent::ex:foo</xpath>
            <xpath>descendant-or-self::foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/parent::*:foo</xpath>
            <xpath>descendant-or-self::foo/parent::ex:*</xpath>
            <xpath>descendant-or-self::foo/parent::*</xpath>
            <xpath>descendant-or-self::foo/parent::node()</xpath>
            <xpath>descendant-or-self::foo/parent::document-node()</xpath>
            <xpath>descendant-or-self::foo/ancestor::foo</xpath>
            <xpath>descendant-or-self::foo/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::foo/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::foo/ancestor::*</xpath>
            <xpath>descendant-or-self::foo/ancestor::node()</xpath>
            <xpath>descendant-or-self::foo/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA028">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::ex:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::ex:foo/attribute()</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::foo</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::*</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::node()</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::attribute()</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::ex:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::ex:foo/@foo</xpath>
            <xpath>descendant-or-self::ex:foo/@ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/@*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/@ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/@*</xpath>
            <xpath>descendant-or-self::ex:foo/@node()</xpath>
            <xpath>descendant-or-self::ex:foo/@attribute()</xpath>
            <xpath>descendant-or-self::ex:foo/@attribute(*)</xpath>
            <xpath>descendant-or-self::ex:foo/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::ex:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::foo</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::*</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::node()</xpath>
            <xpath>descendant-or-self::ex:foo/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::ex:foo/parent::foo</xpath>
            <xpath>descendant-or-self::ex:foo/parent::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/parent::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/parent::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/parent::*</xpath>
            <xpath>descendant-or-self::ex:foo/parent::node()</xpath>
            <xpath>descendant-or-self::ex:foo/parent::document-node()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::*</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::node()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::ex:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA029">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::Q{http://example.com}foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@attribute(*)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/parent::document-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA030">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::Q{http://example.com}*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::Q{http://example.com}*/attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@attribute(*)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/parent::document-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA031">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::*:foo
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::*:foo/attribute()</xpath>
            <xpath>descendant-or-self::*:foo/attribute::foo</xpath>
            <xpath>descendant-or-self::*:foo/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/attribute::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/attribute::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/attribute::*</xpath>
            <xpath>descendant-or-self::*:foo/attribute::node()</xpath>
            <xpath>descendant-or-self::*:foo/attribute::attribute()</xpath>
            <xpath>descendant-or-self::*:foo/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::*:foo/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::*:foo/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::*:foo/@foo</xpath>
            <xpath>descendant-or-self::*:foo/@ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/@*:foo</xpath>
            <xpath>descendant-or-self::*:foo/@ex:*</xpath>
            <xpath>descendant-or-self::*:foo/@*</xpath>
            <xpath>descendant-or-self::*:foo/@node()</xpath>
            <xpath>descendant-or-self::*:foo/@attribute()</xpath>
            <xpath>descendant-or-self::*:foo/@attribute(*)</xpath>
            <xpath>descendant-or-self::*:foo/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::*:foo/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::*:foo/namespace::foo</xpath>
            <xpath>descendant-or-self::*:foo/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::*:foo/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::*:foo/namespace::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/namespace::*</xpath>
            <xpath>descendant-or-self::*:foo/namespace::node()</xpath>
            <xpath>descendant-or-self::*:foo/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::*:foo/parent::foo</xpath>
            <xpath>descendant-or-self::*:foo/parent::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/parent::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/parent::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/parent::*</xpath>
            <xpath>descendant-or-self::*:foo/parent::node()</xpath>
            <xpath>descendant-or-self::*:foo/parent::document-node()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::*</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::node()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::*:foo/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA032">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::ex:*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::ex:*/attribute()</xpath>
            <xpath>descendant-or-self::ex:*/attribute::foo</xpath>
            <xpath>descendant-or-self::ex:*/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/attribute::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/attribute::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/attribute::*</xpath>
            <xpath>descendant-or-self::ex:*/attribute::node()</xpath>
            <xpath>descendant-or-self::ex:*/attribute::attribute()</xpath>
            <xpath>descendant-or-self::ex:*/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::ex:*/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::ex:*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::ex:*/@foo</xpath>
            <xpath>descendant-or-self::ex:*/@ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/@*:foo</xpath>
            <xpath>descendant-or-self::ex:*/@ex:*</xpath>
            <xpath>descendant-or-self::ex:*/@*</xpath>
            <xpath>descendant-or-self::ex:*/@node()</xpath>
            <xpath>descendant-or-self::ex:*/@attribute()</xpath>
            <xpath>descendant-or-self::ex:*/@attribute(*)</xpath>
            <xpath>descendant-or-self::ex:*/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::ex:*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::ex:*/namespace::foo</xpath>
            <xpath>descendant-or-self::ex:*/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::ex:*/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::ex:*/namespace::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/namespace::*</xpath>
            <xpath>descendant-or-self::ex:*/namespace::node()</xpath>
            <xpath>descendant-or-self::ex:*/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::ex:*/parent::foo</xpath>
            <xpath>descendant-or-self::ex:*/parent::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/parent::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/parent::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/parent::*</xpath>
            <xpath>descendant-or-self::ex:*/parent::node()</xpath>
            <xpath>descendant-or-self::ex:*/parent::document-node()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::*</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::node()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::ex:*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA033">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::*
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::*/attribute()</xpath>
            <xpath>descendant-or-self::*/attribute::foo</xpath>
            <xpath>descendant-or-self::*/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::*/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/attribute::*:foo</xpath>
            <xpath>descendant-or-self::*/attribute::ex:*</xpath>
            <xpath>descendant-or-self::*/attribute::*</xpath>
            <xpath>descendant-or-self::*/attribute::node()</xpath>
            <xpath>descendant-or-self::*/attribute::attribute()</xpath>
            <xpath>descendant-or-self::*/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::*/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::*/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::*/@foo</xpath>
            <xpath>descendant-or-self::*/@ex:foo</xpath>
            <xpath>descendant-or-self::*/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/@*:foo</xpath>
            <xpath>descendant-or-self::*/@ex:*</xpath>
            <xpath>descendant-or-self::*/@*</xpath>
            <xpath>descendant-or-self::*/@node()</xpath>
            <xpath>descendant-or-self::*/@attribute()</xpath>
            <xpath>descendant-or-self::*/@attribute(*)</xpath>
            <xpath>descendant-or-self::*/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::*/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::*/namespace::foo</xpath>
            <xpath>descendant-or-self::*/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::*/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::*/namespace::*:foo</xpath>
            <xpath>descendant-or-self::*/namespace::*</xpath>
            <xpath>descendant-or-self::*/namespace::node()</xpath>
            <xpath>descendant-or-self::*/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::*/parent::foo</xpath>
            <xpath>descendant-or-self::*/parent::ex:foo</xpath>
            <xpath>descendant-or-self::*/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/parent::*:foo</xpath>
            <xpath>descendant-or-self::*/parent::ex:*</xpath>
            <xpath>descendant-or-self::*/parent::*</xpath>
            <xpath>descendant-or-self::*/parent::node()</xpath>
            <xpath>descendant-or-self::*/parent::document-node()</xpath>
            <xpath>descendant-or-self::*/ancestor::foo</xpath>
            <xpath>descendant-or-self::*/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::*/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::*/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::*/ancestor::*</xpath>
            <xpath>descendant-or-self::*/ancestor::node()</xpath>
            <xpath>descendant-or-self::*/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::*/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA034">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::node()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::node()/attribute()</xpath>
            <xpath>descendant-or-self::node()/attribute::foo</xpath>
            <xpath>descendant-or-self::node()/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/attribute::*:foo</xpath>
            <xpath>descendant-or-self::node()/attribute::ex:*</xpath>
            <xpath>descendant-or-self::node()/attribute::*</xpath>
            <xpath>descendant-or-self::node()/attribute::node()</xpath>
            <xpath>descendant-or-self::node()/attribute::attribute()</xpath>
            <xpath>descendant-or-self::node()/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::node()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::node()/@foo</xpath>
            <xpath>descendant-or-self::node()/@ex:foo</xpath>
            <xpath>descendant-or-self::node()/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/@*:foo</xpath>
            <xpath>descendant-or-self::node()/@ex:*</xpath>
            <xpath>descendant-or-self::node()/@*</xpath>
            <xpath>descendant-or-self::node()/@node()</xpath>
            <xpath>descendant-or-self::node()/@attribute()</xpath>
            <xpath>descendant-or-self::node()/@attribute(*)</xpath>
            <xpath>descendant-or-self::node()/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::node()/namespace::foo</xpath>
            <xpath>descendant-or-self::node()/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::node()/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::node()/namespace::*:foo</xpath>
            <xpath>descendant-or-self::node()/namespace::*</xpath>
            <xpath>descendant-or-self::node()/namespace::node()</xpath>
            <xpath>descendant-or-self::node()/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::node()/parent::foo</xpath>
            <xpath>descendant-or-self::node()/parent::ex:foo</xpath>
            <xpath>descendant-or-self::node()/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/parent::*:foo</xpath>
            <xpath>descendant-or-self::node()/parent::ex:*</xpath>
            <xpath>descendant-or-self::node()/parent::*</xpath>
            <xpath>descendant-or-self::node()/parent::node()</xpath>
            <xpath>descendant-or-self::node()/parent::document-node()</xpath>
            <xpath>descendant-or-self::node()/ancestor::foo</xpath>
            <xpath>descendant-or-self::node()/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::node()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::node()/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::node()/ancestor::*</xpath>
            <xpath>descendant-or-self::node()/ancestor::node()</xpath>
            <xpath>descendant-or-self::node()/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::node()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-climbing-consumingA035">
      <description>
                CP: striding, RP: climbing, RS: consuming
                Base expression: descendant-or-self::document-node()
                Separators:      / 
                With axes:       attribute, namespace, parent, ancestor, ancestor-or-self
                With node types: element, document, attribute, namespace, comment, pi, text, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::document-node()/attribute()</xpath>
            <xpath>descendant-or-self::document-node()/attribute::foo</xpath>
            <xpath>descendant-or-self::document-node()/attribute::ex:foo</xpath>
            <xpath>descendant-or-self::document-node()/attribute::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::document-node()/attribute::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::document-node()/attribute::*:foo</xpath>
            <xpath>descendant-or-self::document-node()/attribute::ex:*</xpath>
            <xpath>descendant-or-self::document-node()/attribute::*</xpath>
            <xpath>descendant-or-self::document-node()/attribute::node()</xpath>
            <xpath>descendant-or-self::document-node()/attribute::attribute()</xpath>
            <xpath>descendant-or-self::document-node()/attribute::attribute(*)</xpath>
            <xpath>descendant-or-self::document-node()/attribute::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::document-node()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::document-node()/@foo</xpath>
            <xpath>descendant-or-self::document-node()/@ex:foo</xpath>
            <xpath>descendant-or-self::document-node()/@Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::document-node()/@Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::document-node()/@*:foo</xpath>
            <xpath>descendant-or-self::document-node()/@ex:*</xpath>
            <xpath>descendant-or-self::document-node()/@*</xpath>
            <xpath>descendant-or-self::document-node()/@node()</xpath>
            <xpath>descendant-or-self::document-node()/@attribute()</xpath>
            <xpath>descendant-or-self::document-node()/@attribute(*)</xpath>
            <xpath>descendant-or-self::document-node()/@attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::document-node()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::document-node()/namespace::foo</xpath>
            <xpath>descendant-or-self::document-node()/namespace::Q{}foo</xpath>
            <xpath>descendant-or-self::document-node()/namespace::Q{}*</xpath>
            <xpath>descendant-or-self::document-node()/namespace::*:foo</xpath>
            <xpath>descendant-or-self::document-node()/namespace::*</xpath>
            <xpath>descendant-or-self::document-node()/namespace::node()</xpath>
            <xpath>descendant-or-self::document-node()/namespace::namespace-node()</xpath>
            <xpath>descendant-or-self::document-node()/parent::foo</xpath>
            <xpath>descendant-or-self::document-node()/parent::ex:foo</xpath>
            <xpath>descendant-or-self::document-node()/parent::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::document-node()/parent::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::document-node()/parent::*:foo</xpath>
            <xpath>descendant-or-self::document-node()/parent::ex:*</xpath>
            <xpath>descendant-or-self::document-node()/parent::*</xpath>
            <xpath>descendant-or-self::document-node()/parent::node()</xpath>
            <xpath>descendant-or-self::document-node()/parent::document-node()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::ex:foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::*:foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::ex:*</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::*</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::node()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor::document-node()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::*:foo</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::ex:*</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::*</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::node()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::document-node()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::attribute()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::attribute(*)</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::attribute(ex:foo)</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::attribute(Q{http://example.com}foo)</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::comment()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::processing-instruction()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::processing-instruction(xsl-stylesheet)</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::processing-instruction('xsl-stylesheet')</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::text()</xpath>
            <xpath>descendant-or-self::document-node()/ancestor-or-self::namespace-node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="climbing" result-sweep="consuming"/>
      </result>
   </test-case>
</test-set>