<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-crawling-consumingB">
   <description>
                    CP: Striding, RP: Crawling, RS: Consuming
                    A child axis on a descendant(-or-self) axis is crawling and consuming (scanning expression)
                </description>
   <test-case name="xp-striding-crawling-consumingB001">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::foo/foo</xpath>
            <xpath>descendant::foo/ex:foo</xpath>
            <xpath>descendant::foo/Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/Q{http://example.com}*</xpath>
            <xpath>descendant::foo/child::foo</xpath>
            <xpath>descendant::foo/child::ex:foo</xpath>
            <xpath>descendant::foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/*</xpath>
            <xpath>descendant::foo/*:foo</xpath>
            <xpath>descendant::foo/ex:*</xpath>
            <xpath>descendant::foo/child::*</xpath>
            <xpath>descendant::foo/child::*:foo</xpath>
            <xpath>descendant::foo/child::ex:*</xpath>
            <xpath>descendant::foo/element()</xpath>
            <xpath>descendant::foo/child::element()</xpath>
            <xpath>descendant::foo/node()</xpath>
            <xpath>descendant::foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB002">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::ex:foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::ex:foo/foo</xpath>
            <xpath>descendant::ex:foo/ex:foo</xpath>
            <xpath>descendant::ex:foo/Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/child::foo</xpath>
            <xpath>descendant::ex:foo/child::ex:foo</xpath>
            <xpath>descendant::ex:foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/*</xpath>
            <xpath>descendant::ex:foo/*:foo</xpath>
            <xpath>descendant::ex:foo/ex:*</xpath>
            <xpath>descendant::ex:foo/child::*</xpath>
            <xpath>descendant::ex:foo/child::*:foo</xpath>
            <xpath>descendant::ex:foo/child::ex:*</xpath>
            <xpath>descendant::ex:foo/element()</xpath>
            <xpath>descendant::ex:foo/child::element()</xpath>
            <xpath>descendant::ex:foo/node()</xpath>
            <xpath>descendant::ex:foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB003">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::Q{http://example.com}foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::Q{http://example.com}foo/foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/*</xpath>
            <xpath>descendant::Q{http://example.com}foo/*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/element()</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::element()</xpath>
            <xpath>descendant::Q{http://example.com}foo/node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB004">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::Q{http://example.com}*
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::Q{http://example.com}*/foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/child::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/child::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/child::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/*</xpath>
            <xpath>descendant::Q{http://example.com}*/*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/child::*</xpath>
            <xpath>descendant::Q{http://example.com}*/child::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/child::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/element()</xpath>
            <xpath>descendant::Q{http://example.com}*/child::element()</xpath>
            <xpath>descendant::Q{http://example.com}*/node()</xpath>
            <xpath>descendant::Q{http://example.com}*/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB005">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::*:foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::*:foo/foo</xpath>
            <xpath>descendant::*:foo/ex:foo</xpath>
            <xpath>descendant::*:foo/Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/child::foo</xpath>
            <xpath>descendant::*:foo/child::ex:foo</xpath>
            <xpath>descendant::*:foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/*</xpath>
            <xpath>descendant::*:foo/*:foo</xpath>
            <xpath>descendant::*:foo/ex:*</xpath>
            <xpath>descendant::*:foo/child::*</xpath>
            <xpath>descendant::*:foo/child::*:foo</xpath>
            <xpath>descendant::*:foo/child::ex:*</xpath>
            <xpath>descendant::*:foo/element()</xpath>
            <xpath>descendant::*:foo/child::element()</xpath>
            <xpath>descendant::*:foo/node()</xpath>
            <xpath>descendant::*:foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB006">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::ex:*
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::ex:*/foo</xpath>
            <xpath>descendant::ex:*/ex:foo</xpath>
            <xpath>descendant::ex:*/Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/child::foo</xpath>
            <xpath>descendant::ex:*/child::ex:foo</xpath>
            <xpath>descendant::ex:*/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/child::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/*</xpath>
            <xpath>descendant::ex:*/*:foo</xpath>
            <xpath>descendant::ex:*/ex:*</xpath>
            <xpath>descendant::ex:*/child::*</xpath>
            <xpath>descendant::ex:*/child::*:foo</xpath>
            <xpath>descendant::ex:*/child::ex:*</xpath>
            <xpath>descendant::ex:*/element()</xpath>
            <xpath>descendant::ex:*/child::element()</xpath>
            <xpath>descendant::ex:*/node()</xpath>
            <xpath>descendant::ex:*/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB007">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::*
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::*/foo</xpath>
            <xpath>descendant::*/ex:foo</xpath>
            <xpath>descendant::*/Q{http://example.com}foo</xpath>
            <xpath>descendant::*/Q{http://example.com}*</xpath>
            <xpath>descendant::*/child::foo</xpath>
            <xpath>descendant::*/child::ex:foo</xpath>
            <xpath>descendant::*/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/child::Q{http://example.com}*</xpath>
            <xpath>descendant::*/*</xpath>
            <xpath>descendant::*/*:foo</xpath>
            <xpath>descendant::*/ex:*</xpath>
            <xpath>descendant::*/child::*</xpath>
            <xpath>descendant::*/child::*:foo</xpath>
            <xpath>descendant::*/child::ex:*</xpath>
            <xpath>descendant::*/element()</xpath>
            <xpath>descendant::*/child::element()</xpath>
            <xpath>descendant::*/node()</xpath>
            <xpath>descendant::*/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB008">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::node()
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::node()/foo</xpath>
            <xpath>descendant::node()/ex:foo</xpath>
            <xpath>descendant::node()/Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/Q{http://example.com}*</xpath>
            <xpath>descendant::node()/child::foo</xpath>
            <xpath>descendant::node()/child::ex:foo</xpath>
            <xpath>descendant::node()/child::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/child::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/*</xpath>
            <xpath>descendant::node()/*:foo</xpath>
            <xpath>descendant::node()/ex:*</xpath>
            <xpath>descendant::node()/child::*</xpath>
            <xpath>descendant::node()/child::*:foo</xpath>
            <xpath>descendant::node()/child::ex:*</xpath>
            <xpath>descendant::node()/element()</xpath>
            <xpath>descendant::node()/child::element()</xpath>
            <xpath>descendant::node()/node()</xpath>
            <xpath>descendant::node()/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB009">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::foo/foo</xpath>
            <xpath>descendant-or-self::foo/ex:foo</xpath>
            <xpath>descendant-or-self::foo/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/child::foo</xpath>
            <xpath>descendant-or-self::foo/child::ex:foo</xpath>
            <xpath>descendant-or-self::foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/*</xpath>
            <xpath>descendant-or-self::foo/*:foo</xpath>
            <xpath>descendant-or-self::foo/ex:*</xpath>
            <xpath>descendant-or-self::foo/child::*</xpath>
            <xpath>descendant-or-self::foo/child::*:foo</xpath>
            <xpath>descendant-or-self::foo/child::ex:*</xpath>
            <xpath>descendant-or-self::foo/element()</xpath>
            <xpath>descendant-or-self::foo/child::element()</xpath>
            <xpath>descendant-or-self::foo/node()</xpath>
            <xpath>descendant-or-self::foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB010">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::ex:foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::ex:foo/foo</xpath>
            <xpath>descendant-or-self::ex:foo/ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/child::foo</xpath>
            <xpath>descendant-or-self::ex:foo/child::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/*</xpath>
            <xpath>descendant-or-self::ex:foo/*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/child::*</xpath>
            <xpath>descendant-or-self::ex:foo/child::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/child::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/element()</xpath>
            <xpath>descendant-or-self::ex:foo/child::element()</xpath>
            <xpath>descendant-or-self::ex:foo/node()</xpath>
            <xpath>descendant-or-self::ex:foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB011">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::Q{http://example.com}foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::Q{http://example.com}foo/foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/element()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::element()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB012">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::Q{http://example.com}*
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::Q{http://example.com}*/foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/element()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::element()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB013">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::*:foo
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::*:foo/foo</xpath>
            <xpath>descendant-or-self::*:foo/ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/child::foo</xpath>
            <xpath>descendant-or-self::*:foo/child::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/*</xpath>
            <xpath>descendant-or-self::*:foo/*:foo</xpath>
            <xpath>descendant-or-self::*:foo/ex:*</xpath>
            <xpath>descendant-or-self::*:foo/child::*</xpath>
            <xpath>descendant-or-self::*:foo/child::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/child::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/element()</xpath>
            <xpath>descendant-or-self::*:foo/child::element()</xpath>
            <xpath>descendant-or-self::*:foo/node()</xpath>
            <xpath>descendant-or-self::*:foo/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB014">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::ex:*
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::ex:*/foo</xpath>
            <xpath>descendant-or-self::ex:*/ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/child::foo</xpath>
            <xpath>descendant-or-self::ex:*/child::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/*</xpath>
            <xpath>descendant-or-self::ex:*/*:foo</xpath>
            <xpath>descendant-or-self::ex:*/ex:*</xpath>
            <xpath>descendant-or-self::ex:*/child::*</xpath>
            <xpath>descendant-or-self::ex:*/child::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/child::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/element()</xpath>
            <xpath>descendant-or-self::ex:*/child::element()</xpath>
            <xpath>descendant-or-self::ex:*/node()</xpath>
            <xpath>descendant-or-self::ex:*/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB015">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::*
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::*/foo</xpath>
            <xpath>descendant-or-self::*/ex:foo</xpath>
            <xpath>descendant-or-self::*/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/child::foo</xpath>
            <xpath>descendant-or-self::*/child::ex:foo</xpath>
            <xpath>descendant-or-self::*/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/*</xpath>
            <xpath>descendant-or-self::*/*:foo</xpath>
            <xpath>descendant-or-self::*/ex:*</xpath>
            <xpath>descendant-or-self::*/child::*</xpath>
            <xpath>descendant-or-self::*/child::*:foo</xpath>
            <xpath>descendant-or-self::*/child::ex:*</xpath>
            <xpath>descendant-or-self::*/element()</xpath>
            <xpath>descendant-or-self::*/child::element()</xpath>
            <xpath>descendant-or-self::*/node()</xpath>
            <xpath>descendant-or-self::*/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingB016">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::node()
                Separators:      / 
                With axes:       child
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::node()/foo</xpath>
            <xpath>descendant-or-self::node()/ex:foo</xpath>
            <xpath>descendant-or-self::node()/Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/child::foo</xpath>
            <xpath>descendant-or-self::node()/child::ex:foo</xpath>
            <xpath>descendant-or-self::node()/child::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/child::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/*</xpath>
            <xpath>descendant-or-self::node()/*:foo</xpath>
            <xpath>descendant-or-self::node()/ex:*</xpath>
            <xpath>descendant-or-self::node()/child::*</xpath>
            <xpath>descendant-or-self::node()/child::*:foo</xpath>
            <xpath>descendant-or-self::node()/child::ex:*</xpath>
            <xpath>descendant-or-self::node()/element()</xpath>
            <xpath>descendant-or-self::node()/child::element()</xpath>
            <xpath>descendant-or-self::node()/node()</xpath>
            <xpath>descendant-or-self::node()/child::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
</test-set>