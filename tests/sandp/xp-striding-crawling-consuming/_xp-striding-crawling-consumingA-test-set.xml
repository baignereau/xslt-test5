<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-crawling-consumingA||file:///D:/Projects/AbraSoft/__HG-ALL__/Exselt/Tests/_Test-Repository/XT3/tests/sandp/xp-striding-crawling-consuming/_xp-striding-crawling-consumingA-test-set.xml">
   <description>
                    CP: Striding, RP: Crawling, RS: Consuming
                    A descendant(-or-self) axis on a child or descendant(-or-self) axis is crawling and consuming (scanning expression)
                </description>
   <test-case name="xp-striding-crawling-consumingA001">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>foo/descendant::foo</xpath>
            <xpath>foo/descendant::ex:foo</xpath>
            <xpath>foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>foo/descendant::Q{http://example.com}*</xpath>
            <xpath>foo/descendant::*:foo</xpath>
            <xpath>foo/descendant::ex:*</xpath>
            <xpath>foo/descendant::*</xpath>
            <xpath>foo/descendant::node()</xpath>
            <xpath>foo/descendant-or-self::foo</xpath>
            <xpath>foo/descendant-or-self::ex:foo</xpath>
            <xpath>foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>foo/descendant-or-self::*:foo</xpath>
            <xpath>foo/descendant-or-self::ex:*</xpath>
            <xpath>foo/descendant-or-self::*</xpath>
            <xpath>foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA002">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: ex:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ex:foo/descendant::foo</xpath>
            <xpath>ex:foo/descendant::ex:foo</xpath>
            <xpath>ex:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>ex:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>ex:foo/descendant::*:foo</xpath>
            <xpath>ex:foo/descendant::ex:*</xpath>
            <xpath>ex:foo/descendant::*</xpath>
            <xpath>ex:foo/descendant::node()</xpath>
            <xpath>ex:foo/descendant-or-self::foo</xpath>
            <xpath>ex:foo/descendant-or-self::ex:foo</xpath>
            <xpath>ex:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>ex:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>ex:foo/descendant-or-self::*:foo</xpath>
            <xpath>ex:foo/descendant-or-self::ex:*</xpath>
            <xpath>ex:foo/descendant-or-self::*</xpath>
            <xpath>ex:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA003">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: Q{http://example.com}foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>Q{http://example.com}foo/descendant::foo</xpath>
            <xpath>Q{http://example.com}foo/descendant::ex:foo</xpath>
            <xpath>Q{http://example.com}foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/descendant::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/descendant::*:foo</xpath>
            <xpath>Q{http://example.com}foo/descendant::ex:*</xpath>
            <xpath>Q{http://example.com}foo/descendant::*</xpath>
            <xpath>Q{http://example.com}foo/descendant::node()</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::foo</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::ex:foo</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::*:foo</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::ex:*</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::*</xpath>
            <xpath>Q{http://example.com}foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA004">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: Q{http://example.com}*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>Q{http://example.com}*/descendant::foo</xpath>
            <xpath>Q{http://example.com}*/descendant::ex:foo</xpath>
            <xpath>Q{http://example.com}*/descendant::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/descendant::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/descendant::*:foo</xpath>
            <xpath>Q{http://example.com}*/descendant::ex:*</xpath>
            <xpath>Q{http://example.com}*/descendant::*</xpath>
            <xpath>Q{http://example.com}*/descendant::node()</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::foo</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::ex:foo</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::*:foo</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::ex:*</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::*</xpath>
            <xpath>Q{http://example.com}*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA005">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::foo/descendant::foo</xpath>
            <xpath>child::foo/descendant::ex:foo</xpath>
            <xpath>child::foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::foo/descendant::Q{http://example.com}*</xpath>
            <xpath>child::foo/descendant::*:foo</xpath>
            <xpath>child::foo/descendant::ex:*</xpath>
            <xpath>child::foo/descendant::*</xpath>
            <xpath>child::foo/descendant::node()</xpath>
            <xpath>child::foo/descendant-or-self::foo</xpath>
            <xpath>child::foo/descendant-or-self::ex:foo</xpath>
            <xpath>child::foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::foo/descendant-or-self::*:foo</xpath>
            <xpath>child::foo/descendant-or-self::ex:*</xpath>
            <xpath>child::foo/descendant-or-self::*</xpath>
            <xpath>child::foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA006">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::ex:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::ex:foo/descendant::foo</xpath>
            <xpath>child::ex:foo/descendant::ex:foo</xpath>
            <xpath>child::ex:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/descendant::*:foo</xpath>
            <xpath>child::ex:foo/descendant::ex:*</xpath>
            <xpath>child::ex:foo/descendant::*</xpath>
            <xpath>child::ex:foo/descendant::node()</xpath>
            <xpath>child::ex:foo/descendant-or-self::foo</xpath>
            <xpath>child::ex:foo/descendant-or-self::ex:foo</xpath>
            <xpath>child::ex:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::ex:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::ex:foo/descendant-or-self::*:foo</xpath>
            <xpath>child::ex:foo/descendant-or-self::ex:*</xpath>
            <xpath>child::ex:foo/descendant-or-self::*</xpath>
            <xpath>child::ex:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA007">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::Q{http://example.com}foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::Q{http://example.com}foo/descendant::foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::*</xpath>
            <xpath>child::Q{http://example.com}foo/descendant::node()</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::ex:foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::*:foo</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::ex:*</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::*</xpath>
            <xpath>child::Q{http://example.com}foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA008">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::Q{http://example.com}*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::Q{http://example.com}*/descendant::foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant::ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/descendant::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant::ex:*</xpath>
            <xpath>child::Q{http://example.com}*/descendant::*</xpath>
            <xpath>child::Q{http://example.com}*/descendant::node()</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::ex:foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::*:foo</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::ex:*</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::*</xpath>
            <xpath>child::Q{http://example.com}*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA009">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: *
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>*/descendant::foo</xpath>
            <xpath>*/descendant::ex:foo</xpath>
            <xpath>*/descendant::Q{http://example.com}foo</xpath>
            <xpath>*/descendant::Q{http://example.com}*</xpath>
            <xpath>*/descendant::*:foo</xpath>
            <xpath>*/descendant::ex:*</xpath>
            <xpath>*/descendant::*</xpath>
            <xpath>*/descendant::node()</xpath>
            <xpath>*/descendant-or-self::foo</xpath>
            <xpath>*/descendant-or-self::ex:foo</xpath>
            <xpath>*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>*/descendant-or-self::*:foo</xpath>
            <xpath>*/descendant-or-self::ex:*</xpath>
            <xpath>*/descendant-or-self::*</xpath>
            <xpath>*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA010">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: *:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>*:foo/descendant::foo</xpath>
            <xpath>*:foo/descendant::ex:foo</xpath>
            <xpath>*:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>*:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>*:foo/descendant::*:foo</xpath>
            <xpath>*:foo/descendant::ex:*</xpath>
            <xpath>*:foo/descendant::*</xpath>
            <xpath>*:foo/descendant::node()</xpath>
            <xpath>*:foo/descendant-or-self::foo</xpath>
            <xpath>*:foo/descendant-or-self::ex:foo</xpath>
            <xpath>*:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>*:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>*:foo/descendant-or-self::*:foo</xpath>
            <xpath>*:foo/descendant-or-self::ex:*</xpath>
            <xpath>*:foo/descendant-or-self::*</xpath>
            <xpath>*:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA011">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: ex:*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>ex:*/descendant::foo</xpath>
            <xpath>ex:*/descendant::ex:foo</xpath>
            <xpath>ex:*/descendant::Q{http://example.com}foo</xpath>
            <xpath>ex:*/descendant::Q{http://example.com}*</xpath>
            <xpath>ex:*/descendant::*:foo</xpath>
            <xpath>ex:*/descendant::ex:*</xpath>
            <xpath>ex:*/descendant::*</xpath>
            <xpath>ex:*/descendant::node()</xpath>
            <xpath>ex:*/descendant-or-self::foo</xpath>
            <xpath>ex:*/descendant-or-self::ex:foo</xpath>
            <xpath>ex:*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>ex:*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>ex:*/descendant-or-self::*:foo</xpath>
            <xpath>ex:*/descendant-or-self::ex:*</xpath>
            <xpath>ex:*/descendant-or-self::*</xpath>
            <xpath>ex:*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA012">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::*/descendant::foo</xpath>
            <xpath>child::*/descendant::ex:foo</xpath>
            <xpath>child::*/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::*/descendant::Q{http://example.com}*</xpath>
            <xpath>child::*/descendant::*:foo</xpath>
            <xpath>child::*/descendant::ex:*</xpath>
            <xpath>child::*/descendant::*</xpath>
            <xpath>child::*/descendant::node()</xpath>
            <xpath>child::*/descendant-or-self::foo</xpath>
            <xpath>child::*/descendant-or-self::ex:foo</xpath>
            <xpath>child::*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::*/descendant-or-self::*:foo</xpath>
            <xpath>child::*/descendant-or-self::ex:*</xpath>
            <xpath>child::*/descendant-or-self::*</xpath>
            <xpath>child::*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA013">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::*:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::*:foo/descendant::foo</xpath>
            <xpath>child::*:foo/descendant::ex:foo</xpath>
            <xpath>child::*:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>child::*:foo/descendant::*:foo</xpath>
            <xpath>child::*:foo/descendant::ex:*</xpath>
            <xpath>child::*:foo/descendant::*</xpath>
            <xpath>child::*:foo/descendant::node()</xpath>
            <xpath>child::*:foo/descendant-or-self::foo</xpath>
            <xpath>child::*:foo/descendant-or-self::ex:foo</xpath>
            <xpath>child::*:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::*:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::*:foo/descendant-or-self::*:foo</xpath>
            <xpath>child::*:foo/descendant-or-self::ex:*</xpath>
            <xpath>child::*:foo/descendant-or-self::*</xpath>
            <xpath>child::*:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA014">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::ex:*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::ex:*/descendant::foo</xpath>
            <xpath>child::ex:*/descendant::ex:foo</xpath>
            <xpath>child::ex:*/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/descendant::Q{http://example.com}*</xpath>
            <xpath>child::ex:*/descendant::*:foo</xpath>
            <xpath>child::ex:*/descendant::ex:*</xpath>
            <xpath>child::ex:*/descendant::*</xpath>
            <xpath>child::ex:*/descendant::node()</xpath>
            <xpath>child::ex:*/descendant-or-self::foo</xpath>
            <xpath>child::ex:*/descendant-or-self::ex:foo</xpath>
            <xpath>child::ex:*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::ex:*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::ex:*/descendant-or-self::*:foo</xpath>
            <xpath>child::ex:*/descendant-or-self::ex:*</xpath>
            <xpath>child::ex:*/descendant-or-self::*</xpath>
            <xpath>child::ex:*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA015">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: element()
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>element()/descendant::foo</xpath>
            <xpath>element()/descendant::ex:foo</xpath>
            <xpath>element()/descendant::Q{http://example.com}foo</xpath>
            <xpath>element()/descendant::Q{http://example.com}*</xpath>
            <xpath>element()/descendant::*:foo</xpath>
            <xpath>element()/descendant::ex:*</xpath>
            <xpath>element()/descendant::*</xpath>
            <xpath>element()/descendant::node()</xpath>
            <xpath>element()/descendant-or-self::foo</xpath>
            <xpath>element()/descendant-or-self::ex:foo</xpath>
            <xpath>element()/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>element()/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>element()/descendant-or-self::*:foo</xpath>
            <xpath>element()/descendant-or-self::ex:*</xpath>
            <xpath>element()/descendant-or-self::*</xpath>
            <xpath>element()/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA016">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::element()
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::element()/descendant::foo</xpath>
            <xpath>child::element()/descendant::ex:foo</xpath>
            <xpath>child::element()/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::element()/descendant::Q{http://example.com}*</xpath>
            <xpath>child::element()/descendant::*:foo</xpath>
            <xpath>child::element()/descendant::ex:*</xpath>
            <xpath>child::element()/descendant::*</xpath>
            <xpath>child::element()/descendant::node()</xpath>
            <xpath>child::element()/descendant-or-self::foo</xpath>
            <xpath>child::element()/descendant-or-self::ex:foo</xpath>
            <xpath>child::element()/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::element()/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::element()/descendant-or-self::*:foo</xpath>
            <xpath>child::element()/descendant-or-self::ex:*</xpath>
            <xpath>child::element()/descendant-or-self::*</xpath>
            <xpath>child::element()/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA017">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: node()
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>node()/descendant::foo</xpath>
            <xpath>node()/descendant::ex:foo</xpath>
            <xpath>node()/descendant::Q{http://example.com}foo</xpath>
            <xpath>node()/descendant::Q{http://example.com}*</xpath>
            <xpath>node()/descendant::*:foo</xpath>
            <xpath>node()/descendant::ex:*</xpath>
            <xpath>node()/descendant::*</xpath>
            <xpath>node()/descendant::node()</xpath>
            <xpath>node()/descendant-or-self::foo</xpath>
            <xpath>node()/descendant-or-self::ex:foo</xpath>
            <xpath>node()/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>node()/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>node()/descendant-or-self::*:foo</xpath>
            <xpath>node()/descendant-or-self::ex:*</xpath>
            <xpath>node()/descendant-or-self::*</xpath>
            <xpath>node()/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA018">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: child::node()
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>child::node()/descendant::foo</xpath>
            <xpath>child::node()/descendant::ex:foo</xpath>
            <xpath>child::node()/descendant::Q{http://example.com}foo</xpath>
            <xpath>child::node()/descendant::Q{http://example.com}*</xpath>
            <xpath>child::node()/descendant::*:foo</xpath>
            <xpath>child::node()/descendant::ex:*</xpath>
            <xpath>child::node()/descendant::*</xpath>
            <xpath>child::node()/descendant::node()</xpath>
            <xpath>child::node()/descendant-or-self::foo</xpath>
            <xpath>child::node()/descendant-or-self::ex:foo</xpath>
            <xpath>child::node()/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>child::node()/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>child::node()/descendant-or-self::*:foo</xpath>
            <xpath>child::node()/descendant-or-self::ex:*</xpath>
            <xpath>child::node()/descendant-or-self::*</xpath>
            <xpath>child::node()/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA019">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::foo/descendant::foo</xpath>
            <xpath>descendant::foo/descendant::ex:foo</xpath>
            <xpath>descendant::foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/descendant::*:foo</xpath>
            <xpath>descendant::foo/descendant::ex:*</xpath>
            <xpath>descendant::foo/descendant::*</xpath>
            <xpath>descendant::foo/descendant::node()</xpath>
            <xpath>descendant::foo/descendant-or-self::foo</xpath>
            <xpath>descendant::foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant::foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant::foo/descendant-or-self::*</xpath>
            <xpath>descendant::foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA020">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::ex:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::ex:foo/descendant::foo</xpath>
            <xpath>descendant::ex:foo/descendant::ex:foo</xpath>
            <xpath>descendant::ex:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/descendant::*:foo</xpath>
            <xpath>descendant::ex:foo/descendant::ex:*</xpath>
            <xpath>descendant::ex:foo/descendant::*</xpath>
            <xpath>descendant::ex:foo/descendant::node()</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::foo</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::*</xpath>
            <xpath>descendant::ex:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA021">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::Q{http://example.com}foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::Q{http://example.com}foo/descendant::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant::node()</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::*</xpath>
            <xpath>descendant::Q{http://example.com}foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA022">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::Q{http://example.com}*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::Q{http://example.com}*/descendant::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::*</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant::node()</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::*:foo</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::ex:*</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::*</xpath>
            <xpath>descendant::Q{http://example.com}*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA023">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::*:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::*:foo/descendant::foo</xpath>
            <xpath>descendant::*:foo/descendant::ex:foo</xpath>
            <xpath>descendant::*:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/descendant::*:foo</xpath>
            <xpath>descendant::*:foo/descendant::ex:*</xpath>
            <xpath>descendant::*:foo/descendant::*</xpath>
            <xpath>descendant::*:foo/descendant::node()</xpath>
            <xpath>descendant::*:foo/descendant-or-self::foo</xpath>
            <xpath>descendant::*:foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::*:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::*:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::*:foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant::*:foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant::*:foo/descendant-or-self::*</xpath>
            <xpath>descendant::*:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA024">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::ex:*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::ex:*/descendant::foo</xpath>
            <xpath>descendant::ex:*/descendant::ex:foo</xpath>
            <xpath>descendant::ex:*/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/descendant::*:foo</xpath>
            <xpath>descendant::ex:*/descendant::ex:*</xpath>
            <xpath>descendant::ex:*/descendant::*</xpath>
            <xpath>descendant::ex:*/descendant::node()</xpath>
            <xpath>descendant::ex:*/descendant-or-self::foo</xpath>
            <xpath>descendant::ex:*/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::ex:*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::ex:*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::ex:*/descendant-or-self::*:foo</xpath>
            <xpath>descendant::ex:*/descendant-or-self::ex:*</xpath>
            <xpath>descendant::ex:*/descendant-or-self::*</xpath>
            <xpath>descendant::ex:*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA025">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::*/descendant::foo</xpath>
            <xpath>descendant::*/descendant::ex:foo</xpath>
            <xpath>descendant::*/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::*/descendant::*:foo</xpath>
            <xpath>descendant::*/descendant::ex:*</xpath>
            <xpath>descendant::*/descendant::*</xpath>
            <xpath>descendant::*/descendant::node()</xpath>
            <xpath>descendant::*/descendant-or-self::foo</xpath>
            <xpath>descendant::*/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::*/descendant-or-self::*:foo</xpath>
            <xpath>descendant::*/descendant-or-self::ex:*</xpath>
            <xpath>descendant::*/descendant-or-self::*</xpath>
            <xpath>descendant::*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA026">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant::node()
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant::node()/descendant::foo</xpath>
            <xpath>descendant::node()/descendant::ex:foo</xpath>
            <xpath>descendant::node()/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/descendant::*:foo</xpath>
            <xpath>descendant::node()/descendant::ex:*</xpath>
            <xpath>descendant::node()/descendant::*</xpath>
            <xpath>descendant::node()/descendant::node()</xpath>
            <xpath>descendant::node()/descendant-or-self::foo</xpath>
            <xpath>descendant::node()/descendant-or-self::ex:foo</xpath>
            <xpath>descendant::node()/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant::node()/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant::node()/descendant-or-self::*:foo</xpath>
            <xpath>descendant::node()/descendant-or-self::ex:*</xpath>
            <xpath>descendant::node()/descendant-or-self::*</xpath>
            <xpath>descendant::node()/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA027">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::foo/descendant::foo</xpath>
            <xpath>descendant-or-self::foo/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/descendant::*:foo</xpath>
            <xpath>descendant-or-self::foo/descendant::ex:*</xpath>
            <xpath>descendant-or-self::foo/descendant::*</xpath>
            <xpath>descendant-or-self::foo/descendant::node()</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA028">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::ex:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::ex:foo/descendant::foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::*</xpath>
            <xpath>descendant-or-self::ex:foo/descendant::node()</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::ex:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA029">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::Q{http://example.com}foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA030">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::Q{http://example.com}*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant::node()</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::Q{http://example.com}*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA031">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::*:foo
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::*:foo/descendant::foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/descendant::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/descendant::*</xpath>
            <xpath>descendant-or-self::*:foo/descendant::node()</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::*:foo/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA032">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::ex:*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::ex:*/descendant::foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/descendant::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/descendant::*</xpath>
            <xpath>descendant-or-self::ex:*/descendant::node()</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::ex:*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA033">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::*
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::*/descendant::foo</xpath>
            <xpath>descendant-or-self::*/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::*/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/descendant::*:foo</xpath>
            <xpath>descendant-or-self::*/descendant::ex:*</xpath>
            <xpath>descendant-or-self::*/descendant::*</xpath>
            <xpath>descendant-or-self::*/descendant::node()</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::*/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-crawling-consumingA034">
      <description>
                CP: striding, RP: crawling, RS: consuming
                Base expression: descendant-or-self::node()
                Separators:      / 
                With axes:       descendant, descendant-or-self
                With node types: element, any-node, elem-doc
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath>descendant-or-self::node()/descendant::foo</xpath>
            <xpath>descendant-or-self::node()/descendant::ex:foo</xpath>
            <xpath>descendant-or-self::node()/descendant::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/descendant::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/descendant::*:foo</xpath>
            <xpath>descendant-or-self::node()/descendant::ex:*</xpath>
            <xpath>descendant-or-self::node()/descendant::*</xpath>
            <xpath>descendant-or-self::node()/descendant::node()</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::foo</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::ex:foo</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::Q{http://example.com}foo</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::Q{http://example.com}*</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::*:foo</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::ex:*</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::*</xpath>
            <xpath>descendant-or-self::node()/descendant-or-self::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="crawling" result-sweep="consuming"/>
      </result>
   </test-case>
</test-set>