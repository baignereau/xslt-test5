<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.7.0.15" timeStamp="2017-02-15T11:40:37.702+01:00" target="JS">
 <co id="0" binds="">
  <template name="Q{}handle-test-set" flags="os" line="32" module="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" slots="6">
   <sequence role="body" vn="31" baseUri="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" ns="=http://www.w3.org/1999/xhtml xsl=http://www.w3.org/1999/XSL/Transform prop=http://saxonica.com/ns/html-property cat=http://www.w3.org/2012/10/xslt-test-catalog ixsl=http://saxonica.com/ns/interactiveXSLT style=http://saxonica.com/ns/html-style-property xs=http://www.w3.org/2001/XMLSchema" line="33">
    <param name="test-set-doc" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <let line="34" var="test-case-name" as="item()*" slot="1" eval="3">
     <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:query-params" type="map(*)"/>
      <str val="t"/>
     </ifCall>
     <let line="35" var="test-case" as="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}test-case)*" slot="2" eval="8">
      <docOrder intra="0">
       <let var="vv:loc893504292" as="xs:anyAtomicType*" slot="3" eval="3">
        <data>
         <varRef name="test-case-name" slot="1"/>
        </data>
        <filter flags="b">
         <slash>
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <varRef name="test-set-doc" slot="0"/>
          </treat>
          <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}test-case)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='test-case';"/>
         </slash>
         <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <varRef name="vv:loc893504292" slot="3"/>
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
          </data>
         </gcEE>
        </filter>
       </let>
      </docOrder>
      <sequence line="36">
       <resultDoc global="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
        <str role="href" val="#metadata"/>
        <elem role="content" line="38" name="pre" nsuri="http://www.w3.org/1999/xhtml" flags="d">
         <fn name="serialize">
          <varRef name="test-case" slot="2"/>
         </fn>
        </elem>
       </resultDoc>
       <resultDoc line="41" global="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
        <str role="href" val="#stylesheet"/>
        <elem role="content" line="43" name="pre" nsuri="http://www.w3.org/1999/xhtml" flags="d">
         <valueOf flags="l">
          <fn name="unparsed-text">
           <fn name="resolve-uri">
            <check card="?" diag="0|0||resolve-uri">
             <cvUntyped to="xs:string">
              <data>
               <slash>
                <conditionalSort>
                 <fn name="exists">
                  <tail start="2">
                   <varRef name="test-case" slot="2"/>
                  </tail>
                 </fn>
                 <docOrder intra="0">
                  <slash>
                   <varRef name="test-case" slot="2"/>
                   <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}stylesheet)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='stylesheet';"/>
                  </slash>
                 </docOrder>
                </conditionalSort>
                <axis name="attribute" nodeTest="attribute(Q{}file)" jsTest="return item.name=='file'"/>
               </slash>
              </data>
             </cvUntyped>
            </check>
            <check card="1" diag="0|1||resolve-uri">
             <fn name="base-uri">
              <check card="?" diag="0|0||base-uri">
               <varRef name="test-case" slot="2"/>
              </check>
             </fn>
            </check>
           </fn>
          </fn>
         </valueOf>
        </elem>
       </resultDoc>
       <resultDoc line="46" global="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
        <str role="href" val="#source"/>
        <let role="content" line="47" var="env" as="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}environment)*" slot="4" eval="3">
         <conditionalSort>
          <fn name="exists">
           <tail start="2">
            <varRef name="test-case" slot="2"/>
           </tail>
          </fn>
          <docOrder intra="0">
           <slash>
            <varRef name="test-case" slot="2"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}environment)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='environment';"/>
           </slash>
          </docOrder>
         </conditionalSort>
         <elem line="50" name="pre" nsuri="http://www.w3.org/1999/xhtml" flags="d">
          <valueOf flags="l">
           <fn name="unparsed-text">
            <fn name="resolve-uri">
             <cvUntyped to="xs:string">
              <data>
               <first line="48">
                <sequence>
                 <slash>
                  <conditionalSort>
                   <fn name="exists">
                    <tail start="2">
                     <varRef name="env" slot="4"/>
                    </tail>
                   </fn>
                   <docOrder intra="0">
                    <slash>
                     <varRef name="env" slot="4"/>
                     <axis name="child" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='source';"/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                  <axis name="attribute" nodeTest="attribute(Q{}file)" jsTest="return item.name=='file'"/>
                 </slash>
                 <slash>
                  <docOrder intra="0">
                   <slash>
                    <docOrder intra="0">
                     <let var="vv:loc373928166" as="xs:untypedAtomic*" slot="5" eval="3">
                      <data>
                       <slash>
                        <varRef name="env" slot="4"/>
                        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name=='ref'"/>
                       </slash>
                      </data>
                      <filter flags="b">
                       <slash>
                        <conditionalSort>
                         <fn name="exists">
                          <tail start="2">
                           <varRef name="test-case" slot="2"/>
                          </tail>
                         </fn>
                         <docOrder intra="0">
                          <slash>
                           <varRef name="test-case" slot="2"/>
                           <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
                          </slash>
                         </docOrder>
                        </conditionalSort>
                        <axis name="child" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}environment)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='environment';"/>
                       </slash>
                       <gcEE op="=" card="N:1" comp="CCC">
                        <varRef name="vv:loc373928166" slot="5"/>
                        <data>
                         <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                        </data>
                       </gcEE>
                      </filter>
                     </let>
                    </docOrder>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='source';"/>
                   </slash>
                  </docOrder>
                  <axis name="attribute" nodeTest="attribute(Q{}file)" jsTest="return item.name=='file'"/>
                 </slash>
                </sequence>
               </first>
              </data>
             </cvUntyped>
             <check card="1" diag="0|1||resolve-uri">
              <fn name="base-uri">
               <check card="?" diag="0|0||base-uri">
                <varRef name="test-case" slot="2"/>
               </check>
              </fn>
             </check>
            </fn>
           </fn>
          </valueOf>
         </elem>
        </let>
       </resultDoc>
      </sequence>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="1" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1641415002" type="item()?" line="16" module="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n&lt;=1;};">
   <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" vn="31" baseUri="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" ns="=http://www.w3.org/1999/xhtml xsl=http://www.w3.org/1999/XSL/Transform prop=http://saxonica.com/ns/html-property cat=http://www.w3.org/2012/10/xslt-test-catalog ixsl=http://saxonica.com/ns/interactiveXSLT style=http://saxonica.com/ns/html-style-property xs=http://www.w3.org/2001/XMLSchema" line="16" name="ixsl:window" type="item()?"/>
  </globalVariable>
 </co>
 <co id="2" binds="0">
  <template name="Q{}handle-catalog" flags="os" line="23" module="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" slots="1">
   <sequence role="body" vn="31" baseUri="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" ns="=http://www.w3.org/1999/xhtml xsl=http://www.w3.org/1999/XSL/Transform prop=http://saxonica.com/ns/html-property cat=http://www.w3.org/2012/10/xslt-test-catalog ixsl=http://saxonica.com/ns/interactiveXSLT style=http://saxonica.com/ns/html-style-property xs=http://www.w3.org/2001/XMLSchema" line="24">
    <param name="catalog-doc" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <message line="25">
     <valueOf role="select" flags="e">
      <fn name="concat">
       <str val="In handle-catalog... "/>
       <convert from="xs:integer" to="xs:string">
        <fn name="count">
         <varRef name="catalog-doc" slot="0"/>
        </fn>
       </convert>
      </fn>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
    <callT line="26" name="handle-test-set" bSlot="0">
     <withParam name="test-set-doc" flags="c" as="node()*">
      <fn line="27" name="document">
       <slash>
        <docOrder intra="0">
         <filter flags="b">
          <slash>
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
            <varRef name="catalog-doc" slot="0"/>
           </treat>
           <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2012/10/xslt-test-catalog}test-set)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://www.w3.org/2012/10/xslt-test-catalog'&amp;&amp;q.local=='test-set';"/>
          </slash>
          <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <data>
            <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
             <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:query-params" type="map(*)"/>
             <str val="s"/>
            </ifCall>
           </data>
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
           </data>
          </gcEE>
         </filter>
        </docOrder>
        <axis name="attribute" nodeTest="attribute(Q{}file)" jsTest="return item.name=='file'"/>
       </slash>
      </fn>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="3" binds="2 1">
  <template name="Q{}main" flags="os" line="10" module="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" slots="0">
   <sequence role="body" vn="31" baseUri="file:/e:/src/xslt30-test/report/viewer/testcase.xsl" ns="=http://www.w3.org/1999/xhtml xsl=http://www.w3.org/1999/XSL/Transform prop=http://saxonica.com/ns/html-property cat=http://www.w3.org/2012/10/xslt-test-catalog ixsl=http://saxonica.com/ns/interactiveXSLT style=http://saxonica.com/ns/html-style-property xs=http://www.w3.org/2001/XMLSchema" line="11">
    <message>
     <valueOf role="select" flags="Se">
      <str val="Started..."/>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
    <resultDoc line="12" global="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Wed Feb 15 11:40:37 CET 2017&#xD;&#xA;">
     <str role="href" val="#title"/>
     <valueOf role="content" flags="e">
      <fn name="concat">
       <str val="&#xA;            Test Case "/>
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <mergeAdj>
           <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
            <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:query-params" type="map(*)"/>
            <str val="t"/>
           </ifCall>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
       <str val=" (in test set "/>
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <mergeAdj>
           <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
            <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:query-params" type="map(*)"/>
            <str val="s"/>
           </ifCall>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
       <str val=") &#xA;        "/>
      </fn>
     </valueOf>
    </resultDoc>
    <callT line="15" name="handle-catalog" bSlot="0">
     <withParam name="catalog-doc" flags="c" as="document-node()?">
      <fn line="16" name="doc">
       <fn name="resolve-uri">
        <str val="../../catalog.xml"/>
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||resolve-uri">
         <check card="1" diag="0|1||resolve-uri">
          <cvUntyped to="xs:string">
           <data>
            <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
             <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1641415002" bSlot="1"/>
             <str val="location.href"/>
            </ifCall>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </fn>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="4" binds="">
  <mode onNo="TC" flags="dW" patternSlots="0"/>
 </co>
 <overridden/>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ 45e33019?>
